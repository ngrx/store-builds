{"version":3,"file":"store.es5.js","sources":["../../../modules/store/src/store_module.ts","../../../modules/store/src/selector.ts","../../../modules/store/src/store.ts","../../../modules/store/src/state.ts","../../../modules/store/src/scanned_actions_subject.ts","../../../modules/store/src/reducer_manager.ts","../../../modules/store/src/utils.ts","../../../modules/store/src/tokens.ts","../../../modules/store/src/actions_subject.ts"],"sourcesContent":["import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n} from './models';\nimport { compose, combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS } from './store';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager\n  ) {\n    features\n      .map((feature, index) => {\n        const featureReducerCollection = featureReducers.shift();\n        const reducers = featureReducerCollection[index];\n\n        return {\n          ...feature,\n          reducers,\n          initialState: _initialStateFactory(feature.initialState),\n        };\n      })\n      .forEach(feature => reducerManager.addFeature(feature));\n  }\n\n  ngOnDestroy() {\n    this.features.forEach(feature =>\n      this.reducerManager.removeFeature(feature)\n    );\n  }\n}\n\nexport type StoreConfig<T, V extends Action = Action> = {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n};\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: <StoreFeature<any, any>>{\n            key: featureName,\n            reducerFactory: config.reducerFactory\n              ? config.reducerFactory\n              : combineReducers,\n            metaReducers: config.metaReducers ? config.metaReducers : [],\n            initialState: config.initialState,\n          },\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>,\n  tokenReducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[],\n  tokenReducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map((reducer, index) => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n","import { Selector } from './models';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = { memoized: AnyFn; reset: () => void };\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport interface MemoizedSelector<State, Result>\n  extends Selector<State, Result> {\n  release(): void;\n  projector: AnyFn;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nexport function defaultMemoize(\n  t: AnyFn,\n  isEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  let lastResult: any = null;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function memoized(): any {\n    if (!lastArguments) {\n      lastResult = t.apply(null, arguments);\n      lastArguments = arguments;\n\n      return lastResult;\n    }\n\n    for (let i = 0; i < arguments.length; i++) {\n      if (!isEqual(arguments[i], lastArguments[i])) {\n        lastResult = t.apply(null, arguments);\n        lastArguments = arguments;\n\n        return lastResult;\n      }\n    }\n\n    return lastResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (S1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector(...input: any[]) {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[],\n  memoizedProjector: MemoizedProjection\n): any {\n  const args = selectors.map(fn => fn(state));\n\n  return memoizedProjector.memoized.apply(null, args);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    selectors: Selector<any, any>[],\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function(...input: any[]): Selector<any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function(...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function(state: any) {\n      return options.stateFn.apply(null, [state, selectors, memoizedProjector]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T> {\n  return createSelector(\n    (state: any) => state[featureName],\n    (featureState: any) => featureState\n  );\n}\n","import { Injectable, Provider } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { map } from 'rxjs/operator/map';\nimport { pluck } from 'rxjs/operator/pluck';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\nimport { Action, ActionReducer } from './models';\nimport { ActionsSubject } from './actions_subject';\nimport { StateObservable } from './state';\nimport { ReducerManager } from './reducer_manager';\n\n@Injectable()\nexport class Store<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Store<K>;\n  select<a extends keyof T>(key: a): Store<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Store<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Store<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Store<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Store<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Store<T[a][b][c][d][e][f]>;\n  select(\n    pathOrMapFn: ((state: T) => any) | string,\n    ...paths: string[]\n  ): Store<any> {\n    return select(pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends keyof T>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, K>(\n  mapFn: ((state: T) => K) | string\n): (source$: Observable<T>) => Store<K>;\nexport function select<T, a extends keyof T>(\n  key: a\n): (source$: Store<a>) => Store<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Store<T>) => Store<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(key1: a, key2: b, key3: c): (source$: Store<a>) => Store<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Store<a>) => Store<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Store<a>) => Store<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Store<a>) => Store<T[a][b][c][d][e][f]>;\nexport function select<T, K>(\n  pathOrMapFn: ((state: T) => any) | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Store<T>): Store<K> {\n    let mapped$: Store<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      mapped$ = pluck.call(source$, pathOrMapFn, ...paths);\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = map.call(source$, pathOrMapFn);\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return distinctUntilChanged.call(mapped$);\n  };\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { scan } from 'rxjs/operator/scan';\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { INITIAL_STATE } from './tokens';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = observeOn.call(actions$, queue);\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = withLatestFrom.call(actionsOnQueue$, reducer$);\n    const stateAndAction$: Observable<{\n      state: any;\n      action: Action;\n    }> = scan.call(withLatestReducer$, reduceState, { state: initialState });\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","import { Injectable, Provider, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  MetaReducer,\n  StoreFeature,\n} from './models';\nimport { INITIAL_STATE, INITIAL_REDUCERS, REDUCER_FACTORY } from './tokens';\nimport { omit, createReducerFactory, createFeatureReducer } from './utils';\nimport { ActionsSubject } from './actions_subject';\n\nexport abstract class ReducerObservable extends Observable<\n  ActionReducer<any, any>\n> {}\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\n\n@Injectable()\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\n  implements OnDestroy {\n  constructor(\n    private dispatcher: ReducerManagerDispatcher,\n    @Inject(INITIAL_STATE) private initialState: any,\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\n    @Inject(REDUCER_FACTORY)\n    private reducerFactory: ActionReducerFactory<any, any>\n  ) {\n    super(reducerFactory(reducers, initialState));\n  }\n\n  addFeature({\n    reducers,\n    reducerFactory,\n    metaReducers,\n    initialState,\n    key,\n  }: StoreFeature<any, any>) {\n    const reducer =\n      typeof reducers === 'function'\n        ? (state: any, action: any) =>\n            createFeatureReducer(reducers, metaReducers)(\n              state || initialState,\n              action\n            )\n        : createReducerFactory(reducerFactory, metaReducers)(\n            reducers,\n            initialState\n          );\n\n    this.addReducer(key, reducer);\n  }\n\n  removeFeature({ key }: StoreFeature<any, any>) {\n    this.removeReducer(key);\n  }\n\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\n    this.reducers = { ...this.reducers, [key]: reducer };\n\n    this.updateReducers();\n  }\n\n  removeReducer(key: string) {\n    this.reducers = omit(this.reducers, key);\n\n    this.updateReducers();\n  }\n\n  private updateReducers() {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({ type: UPDATE });\n  }\n\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\n  ReducerManager,\n  { provide: ReducerObservable, useExisting: ReducerManager },\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  MetaReducer,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state || initialState;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    return compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return reducerFactory;\n}\n\nexport function createFeatureReducer<T, V extends Action = Action>(\n  reducer: ActionReducer<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducer<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    return compose<ActionReducer<T, V>>(...metaReducers)(reducer);\n  }\n\n  return reducer;\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n"],"names":["distinctUntilChanged","map","pluck","Observable","BehaviorSubject","scan","withLatestFrom","observeOn","queue","Subject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AQAA,IAMa,IAAI,GANjB,CAMoB,kBAAwC,CAAA,CAAC;AAG7D;IAAoCI,kCAAuB;IAEzD;eACE,kBAAM,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACzB,CAAG;;;;;IAED,6BAAI,GAAJ,UAAK,MAAc;QACjB,EAAJ,CAAA,CAAQ,OAAO,MAAM,KAAK,WAAW,CAArC,CAAuC,CAAvC;YACM,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAC;QACrD,CAAK;QAAL,IAAA,CAAW,EAAX,CAAA,CAAe,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW,CAAjD,CAAmD,CAAnD;YACM,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAC;QAC/D,CAAK;QAED,iBAAM,IAAI,YAAC,MAAM,CAAC,CAAC;IACvB,CAAG;;;;IAED,iCAAQ,GAAR;;IAEF,CAAG;;;;IAED,oCAAW,GAAX;QACE,iBAAM,QAAQ,WAAE,CAAC;IACrB,CAAG;;CAtBH,CAAoCA,iBAAuB;;IAD3D,EAAA,IAAA,EAAC,UAAU,EAAX;;;;AA0BO,IAAM,yBAAyB,GAAe,CAAC,cAAc,CAAC,CAArE;;;;;ADlCA,IAEa,cAAc,GAAG,IAAI,cAAc,CAC9C,oCAAoC,CACrC,CAAC;AACF,IAAa,aAAa,GAAG,IAAI,cAAc,CAAC,2BAA2B,CAAC,CAAC;AAC7E,IAAa,eAAe,GAAG,IAAI,cAAc,CAC/C,6BAA6B,CAC9B,CAAC;AACF,IAAa,gBAAgB,GAAG,IAAI,cAAc,CAChD,sCAAsC,CACvC,CAAC;AACF,IAAa,gBAAgB,GAAG,IAAI,cAAc,CAChD,8BAA8B,CAC/B,CAAC;AACF,IAAa,iBAAiB,GAAG,IAAI,cAAc,CACjD,uCAAuC,CACxC,CAAC;AACF,IAAa,aAAa,GAAG,IAAI,cAAc,CAAC,2BAA2B,CAAC,CAAC;AAC7E,IAAa,cAAc,GAAG,IAAI,cAAc,CAAC,4BAA4B,CAAC,CAAC;AAC/E,IAAa,eAAe,GAAG,IAAI,cAAc,CAC/C,qCAAqC,CACtC,CAAC;AACF,IAAa,iBAAiB,GAAG,IAAI,cAAc,CACjD,uCAAuC,CACxC,CAAC;AACF,IAAa,uBAAuB,GAAG,IAAI,cAAc,CACvD,6CAA6C,CAC9C,CAAC;AACF,IAAa,gBAAgB,GAAG,IAAI,cAAc,CAChD,8BAA8B,CAC/B,CAFD;;;;;;;;;;ADjBA,yBACE,QAAa,EACb,YAAsB;IAAtB,6BAAA,EAAA,iBAAsB;IAEtB,IAAF,gBAAA,CAAQ,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,IAAF,gBAAA,CAAQ,aAAa,GAAQ,EAAE,CAAC;IAE9B,GAAF,CAAA,CAAO,IAAP,gBAAA,CAAW,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAA/C;QACI,IAAJ,gBAAA,CAAU,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3B,EAAJ,CAAA,CAAQ,OAAO,QAAQ,CAAC,GAAG,CAAC,KAAK,UAAU,CAA3C,CAA6C,CAA7C;YACM,aAAa,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;QACzC,CAAK;IACL,CAAG;IAED,IAAF,gBAAA,CAAQ,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAEpD,MAAF,CAAS,qBAAqB,KAAK,EAAE,MAAM;QACvC,KAAK,GAAG,KAAK,IAAI,YAAY,CAAC;QAC9B,IAAJ,gBAAA,CAAQ,UAAU,GAAG,KAAK,CAAC;QACvB,IAAJ,gBAAA,CAAU,SAAS,GAAQ,EAAE,CAAC;QAC1B,GAAJ,CAAA,CAAS,IAAT,gBAAA,CAAa,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAtD;YACM,IAAN,gBAAA,CAAY,GAAG,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;YAChC,IAAN,gBAAA,CAAY,OAAO,GAAQ,aAAa,CAAC,GAAG,CAAC,CAAC;YACxC,IAAN,gBAAA,CAAY,mBAAmB,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;YACvC,IAAN,gBAAA,CAAY,eAAe,GAAG,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;YAE7D,SAAS,CAAC,GAAG,CAAC,GAAG,eAAe,CAAC;YACjC,UAAU,GAAG,UAAU,IAAI,eAAe,KAAK,mBAAmB,CAAC;QACzE,CAAK;QACD,MAAJ,CAAW,UAAU,GAAG,SAAS,GAAG,KAAK,CAAC;IAC1C,CAAG,CAAC;AACJ,CAAC;;;;;;;AAED,cACE,MAAS,EACT,WAAoB;IAEpB,MAAF,CAAS,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;SACvB,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,KAAK,WAAW,EAAnB,CAAmB,CAAC;SAClC,MAAM,CAAC,UAAC,MAAM,EAAE,GAAG;QAAK,OAAA,MAAM,CAAC,MAAM,CAAC,MAAM,YAAI,GAAC,GAAG,IAAG,MAAM,CAAC,GAAG,CAAC,MAAG;;IAA7C,CAA6C,EAAE,EAAE,CAAC,CAAC;AAChF,CAAC;;;;;AAuBD;IAAwB,mBAAmB;SAAnB,UAAmB,EAAnB,qBAAmB,EAAnB,IAAmB;QAAnB,8BAAmB;;IACzC,MAAF,CAAS,UAAS,GAAQ;QACtB,EAAJ,CAAA,CAAQ,SAAS,CAAC,MAAM,KAAK,CAAC,CAA9B,CAAgC,CAAhC;YACM,MAAN,CAAa,GAAG,CAAC;QACjB,CAAK;QAED,IAAJ,gBAAA,CAAU,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAJ,gBAAA,CAAU,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEpC,MAAJ,CAAW,IAAI,CAAC,WAAW,CAAC,UAAC,QAAQ,EAAE,EAAE,IAAK,OAAA,EAAE,CAAC,QAAQ,CAAC,EAAZ,CAAY,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,CAAG,CAAC;AACJ,CAAC;;;;;;;AAED,8BACE,cAA0C,EAC1C,YAAkC;IAElC,EAAF,CAAA,CAAM,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAA5D,CAA8D,CAA9D;QACI,MAAJ,CAAW,OAAO,CAAC,KAAK,CAAC,IAAI,EAAM,YAAY,SAAE,cAAc,GAAE,CAAC;IAClE,CAAG;IAED,MAAF,CAAS,cAAc,CAAC;AACxB,CAAC;;;;;;;AAED,8BACE,OAA4B,EAC5B,YAAkC;IAElC,EAAF,CAAA,CAAM,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,CAA5D,CAA8D,CAA9D;QACI,MAAJ,CAAW,OAAO,eAAyB,YAAY,EAAE,OAAO,CAAC,CAAC;IAClE,CAAG;IAED,MAAF,CAAS,OAAO,CAAC;AACjB,CAAC;;;;;AD5GD;;;AAeA;IAAgDD,qCAE/C;IAFD;;IAEA,CAAI;IAAJ,wBAAI;AAAJ,CAAI,AAFJ,CAAgDA,YAE/C,GAAG;;;;AACJ;IAAuD,4CAAc;IAArE;;IAAA,CAAwE;IAAxE,+BAAwE;AAAxE,CAAwE,AAAxE,CAAuD,cAAc,GAAG;AACxE,IAAa,MAAM,GAAnB,CAAsB,6BAA8D,CAAA,CAAC;AAGrF;IAAoCC,kCAAwC;;;;;;;IAE1E,wBACU,UADZ,EAEmC,YAFnC,EAGsC,QAHtC,EAKY,cALZ;QAAE,YAOE,kBAAM,cAAc,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC,SAC9C;QAPS,KAAZ,CAAA,UAAsB,GAAV,UAAU,CAAtB;QACmC,KAAnC,CAAA,YAA+C,GAAZ,YAAY,CAA/C;QACsC,KAAtC,CAAA,QAA8C,GAAR,QAAQ,CAA9C;QAEY,KAAZ,CAAA,cAA0B,GAAd,cAAc,CAA1B;;IAGA,CAAG;;;;;IAED,mCAAU,GAAV,UAAW,EAMc;YALvB,sBAAQ,EACR,kCAAc,EACd,8BAAY,EACZ,8BAAY,EACZ,YAAG;QAEH,IAAJ,gBAAA,CAAU,OAAO,GACX,OAAO,QAAQ,KAAK,UAAU;cAC1B,UAAC,KAAU,EAAE,MAAW,IACtB,OAAA,oBAAoB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAC1C,KAAK,IAAI,YAAY,EACrB,MAAM,CACP,EAHD,CAGC;cACH,oBAAoB,CAAC,cAAc,EAAE,YAAY,CAAC,CAChD,QAAQ,EACR,YAAY,CACb,CAAC;QAER,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IAClC,CAAG;;;;;IAED,sCAAa,GAAb,UAAc,EAA+B;YAA7B,YAAG;QACjB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAG;;;;;;IAED,mCAAU,GAAV,UAAW,GAAW,EAAE,OAAgC;QACtD,IAAI,CAAC,QAAQ,GAAjB,MAAA,CAAA,MAAA,CAAA,EAAA,EAAyB,IAAI,CAAC,QAAQ,YAAE,GAAC,GAAG,IAAG,OAAO,MAAE,CAAC;QAErD,IAAI,CAAC,cAAc,EAAE,CAAC;;IAC1B,CAAG;;;;;IAED,sCAAa,GAAb,UAAc,GAAW;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAEzC,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAG;;;;IAEO,uCAAc,GAAd;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;;;;;IAGzC,oCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAG;;CAzDH,CAAoCA,iBAAwC;;IAD5E,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IAHA,EAAA,IAAA,EAAsB,wBAAwB,GAA9C;IAQA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,aAAa,EAAzB,EAAA,EAAA,EAAA;IACA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,gBAAgB,EAA5B,EAAA,EAAA,EAAA;IACA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,eAAe,EAA3B,EAAA,EAAA,EAAA;;AAsDO,IAAM,yBAAyB,GAAe;IACnD,cAAc;IACd,EAAE,OAAO,EAAE,iBAAiB,EAAE,WAAW,EAAE,cAAc,EAAE;IAC3D,EAAE,OAAO,EAAE,wBAAwB,EAAE,WAAW,EAAE,cAAc,EAAE;CACnE,CAAD;;;;;ADtFA;IAK2CK,yCAAe;IAL1D;;;;;;IAOE,2CAAW,GAAX;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAG;;CATH,CAK2CA,SAAe;;IAD1D,EAAA,IAAA,EAAC,UAAU,EAAX;;;;AAQO,IAAM,iCAAiC,GAAe;IAC3D,qBAAqB;CACtB,CAAD;;;;;ADdA;;;AAcA;IAA8CN,mCAAe;IAA7D;;IAAA,CAAgE;IAAhE,sBAAgE;AAAhE,CAAgE,AAAhE,CAA8CA,YAAe,GAAG;AAGhE;IAA8BC,yBAAoB;;;;;;;IAKhD,eACE,QAAwB,EACxB,QAA2B,EAC3B,cAAqC,EACd,YAJ3B;QAAE,YAME,kBAAM,YAAY,CAAC,SAepB;QAbC,IAAJ,gBAAA,CAAU,eAAe,GAAuBG,WAAS,CAAC,IAAI,CAAC,QAAQ,EAAEC,OAAK,CAAC,CAAC;QAC5E,IAAJ,gBAAA,CAAU,kBAAkB,GAEpBF,gBAAc,CAAC,IAAI,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACnD,IAAJ,gBAAA,CAAU,eAAe,GAGhBD,MAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,WAAW,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,CAAC;QAEzE,KAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,SAAS,CAAC,UAAC,EAAiB;gBAAf,gBAAK,EAAE,kBAAM;YACjE,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjB,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAK,CAAC,CAAC;;IACP,CAAG;;;;IAED,2BAAW,GAAX;QACE,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpB,CAAG;;CA/BH,CAA8BD,iBAAoB;AAClD,KAAA,CAAA,IAAA,GAAyB,IAAI,CAA7B;;IAFA,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IARA,EAAA,IAAA,EAAS,cAAc,GAAvB;IAGA,EAAA,IAAA,EAAS,iBAAiB,GAA1B;IACA,EAAA,IAAA,EAAS,qBAAqB,GAA9B;IAcA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,aAAa,EAAzB,EAAA,EAAA,EAAA;;;;;;;;AA6BA,qBACE,eAA6D,EAC7D,EAA2C;IAD3C,gCAAA,EAAA,oBAA2C,KAAK,EAAE,SAAS,EAAE;QAC5D,cAAM,EAAE,eAAO;IAER,IAAA,6BAAK,CAAqB;IAClC,MAAF,CAAS,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,MAAM,QAAA,EAAE,CAAC;AACnD,CAAC;AAED,IAAa,eAAe,GAAe;IACzC,KAAK;IACL,EAAE,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,KAAK,EAAE;CACjD,CAAD;;;;;ADlEA;IAa8BD,yBAAa;;;;;;IACzC,eACE,MAAuB,EACf,eAFZ,EAGY,cAHZ;QAAE,YAKE,iBAAO,SAGR;QANS,KAAZ,CAAA,eAA2B,GAAf,eAAe,CAA3B;QACY,KAAZ,CAAA,cAA0B,GAAd,cAAc,CAA1B;QAII,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACzB,CAAG;;;;;;IAyCD,sBAAM,GAAN,UACE,WAAyC;QACzC,eAAkB;aAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;YAAlB,8BAAkB;;QAElB,MAAJ,CAAW,MAAM,gBAAC,WAAW,SAAK,KAAK,GAAE,IAAI,CAAC,CAAC;IAC/C,CAAG;;;;;;IAED,oBAAI,GAAJ,UAAQ,QAAwB;QAC9B,IAAJ,gBAAA,CAAU,KAAK,GAAG,IAAI,KAAK,CAAI,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5E,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAE1B,MAAJ,CAAW,KAAK,CAAC;IACjB,CAAG;;;;;;IAED,wBAAQ,GAAR,UAAoC,MAAS;QAC3C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAG;;;;;IAED,oBAAI,GAAJ,UAAK,MAAc;QACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACtC,CAAG;;;;;IAED,qBAAK,GAAL,UAAM,GAAQ;QACZ,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpC,CAAG;;;;IAED,wBAAQ,GAAR;QACE,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAG;;;;;;;IAED,0BAAU,GAAV,UACE,GAAW,EACX,OAAsC;QAEtC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACjD,CAAG;;;;;;IAED,6BAAa,GAAb,UAAmC,GAAQ;QACzC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAG;;CAtGH,CAa8BA,YAAa;;IAD3C,EAAA,IAAA,EAAC,UAAU,EAAX;;;;IAHA,EAAA,IAAA,EAAS,eAAe,GAAxB;IADA,EAAA,IAAA,EAAS,cAAc,GAAvB;IAEA,EAAA,IAAA,EAAS,cAAc,GAAvB;;AA+FO,IAAM,eAAe,GAAe,CAAC,KAAK,CAAC,CAAC;;;;;;;AA4DnD,gBACE,WAAyC;IACzC,eAAkB;SAAlB,UAAkB,EAAlB,qBAAkB,EAAlB,IAAkB;QAAlB,8BAAkB;;IAElB,MAAF,CAAS,wBAAwB,OAAiB;QAC9C,IAAJ,gBAAA,CAAQ,OAAmB,CAAC;QAExB,EAAJ,CAAA,CAAQ,OAAO,WAAW,KAAK,QAAQ,CAAvC,CAAyC,CAAzC;YACM,OAAO,GAAGD,OAAK,CAAC,IAAI,OAAVA,OAAK,GAAM,OAAO,EAAE,WAAW,SAAK,KAAK,EAAC,CAAC;QAC3D,CAAK;QAAL,IAAA,CAAW,EAAX,CAAA,CAAe,OAAO,WAAW,KAAK,UAAU,CAAhD,CAAkD,CAAlD;YACM,OAAO,GAAGD,KAAG,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAC/C,CAAK;QAAL,IAAA,CAAW,CAAX;YACM,MAAM,IAAI,SAAS,CACjB,sBAAoB,OAAO,WAAW,0BAAuB;gBAC3D,kCAAkC,CACrC,CAAC;QACR,CAAK;QAED,MAAJ,CAAWD,sBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAG,CAAC;AACJ,CAAC;;;;;;;;;;;;;AD3KD,sBAA6B,CAAM,EAAE,CAAM;IACzC,MAAF,CAAS,CAAC,KAAK,CAAC,CAAC;AACjB,CAAC;;;;;;AAED,wBACE,CAAQ,EACR,OAAsB;IAAtB,wBAAA,EAAA,sBAAsB;IAEtB,IAAF,gBAAA,CAAM,aAAa,GAAsB,IAAI,CAAC;IAC5C,IAAF,gBAAA,CAAM,UAAU,GAAQ,IAAI,CAAC;;;;IAE3B;QACE,aAAa,GAAG,IAAI,CAAC;QACrB,UAAU,GAAG,IAAI,CAAC;IACtB,CAAG;;;;IAED;QACE,EAAJ,CAAA,CAAQ,CAAC,aAAa,CAAtB,CAAwB,CAAxB;YACM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACtC,aAAa,GAAG,SAAS,CAAC;YAE1B,MAAN,CAAa,UAAU,CAAC;QACxB,CAAK;QAED,GAAJ,CAAA,CAAS,IAAT,gBAAA,CAAa,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAA/C;YACM,EAAN,CAAA,CAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAlD,CAAoD,CAApD;gBACQ,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACtC,aAAa,GAAG,SAAS,CAAC;gBAE1B,MAAR,CAAe,UAAU,CAAC;YAC1B,CAAO;QACP,CAAK;QAED,MAAJ,CAAW,UAAU,CAAC;IACtB,CAAG;IAED,MAAF,CAAS,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,CAAC;AAC7B,CAAC;;;;;AAmJD;IAA+B,eAAe;SAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;QAAf,0BAAe;;IAC5C,MAAF,CAAS,qBAAqB,CAAC,cAAc,CAAC,eAAI,KAAK,EAAE;AACzD,CAAC;;;;;;;AAED,wBACE,KAAU,EACV,SAA+B,EAC/B,iBAAqC;IAErC,IAAF,gBAAA,CAAQ,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,KAAK,CAAC,EAAT,CAAS,CAAC,CAAC;IAE5C,MAAF,CAAS,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD,CAAC;;;;;;AAiBD,+BACE,OAAkB,EAClB,OAEC;IAFD,wBAAA,EAAA;QACE,OAAO,EAAE,cAAc;KACxB;IAED,MAAF,CAAS;QAAS,eAAe;aAAf,UAAe,EAAf,qBAAe,EAAf,IAAe;YAAf,0BAAe;;QAC7B,IAAJ,gBAAA,CAAQ,IAAI,GAAG,KAAK,CAAC;QACjB,EAAJ,CAAA,CAAQ,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAA9B,CAAgC,CAAhC;YACa,IAAA,cAAI,EAAE,oBAAO,CAAS;YAC7B,IAAI,GAAO,IAAI,QAAK,IAAI,CAAC,CAAC;QAChC,CAAK;QAED,IAAJ,gBAAA,CAAU,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACjD,IAAJ,gBAAA,CAAU,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxC,IAAJ,gBAAA,CAAU,iBAAiB,GAAG,SAAS,CAAC,MAAM,CACxC,UAAC,QAAa,IACZ,OAAA,QAAQ,CAAC,OAAO,IAAI,OAAO,QAAQ,CAAC,OAAO,KAAK,UAAU,EAA1D,CAA0D,CAC7D,CAAC;QAEF,IAAJ,gBAAA,CAAU,iBAAiB,GAAG,OAAO,CAAC;YAAS,mBAAmB;iBAAnB,UAAmB,EAAnB,qBAAmB,EAAnB,IAAmB;gBAAnB,8BAAmB;;YAC5D,MAAN,CAAa,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QAC9C,CAAK,CAAC,CAAC;QAEH,IAAJ,gBAAA,CAAU,aAAa,GAAG,cAAc,CAAC,UAAS,KAAU;YACtD,MAAN,CAAa,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAChF,CAAK,CAAC,CAAC;;;;QAEH;YACE,aAAa,CAAC,KAAK,EAAE,CAAC;YACtB,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAE1B,iBAAiB,CAAC,OAAO,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,OAAO,EAAE,EAAlB,CAAkB,CAAC,CAAC;QAChE,CAAK;QAED,MAAJ,CAAW,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC3C,OAAO,SAAA;YACP,SAAS,EAAE,iBAAiB,CAAC,QAAQ;SACtC,CAAC,CAAC;IACP,CAAG,CAAC;AACJ,CAAC;;;;;;AAED,+BACE,WAAmB;IAEnB,MAAF,CAAS,cAAc,CACnB,UAAC,KAAU,IAAK,OAAA,KAAK,CAAC,WAAW,CAAC,EAAlB,CAAkB,EAClC,UAAC,YAAiB,IAAK,OAAA,YAAY,EAAZ,CAAY,CACpC,CAAC;AACJ,CAAC;;;;;ADpRD;;;;;;IA+CE,yBACE,QAAwB,EACxB,QAA2B,EAC3B,eAAsC;IAH1C,CAIM;;CAnDN;;IA6CA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU,EAAE,EAAZ,EAAA;;;;IAbA,EAAA,IAAA,EAAoC,cAAc,GAAlD;IAIA,EAAA,IAAA,EAAE,iBAAiB,GAAnB;IAIA,EAAA,IAAA,EAAE,qBAAqB,GAAvB;;AAeA;;;;;;IACE,4BACkC,QADpC,EAEsC,eAFtC,EAGY,cAHZ;QACoC,IAApC,CAAA,QAA4C,GAAR,QAAQ,CAA5C;QACsC,IAAtC,CAAA,eAAqD,GAAf,eAAe,CAArD;QACY,IAAZ,CAAA,cAA0B,GAAd,cAAc,CAA1B;QAEI,QAAQ;aACL,GAAG,CAAC,UAAC,OAAO,EAAE,KAAK;YAClB,IAAR,gBAAA,CAAc,wBAAwB,GAAG,eAAe,CAAC,KAAK,EAAE,CAAC;YACzD,IAAR,gBAAA,CAAc,QAAQ,GAAG,wBAAwB,CAAC,KAAK,CAAC,CAAC;YAEjD,MAAR,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACa,OAAO,EADpB,EAEU,QAAQ,UAAA,EACR,YAAY,EAAE,oBAAoB,CAAC,OAAO,CAAC,YAAY,CAAC,EAHlE,CAAA,CAIU;QACV,CAAO,CAAC;aACD,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,EAAlC,CAAkC,CAAC,CAAC;IAC9D,CAAG;;;;IAED,wCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,IAC3B,OAAA,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,OAAO,CAAC,EAA1C,CAA0C,CAC3C,CAAC;IACN,CAAG;;CAxBH;;IADA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU,EAAE,EAAZ,EAAA;;;;IAGA,EAAA,IAAA,EAAA,KAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,cAAc,EAA1B,EAAA,EAAA,EAAA;IACA,EAAA,IAAA,EAAA,KAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,gBAAgB,EAA5B,EAAA,EAAA,EAAA;IAvBA,EAAA,IAAA,EAAE,cAAc,GAAhB;;AAsDA;IAAA;;;;;;;IAKS,mBAAO,GAAd,UACE,QAE8C,EAC9C,MAAkC;QAAlC,uBAAA,EAAA,WAAkC;QAElC,MAAJ,CAAW;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,MAAM,CAAC,YAAY,EAAE;gBAC1D;oBACE,OAAO,EAAE,aAAa;oBACtB,UAAU,EAAE,oBAAoB;oBAChC,IAAI,EAAE,CAAC,cAAc,CAAC;iBACvB;gBACD,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,EAAE,QAAQ,EAAE;gBAClD;oBACE,OAAO,EAAE,eAAe;oBACxB,WAAW,EACT,QAAQ,YAAY,cAAc,GAAG,QAAQ,GAAG,iBAAiB;iBACpE;gBACD;oBACE,OAAO,EAAE,gBAAgB;oBACzB,IAAI,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,CAAC,IAAI,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;oBAClE,UAAU,EAAE,oBAAoB;iBACjC;gBACD;oBACE,OAAO,EAAE,aAAa;oBACtB,QAAQ,EAAE,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,GAAG,EAAE;iBACzD;gBACD;oBACE,OAAO,EAAE,gBAAgB;oBACzB,QAAQ,EAAE,MAAM,CAAC,cAAc;0BAC3B,MAAM,CAAC,cAAc;0BACrB,eAAe;iBACpB;gBACD;oBACE,OAAO,EAAE,eAAe;oBACxB,IAAI,EAAE,CAAC,gBAAgB,EAAE,aAAa,CAAC;oBACvC,UAAU,EAAE,oBAAoB;iBACjC;gBACD,yBAAyB;gBACzB,yBAAyB;gBACzB,iCAAiC;gBACjC,eAAe;gBACf,eAAe;aAChB;SACF,CAAC;IACN,CAAG;;;;;;;IAYM,sBAAU,GAAjB,UACE,WAAmB,EACnB,QAI2C,EAC3C,MAAkC;QAAlC,uBAAA,EAAA,WAAkC;QAElC,MAAJ,CAAW;YACL,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,cAAc;oBACvB,KAAK,EAAE,IAAI;oBACX,QAAQ,EAAlB,gBAAA,CAAA,CAA4C;wBAChC,GAAG,EAAE,WAAW;wBAChB,cAAc,EAAE,MAAM,CAAC,cAAc;8BACjC,MAAM,CAAC,cAAc;8BACrB,eAAe;wBACnB,YAAY,EAAE,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,GAAG,EAAE;wBAC5D,YAAY,EAAE,MAAM,CAAC,YAAY;qBAClC,CAAA;iBACF;gBACD,EAAE,OAAO,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;gBAC/D;oBACE,OAAO,EAAE,uBAAuB;oBAChC,KAAK,EAAE,IAAI;oBACX,WAAW,EACT,QAAQ,YAAY,cAAc,GAAG,QAAQ,GAAG,iBAAiB;iBACpE;gBACD;oBACE,OAAO,EAAE,gBAAgB;oBACzB,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE;wBACJ,QAAQ;wBACR,iBAAiB;wBACjB,CAAC,IAAI,MAAM,CAAC,uBAAuB,CAAC,CAAC;qBACtC;oBACD,UAAU,EAAE,sBAAsB;iBACnC;aACF;SACF,CAAC;IACN,CAAG;;CA5GH;;IADA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU,EAAE,EAAZ,EAAA;;;;;;;;;;AAgHA,8BACE,QAAkB,EAClB,QAAoC,EACpC,aAAyC;IAEzC,MAAF,CAAS,QAAQ,YAAY,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;AAChF,CAAC;;;;;;;AAED,gCACE,QAAkB,EAClB,iBAA+C,EAC/C,sBAAoD;IAEpD,IAAF,gBAAA,CAAQ,QAAQ,GAAG,iBAAiB,CAAC,GAAG,CAAC,UAAC,OAAO,EAAE,KAAK;QACpD,MAAJ,CAAW,OAAO,YAAY,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;IAC/E,CAAG,CAAC,CAAC;IAEH,MAAF,CAAS,QAAQ,CAAC;AAClB,CAAC;;;;;AAED,8BAAqC,YAAiB;IACpD,EAAF,CAAA,CAAM,OAAO,YAAY,KAAK,UAAU,CAAxC,CAA0C,CAA1C;QACI,MAAJ,CAAW,YAAY,EAAE,CAAC;IAC1B,CAAG;IAED,MAAF,CAAS,YAAY,CAAC;AACtB,CAAC;;;;;;;;;;;;;;;;;"}