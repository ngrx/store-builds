{"version":3,"file":"store.js","sources":["../../../modules/store/index.ts","../../../modules/store/src/store_module.ts","../../../modules/store/src/store.ts","../../../modules/store/src/selector.ts","../../../modules/store/src/state.ts","../../../modules/store/src/scanned_actions_subject.ts","../../../modules/store/src/reducer_manager.ts","../../../modules/store/src/actions_subject.ts","../../../modules/store/src/tokens.ts","../../../modules/store/src/utils.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Action,ActionReducer,ActionReducerMap,ActionReducerFactory,Selector,StoreModule,Store,combineReducers,compose,createReducerFactory,ActionsSubject,INIT,ReducerManager,ReducerObservable,ReducerManagerDispatcher,UPDATE,ScannedActionsSubject,createSelector,createFeatureSelector,MemoizedSelector,State,StateObservable,reduceState,INITIAL_STATE,_REDUCER_FACTORY,REDUCER_FACTORY,INITIAL_REDUCERS,STORE_FEATURES,_INITIAL_STATE,META_REDUCERS,StoreRootModule,StoreFeatureModule,_initialStateFactory} from './public_api';\n\nexport {ACTIONS_SUBJECT_PROVIDERS as ɵc} from './src/actions_subject';\nexport {StoreFeature as ɵa} from './src/models';\nexport {REDUCER_MANAGER_PROVIDERS as ɵd} from './src/reducer_manager';\nexport {SCANNED_ACTIONS_SUBJECT_PROVIDERS as ɵe} from './src/scanned_actions_subject';\nexport {STATE_PROVIDERS as ɵf} from './src/state';\nexport {STORE_PROVIDERS as ɵb} from './src/store';","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n} from './models';\nimport { compose, combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS } from './store';\nexport class StoreRootModule {\n/**\n * @param {?} actions$\n * @param {?} reducer$\n * @param {?} scannedActions$\n */\nconstructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject\n  ) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ActionsSubject, },\n{type: ReducerObservable, },\n{type: ScannedActionsSubject, },\n];\n}\n\nfunction StoreRootModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreRootModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreRootModule.ctorParameters;\n}\n\nexport class StoreFeatureModule implements OnDestroy {\n/**\n * @param {?} features\n * @param {?} reducerManager\n */\nconstructor(\nprivate features: StoreFeature<any, any>[],\nprivate reducerManager: ReducerManager\n  ) {\n    features.forEach(feature => reducerManager.addFeature(feature));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.features.forEach(feature =>\n      this.reducerManager.removeFeature(feature)\n    );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [STORE_FEATURES, ] }, ]},\n{type: ReducerManager, },\n];\n}\n\nfunction StoreFeatureModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreFeatureModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreFeatureModule.ctorParameters;\n/** @type {?} */\nStoreFeatureModule.prototype.features;\n/** @type {?} */\nStoreFeatureModule.prototype.reducerManager;\n}\n\n\nexport type StoreConfig<T, V extends Action = Action> = {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: ActionReducer<T, V>[];\n};\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n/**\n * @param {?} reducers\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        reducers instanceof InjectionToken\n          ? { provide: INITIAL_REDUCERS, useExisting: reducers }\n          : { provide: INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n/**\n * @param {?} featureName\n * @param {?} reducers\n * @param {?=} config\n * @return {?}\n */\nstatic forFeature(\n    featureName: string,\n    reducers: ActionReducerMap<any, any> | ActionReducer<any, any>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: /** @type {?} */(( <StoreFeature<any, any>>{\n            key: featureName,\n            reducers: reducers,\n            reducerFactory: config.reducerFactory\n              ? config.reducerFactory\n              : combineReducers,\n            metaReducers: config.metaReducers ? config.metaReducers : [],\n            initialState: config.initialState,\n          })),\n        },\n      ],\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StoreModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreModule.ctorParameters;\n}\n\n/**\n * @param {?} initialState\n * @return {?}\n */\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Provider } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { map } from 'rxjs/operator/map';\nimport { pluck } from 'rxjs/operator/pluck';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\nimport { Action, ActionReducer } from './models';\nimport { ActionsSubject } from './actions_subject';\nimport { StateObservable } from './state';\nimport { ReducerManager } from './reducer_manager';\nimport { isSelector, createSelector } from './selector';\nexport class Store<T> extends Observable<T> implements Observer<Action> {\n/**\n * @param {?} state$\n * @param {?} actionsObserver\n * @param {?} reducerManager\n */\nconstructor(\n    state$: StateObservable,\nprivate actionsObserver: ActionsSubject,\nprivate reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Store<K>;\n  select<a extends keyof T>(key: a): Store<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Store<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Store<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Store<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Store<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Store<T[a][b][c][d][e][f]>;\n/**\n * @param {?} pathOrMapFn\n * @param {...?} paths\n * @return {?}\n */\nselect(\n    pathOrMapFn: ((state: T) => any) | string,\n    ...paths: string[]\n  ): Store<any> {\n    let /** @type {?} */ mapped$: Store<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      mapped$ = pluck.call(this, pathOrMapFn, ...paths);\n    } else if (typeof pathOrMapFn === 'function' && isSelector(pathOrMapFn)) {\n      mapped$ = map.call(this, pathOrMapFn);\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = map.call(this, createSelector(s => s, pathOrMapFn));\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return distinctUntilChanged.call(mapped$);\n  }\n/**\n * @template R\n * @param {?} operator\n * @return {?}\n */\nlift<R>(operator: Operator<T, R>): Store<R> {\n    const /** @type {?} */ store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n/**\n * @template V\n * @param {?} action\n * @return {?}\n */\ndispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: Action) {\n    this.actionsObserver.next(action);\n  }\n/**\n * @param {?} err\n * @return {?}\n */\nerror(err: any) {\n    this.actionsObserver.error(err);\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    this.actionsObserver.complete();\n  }\n/**\n * @template State, Actions\n * @param {?} key\n * @param {?} reducer\n * @return {?}\n */\naddReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n/**\n * @template Key\n * @param {?} key\n * @return {?}\n */\nremoveReducer<Key extends keyof T>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StateObservable, },\n{type: ActionsSubject, },\n{type: ReducerManager, },\n];\n}\n\nfunction Store_tsickle_Closure_declarations() {\n/** @type {?} */\nStore.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStore.ctorParameters;\n/** @type {?} */\nStore.prototype.actionsObserver;\n/** @type {?} */\nStore.prototype.reducerManager;\n}\n\n\nexport const /** @type {?} */ STORE_PROVIDERS: Provider[] = [Store];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Selector } from './models';\n\nexport interface MemoizedSelector<State, Result>\n  extends Selector<State, Result> {\n  release(): void;\n}\n\nexport type AnyFn = (...args: any[]) => any;\n/**\n * @param {?} t\n * @return {?}\n */\nexport function memoize(t: AnyFn): { memoized: AnyFn; reset: () => void } {\n  let /** @type {?} */ lastArguments: null | IArguments = null;\n  let /** @type {?} */ lastResult: any = null;\n/**\n * @return {?}\n */\nfunction reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n/**\n * @return {?}\n */\nfunction memoized(): any {\n    if (!lastArguments) {\n      lastResult = t.apply(null, arguments);\n      lastArguments = arguments;\n\n      return lastResult;\n    }\n    for (let /** @type {?} */ i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== lastArguments[i]) {\n        lastResult = t.apply(null, arguments);\n        lastArguments = arguments;\n\n        return lastResult;\n      }\n    }\n\n    return lastResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (S1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\n/**\n * @param {...?} args\n * @return {?}\n */\nexport function createSelector(...args: any[]): Selector<any, any> {\n  const /** @type {?} */ selectors = args.slice(0, args.length - 1);\n  const /** @type {?} */ projector = args[args.length - 1];\n  const /** @type {?} */ memoizedSelectors = selectors.filter(\n    (selector: any) =>\n      selector.release && typeof selector.release === 'function'\n  );\n\n  const { memoized, reset } = memoize(function(state: any) {\n    const /** @type {?} */ args = selectors.map(fn => fn(state));\n\n    return projector.apply(null, args);\n  });\n/**\n * @return {?}\n */\nfunction release() {\n    reset();\n\n    memoizedSelectors.forEach(selector => selector.release());\n  }\n\n  return Object.assign(memoized, { release });\n}\n/**\n * @template T\n * @param {?} featureName\n * @return {?}\n */\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T> {\n  const { memoized, reset } = memoize(function(state: any): any {\n    return state[featureName];\n  });\n\n  return Object.assign(memoized, { release: reset });\n}\n/**\n * @param {?} v\n * @return {?}\n */\nexport function isSelector(v: any): v is MemoizedSelector<any, any> {\n  return (\n    typeof v === 'function' && v.release && typeof v.release === 'function'\n  );\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { startWith } from 'rxjs/operator/startWith';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { scan } from 'rxjs/operator/scan';\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { INITIAL_STATE } from './tokens';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\n/**\n * @abstract\n */\nexport abstract class StateObservable extends Observable<any> {}\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = '@ngrx/store/init';\nprivate stateSubscription: Subscription;\n/**\n * @param {?} actions$\n * @param {?} reducer$\n * @param {?} scannedActions\n * @param {?} initialState\n */\nconstructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n     initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = observeOn.call(actions$, queue);\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = withLatestFrom.call(actionsOnQueue$, reducer$);\n    const stateAndAction$: Observable<{\n      state: any;\n      action: Action;\n    }> = scan.call(withLatestReducer$, reduceState, initialState);\n\n    this.stateSubscription = stateAndAction$.subscribe({\n      next: ({ state, action }) => {\n        this.next(state);\n        scannedActions.next(action);\n      },\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ActionsSubject, },\n{type: ReducerObservable, },\n{type: ScannedActionsSubject, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n];\n}\n\nfunction State_tsickle_Closure_declarations() {\n/** @type {?} */\nState.INIT;\n/** @type {?} */\nState.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nState.ctorParameters;\n/** @type {?} */\nState.prototype.stateSubscription;\n}\n\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\n/**\n * @template T, V\n * @param {?=} stateActionPair\n * @param {?=} __1\n * @return {?}\n */\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const /** @type {?} */ STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Provider, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Action } from './models';\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScannedActionsSubject_tsickle_Closure_declarations() {\n/** @type {?} */\nScannedActionsSubject.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScannedActionsSubject.ctorParameters;\n}\n\n\nexport const /** @type {?} */ SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n} from './models';\nimport { INITIAL_STATE, INITIAL_REDUCERS, REDUCER_FACTORY } from './tokens';\nimport { omit, createReducerFactory } from './utils';\nimport { ActionsSubject } from './actions_subject';\n/**\n * @abstract\n */\nexport abstract class ReducerObservable extends Observable<\n  ActionReducer<any, any>\n> {}\n/**\n * @abstract\n */\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\nexport const /** @type {?} */ UPDATE = '@ngrx/store/update-reducers';\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\n  implements OnDestroy {\n/**\n * @param {?} dispatcher\n * @param {?} initialState\n * @param {?} reducers\n * @param {?} reducerFactory\n */\nconstructor(\nprivate dispatcher: ReducerManagerDispatcher,\nprivate initialState: any,\nprivate reducers: ActionReducerMap<any, any>,\nprivate reducerFactory: ActionReducerFactory<any, any>\n  ) {\n    super(reducerFactory(reducers, initialState));\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\naddFeature({\n    reducers,\n    reducerFactory,\n    metaReducers,\n    initialState,\n    key,\n  }: StoreFeature<any, any>) {\n    const /** @type {?} */ reducer =\n      typeof reducers === 'function'\n        ? reducers\n        : createReducerFactory(reducerFactory, metaReducers)(\n            reducers,\n            initialState\n          );\n\n    this.addReducer(key, reducer);\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\nremoveFeature({ key }: StoreFeature<any, any>) {\n    this.removeReducer(key);\n  }\n/**\n * @param {?} key\n * @param {?} reducer\n * @return {?}\n */\naddReducer(key: string, reducer: ActionReducer<any, any>) {\n    this.reducers = { ...this.reducers, [key]: reducer };\n\n    this.updateReducers();\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveReducer(key: string) {\n    this.reducers = omit(this.reducers, key);\n\n    this.updateReducers();\n  }\n/**\n * @return {?}\n */\nprivate updateReducers() {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({ type: UPDATE });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ReducerManagerDispatcher, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_REDUCERS, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [REDUCER_FACTORY, ] }, ]},\n];\n}\n\nfunction ReducerManager_tsickle_Closure_declarations() {\n/** @type {?} */\nReducerManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReducerManager.ctorParameters;\n/** @type {?} */\nReducerManager.prototype.dispatcher;\n/** @type {?} */\nReducerManager.prototype.initialState;\n/** @type {?} */\nReducerManager.prototype.reducers;\n/** @type {?} */\nReducerManager.prototype.reducerFactory;\n}\n\n\nexport const /** @type {?} */ REDUCER_MANAGER_PROVIDERS: Provider[] = [\n  ReducerManager,\n  { provide: ReducerObservable, useExisting: ReducerManager },\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Action } from './models';\n\nexport const /** @type {?} */ INIT = '@ngrx/store/init';\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\nconstructor() {\n    super({ type: INIT });\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new Error(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new Error(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    /* noop */\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ActionsSubject_tsickle_Closure_declarations() {\n/** @type {?} */\nActionsSubject.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActionsSubject.ctorParameters;\n}\n\n\nexport const /** @type {?} */ ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OpaqueToken } from '@angular/core';\n\nexport const /** @type {?} */ _INITIAL_STATE = new OpaqueToken('_ngrx/store Initial State');\nexport const /** @type {?} */ INITIAL_STATE = new OpaqueToken('@ngrx/store Initial State');\nexport const /** @type {?} */ REDUCER_FACTORY = new OpaqueToken('@ngrx/store Reducer Factory');\nexport const /** @type {?} */ _REDUCER_FACTORY = new OpaqueToken(\n  '@ngrx/store Reducer Factory Provider'\n);\nexport const /** @type {?} */ INITIAL_REDUCERS = new OpaqueToken('@ngrx/store Initial Reducers');\nexport const /** @type {?} */ META_REDUCERS = new OpaqueToken('@ngrx/store Meta Reducers');\nexport const /** @type {?} */ STORE_FEATURES = new OpaqueToken('@ngrx/store Store Features');\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\n/**\n * @param {?} reducers\n * @param {?=} initialState\n * @return {?}\n */\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const /** @type {?} */ reducerKeys = Object.keys(reducers);\n  const /** @type {?} */ finalReducers: any = {};\n\n  for (let /** @type {?} */ i = 0; i < reducerKeys.length; i++) {\n    const /** @type {?} */ key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const /** @type {?} */ finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state = initialState, action) {\n    let /** @type {?} */ hasChanged = false;\n    const /** @type {?} */ nextState: any = {};\n    for (let /** @type {?} */ i = 0; i < finalReducerKeys.length; i++) {\n      const /** @type {?} */ key = finalReducerKeys[i];\n      const /** @type {?} */ reducer: any = finalReducers[key];\n      const /** @type {?} */ previousStateForKey = state[key];\n      const /** @type {?} */ nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n/**\n * @template T\n * @param {?} object\n * @param {?} keyToRemove\n * @return {?}\n */\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\n/**\n * @param {...?} functions\n * @return {?}\n */\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const /** @type {?} */ last = functions[functions.length - 1];\n    const /** @type {?} */ rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n/**\n * @param {?} reducerFactory\n * @param {?=} metaReducers\n * @return {?}\n */\nexport function createReducerFactory(\n  reducerFactory: ActionReducerFactory<any, any>,\n  metaReducers?: ActionReducer<any, any>[]\n): ActionReducerFactory<any, any> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    return compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return reducerFactory;\n}\n"],"names":[],"mappings":"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"}