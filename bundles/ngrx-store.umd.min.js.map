{"version":3,"sources":["ng://@ngrx/store/src/globals.ts","ng://@ngrx/store/src/action_creator.ts","ng://@ngrx/store/src/actions_subject.ts","ng://@ngrx/store/src/tokens.ts","ng://@ngrx/store/src/utils.ts","ng://@ngrx/store/src/reducer_manager.ts","ng://@ngrx/store/src/scanned_actions_subject.ts","ng://@ngrx/store/src/state.ts","ng://@ngrx/store/src/store.ts","ng://@ngrx/store/src/flags.ts","ng://@ngrx/store/src/selector.ts","ng://@ngrx/store/src/meta-reducers/utils.ts","ng://@ngrx/store/src/meta-reducers/immutability_reducer.ts","ng://@ngrx/store/src/meta-reducers/serialization_reducer.ts","ng://@ngrx/store/src/runtime_checks.ts","ng://@ngrx/store/src/meta-reducers/inNgZoneAssert_reducer.ts","ng://@ngrx/store/src/store_module.ts","ng://@ngrx/store/src/reducer_creator.ts"],"names":["REGISTERED_ACTION_TYPES","defineType","type","creator","Object","defineProperty","value","writable","INIT","ActionsSubject","_super","call","this","__extends","prototype","next","action","TypeError","complete","ngOnDestroy","Injectable","BehaviorSubject","ACTIONS_SUBJECT_PROVIDERS","_ROOT_STORE_GUARD","InjectionToken","_INITIAL_STATE","INITIAL_STATE","REDUCER_FACTORY","_REDUCER_FACTORY","INITIAL_REDUCERS","_INITIAL_REDUCERS","STORE_FEATURES","_STORE_REDUCERS","_FEATURE_REDUCERS","_FEATURE_CONFIGS","_STORE_FEATURES","_FEATURE_REDUCERS_TOKEN","FEATURE_REDUCERS","USER_PROVIDED_META_REDUCERS","META_REDUCERS","_RESOLVED_META_REDUCERS","USER_RUNTIME_CHECKS","_USER_RUNTIME_CHECKS","_ACTIVE_RUNTIME_CHECKS","_ACTION_TYPE_UNIQUENESS_CHECK","combineReducers","reducers","initialState","reducerKeys","keys","finalReducers","i","length","key","finalReducerKeys","state","undefined","hasChanged","nextState","reducer","previousStateForKey","nextStateForKey","compose","functions","_i","arguments","arg","last","slice","reduceRight","composed","fn","createReducerFactory","reducerFactory","metaReducers","Array","isArray","apply","__spread$1","ReducerObservable","Observable","ReducerManagerDispatcher","UPDATE","ReducerManager","dispatcher","_this","addFeature","feature","addFeatures","features","reduce","reducerDict","_a","r","createFeatureReducerFactory","addReducers","removeFeature","removeFeatures","removeReducers","map","p","addReducer","__assign$1","updateReducers","removeReducer","featureKey","featureKeys","forEach","object","keyToRemove","filter","result","assign","Inject","args","REDUCER_MANAGER_PROVIDERS","provide","useExisting","ScannedActionsSubject","Subject","SCANNED_ACTIONS_SUBJECT_PROVIDERS","StateObservable","State","actions$","reducer$","scannedActions","seed","stateAndAction$","pipe","observeOn","queueScheduler","withLatestFrom","scan","reduceState","stateSubscription","subscribe","unsubscribe","stateActionPair","_b","__read$2","STATE_PROVIDERS","Store","state$","actionsObserver","reducerManager","source","select","pathOrMapFn","paths","__spread$2","lift","operator","store","dispatch","error","err","STORE_PROVIDERS","propsOrPath","source$","mapped$","pathSlices","__spread","Boolean","pluck","distinctUntilChanged","_ngrxMockEnvironment","isNgrxMockEnvironment","isEqualCheck","a","b","isArgumentsChanged","lastArguments","comparator","defaultMemoize","projectionFn","isArgumentsEqual","isResultEqual","overrideResult","lastResult","memoized","newResult","reset","setResult","clearResult","createSelector","input","createSelectorFactory","__spread$3","defaultStateFn","selectors","props","memoizedProjector","args_1","memoize","options","stateFn","__read$4","head","tail","projector","memoizedSelectors","selector","release","memoizedState","RUNTIME_CHECK_URL","isUndefined","target","isNull","isObjectLike","isPlainObject","isObject","targetPrototype","getPrototypeOf","isFunction","freeze","targetIsFunction","getOwnPropertyNames","prop","startsWith","propertyName","hasOwnProperty","propValue","isFrozen","getUnserializable","path","isComponent","isNumber","isBoolean","isString","__spread$4","throwIfUnserializable","unserializable","context","unserializablePath","join","Error","createActiveRuntimeChecks","runtimeChecks","isDevMode","__assign$2","strictStateSerializability","strictActionSerializability","strictStateImmutability","strictActionImmutability","strictActionWithinNgZone","strictActionTypeUniqueness","createSerializationCheckMetaReducer","checks","serializationCheckMetaReducer","ignoreNgrxAction","createImmutabilityCheckMetaReducer","act","immutabilityCheckMetaReducer","createInNgZoneCheckMetaReducer","ngCore.NgZone","isInAngularZone","inNgZoneAssertMetaReducer","provideRuntimeChecks","useValue","useFactory","_runtimeChecksFactory","deps","multi","checkForActionTypeUniqueness","_actionTypeUniquenessCheck","config","duplicates","entries","__read$6","StoreRootModule","scannedActions$","guard","actionCheck","NgModule","Optional","StoreFeatureModule","featureReducers","root","feats","index","shift","__assign$3","_initialStateFactory","StoreModule","forRoot","ngModule","providers","_provideForRootGuard","SkipSelf","Injector","_createStoreReducers","_concatMetaReducers","forFeature","featureName","_createFeatureStore","_createFeatureReducers","injector","get","configs","featureStores","feat","conf","reducerCollection","userProvidedMetaReducers","concat","__assign","_as","featureState","console","warn","ons","Map","on_1","has","existingReducer_1","set","e_2","__values","types","_c","done","ons_1","ons_1_1","pop","__spread$5","_p","creators"],"mappings":"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","sourcesContent":["export let REGISTERED_ACTION_TYPES: { [actionType: string]: number } = {};\n\nexport function resetRegisteredActionTypes() {\n  REGISTERED_ACTION_TYPES = {};\n}\n","import {\n  Creator,\n  ActionCreator,\n  TypedAction,\n  FunctionWithParametersType,\n  NotAllowedCheck,\n  Props,\n} from './models';\nimport { REGISTERED_ACTION_TYPES } from './globals';\n\n// Action creators taken from ts-action library and modified a bit to better\n// fit current NgRx usage. Thank you Nicholas Jamieson (@cartant).\n\nexport function createAction<T extends string>(\n  type: T\n): ActionCreator<T, () => TypedAction<T>>;\nexport function createAction<T extends string, P extends object>(\n  type: T,\n  config: Props<P> & NotAllowedCheck<P>\n): ActionCreator<T, (props: P & NotAllowedCheck<P>) => P & TypedAction<T>>;\nexport function createAction<\n  T extends string,\n  P extends any[],\n  R extends object\n>(\n  type: T,\n  creator: Creator<P, R> & NotAllowedCheck<R>\n): FunctionWithParametersType<P, R & TypedAction<T>> & TypedAction<T>;\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nexport function createAction<T extends string, C extends Creator>(\n  type: T,\n  config?: { _as: 'props' } | C\n): ActionCreator<T> {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n\n  if (typeof config === 'function') {\n    return defineType(type, (...args: any[]) => ({\n      ...config(...args),\n      type,\n    }));\n  }\n  const as = config ? config._as : 'empty';\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({ type }));\n    case 'props':\n      return defineType(type, (props: object) => ({\n        ...props,\n        type,\n      }));\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nexport function props<P extends object>(): Props<P> {\n  return { _as: 'props', _p: undefined! };\n}\n\nexport function union<\n  C extends { [key: string]: ActionCreator<string, Creator> }\n>(creators: C): ReturnType<C[keyof C]> {\n  return undefined!;\n}\n\nfunction defineType<T extends string>(\n  type: T,\n  creator: Creator\n): ActionCreator<T> {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false,\n  });\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n","import { InjectionToken } from '@angular/core';\nimport { RuntimeChecks, MetaReducer } from './models';\n\nexport const _ROOT_STORE_GUARD = new InjectionToken<void>(\n  '@ngrx/store Internal Root Guard'\n);\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Internal Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\n\nexport const _FEATURE_CONFIGS = new InjectionToken(\n  '@ngrx/store Internal Feature Configs'\n);\n\nexport const _STORE_FEATURES = new InjectionToken(\n  '@ngrx/store Internal Store Features'\n);\n\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nexport const USER_PROVIDED_META_REDUCERS = new InjectionToken<MetaReducer[]>(\n  '@ngrx/store User Provided Meta Reducers'\n);\n\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nexport const META_REDUCERS = new InjectionToken<MetaReducer[]>(\n  '@ngrx/store Meta Reducers'\n);\n\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nexport const _RESOLVED_META_REDUCERS = new InjectionToken<MetaReducer>(\n  '@ngrx/store Internal Resolved Meta Reducers'\n);\n\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nexport const USER_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store User Runtime Checks Config'\n);\n\n/**\n * Runtime checks defined by the user via forRoot()\n */\nexport const _USER_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store Internal User Runtime Checks Config'\n);\n\n/**\n * Runtime checks currently in use\n */\nexport const _ACTIVE_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store Internal Runtime Checks'\n);\n\nexport const _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken<void>(\n  '@ngrx/store Check if Action types are unique'\n);\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerFactory,\n  ActionReducerMap,\n  MetaReducer,\n  InitialState,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose<A = any, F = any>(...functions: any[]): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    (reducerFactory as any) = compose.apply(null, [\n      ...metaReducers,\n      reducerFactory,\n    ]);\n  }\n\n  return (reducers: ActionReducerMap<T, V>, initialState?: InitialState<T>) => {\n    const reducer = reducerFactory(reducers);\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? (initialState as T) : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nexport function createFeatureReducerFactory<T, V extends Action = Action>(\n  metaReducers?: MetaReducer<T, V>[]\n): (reducer: ActionReducer<T, V>, initialState?: T) => ActionReducer<T, V> {\n  const reducerFactory =\n    Array.isArray(metaReducers) && metaReducers.length > 0\n      ? compose<ActionReducer<T, V>>(...metaReducers)\n      : (r: ActionReducer<T, V>) => r;\n\n  return (reducer: ActionReducer<T, V>, initialState?: T) => {\n    reducer = reducerFactory(reducer);\n\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { ActionsSubject } from './actions_subject';\r\nimport {\r\n  Action,\r\n  ActionReducer,\r\n  ActionReducerFactory,\r\n  ActionReducerMap,\r\n  StoreFeature,\r\n} from './models';\r\nimport { INITIAL_REDUCERS, INITIAL_STATE, REDUCER_FACTORY } from './tokens';\r\nimport {\r\n  createFeatureReducerFactory,\r\n  createReducerFactory,\r\n  omit,\r\n} from './utils';\r\n\r\nexport abstract class ReducerObservable extends Observable<\r\n  ActionReducer<any, any>\r\n> {}\r\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\r\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\r\n\r\n@Injectable()\r\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\r\n  implements OnDestroy {\r\n  constructor(\r\n    private dispatcher: ReducerManagerDispatcher,\r\n    @Inject(INITIAL_STATE) private initialState: any,\r\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\r\n    @Inject(REDUCER_FACTORY)\r\n    private reducerFactory: ActionReducerFactory<any, any>\r\n  ) {\r\n    super(reducerFactory(reducers, initialState));\r\n  }\r\n\r\n  addFeature(feature: StoreFeature<any, any>) {\r\n    this.addFeatures([feature]);\r\n  }\r\n\r\n  addFeatures(features: StoreFeature<any, any>[]) {\r\n    const reducers = features.reduce(\r\n      (\r\n        reducerDict,\r\n        { reducers, reducerFactory, metaReducers, initialState, key }\r\n      ) => {\r\n        const reducer =\r\n          typeof reducers === 'function'\r\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\r\n            : createReducerFactory(reducerFactory, metaReducers)(\r\n                reducers,\r\n                initialState\r\n              );\r\n\r\n        reducerDict[key] = reducer;\r\n        return reducerDict;\r\n      },\r\n      {} as { [key: string]: ActionReducer<any, any> }\r\n    );\r\n\r\n    this.addReducers(reducers);\r\n  }\r\n\r\n  removeFeature(feature: StoreFeature<any, any>) {\r\n    this.removeFeatures([feature]);\r\n  }\r\n\r\n  removeFeatures(features: StoreFeature<any, any>[]) {\r\n    this.removeReducers(features.map(p => p.key));\r\n  }\r\n\r\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\r\n    this.addReducers({ [key]: reducer });\r\n  }\r\n\r\n  addReducers(reducers: { [key: string]: ActionReducer<any, any> }) {\r\n    this.reducers = { ...this.reducers, ...reducers };\r\n    this.updateReducers(Object.keys(reducers));\r\n  }\r\n\r\n  removeReducer(featureKey: string) {\r\n    this.removeReducers([featureKey]);\r\n  }\r\n\r\n  removeReducers(featureKeys: string[]) {\r\n    featureKeys.forEach(key => {\r\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\r\n    });\r\n    this.updateReducers(featureKeys);\r\n  }\r\n\r\n  private updateReducers(featureKeys: string[]) {\r\n    this.next(this.reducerFactory(this.reducers, this.initialState));\r\n    this.dispatcher.next(<Action>{\r\n      type: UPDATE,\r\n      features: featureKeys,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.complete();\r\n  }\r\n}\r\n\r\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\r\n  ReducerManager,\r\n  { provide: ReducerObservable, useExisting: ReducerManager },\r\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\r\n];\r\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  queueScheduler,\n  Subscription,\n} from 'rxjs';\nimport { observeOn, scan, withLatestFrom } from 'rxjs/operators';\n\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\nimport { INITIAL_STATE } from './tokens';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = actions$.pipe(\n      observeOn(queueScheduler)\n    );\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n\n    const seed: StateActionPair<T> = { state: initialState };\n    const stateAndAction$: Observable<{\n      state: any;\n      action?: Action;\n    }> = withLatestReducer$.pipe(\n      scan<[Action, ActionReducer<T, Action>], StateActionPair<T>>(\n        reduceState,\n        seed\n      )\n    );\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","import { Injectable, Provider } from '@angular/core';\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer, FunctionIsNotAllowed } from './models';\nimport { ReducerManager } from './reducer_manager';\nimport { StateObservable } from './state';\n\n@Injectable()\nexport class Store<T = object> extends Observable<T>\n  implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Observable<K>;\n  select<K, Props = any>(\n    mapFn: (state: T, props: Props) => K,\n    props: Props\n  ): Observable<K>;\n  select<a extends keyof T>(key: a): Observable<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Observable<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Observable<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Observable<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Observable<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Observable<T[a][b][c][d][e][f]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e],\n    K = any\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f,\n    ...paths: string[]\n  ): Observable<K>;\n  select<Props = any, K = any>(\n    pathOrMapFn: ((state: T, props?: Props) => K) | string,\n    ...paths: string[]\n  ): Observable<any> {\n    return (select as any).call(null, pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(\n    action: V &\n      FunctionIsNotAllowed<\n        V,\n        'Functions are not allowed to be dispatched. Did you forget to call the action creator function?'\n      >\n  ) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends Extract<keyof T, string>>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, Props, K>(\n  mapFn: (state: T, props: Props) => K,\n  props?: Props\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, a extends keyof T>(\n  key: a\n): (source$: Observable<T>) => Observable<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Observable<T>) => Observable<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(\n  key1: a,\n  key2: b,\n  key3: c\n): (source$: Observable<T>) => Observable<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Observable<T>) => Observable<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e][f]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e],\n  K = any\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f,\n  ...paths: string[]\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, Props, K>(\n  pathOrMapFn: ((state: T, props?: Props) => any) | string,\n  propsOrPath?: Props | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Observable<T>): Observable<K> {\n    let mapped$: Observable<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [<string>propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(\n        map(source => pathOrMapFn(source, <Props>propsOrPath))\n      );\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n","let _ngrxMockEnvironment = false;\nexport function setNgrxMockEnvironment(value: boolean): void {\n  _ngrxMockEnvironment = value;\n}\nexport function isNgrxMockEnvironment(): boolean {\n  return _ngrxMockEnvironment;\n}\n","import { Selector, SelectorWithProps } from './models';\nimport { isDevMode } from '@angular/core';\nimport { isNgrxMockEnvironment } from './flags';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = {\n  memoized: AnyFn;\n  reset: () => void;\n  setResult: (result?: any) => void;\n  clearResult: () => void;\n};\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport type ComparatorFn = (a: any, b: any) => boolean;\n\nexport type DefaultProjectorFn<T> = (...args: any[]) => T;\n\nexport interface MemoizedSelector<\n  State,\n  Result,\n  ProjectorFn = DefaultProjectorFn<Result>\n> extends Selector<State, Result> {\n  release(): void;\n  projector: ProjectorFn;\n  setResult: (result?: Result) => void;\n  clearResult: () => void;\n}\n\nexport interface MemoizedSelectorWithProps<\n  State,\n  Props,\n  Result,\n  ProjectorFn = DefaultProjectorFn<Result>\n> extends SelectorWithProps<State, Props, Result> {\n  release(): void;\n  projector: ProjectorFn;\n  setResult: (result?: Result) => void;\n  clearResult: () => void;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nfunction isArgumentsChanged(\n  args: IArguments,\n  lastArguments: IArguments,\n  comparator: ComparatorFn\n) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function resultMemoize(\n  projectionFn: AnyFn,\n  isResultEqual: ComparatorFn\n) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nexport function defaultMemoize(\n  projectionFn: AnyFn,\n  isArgumentsEqual = isEqualCheck,\n  isResultEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  // tslint:disable-next-line:no-any anything could be the result.\n  let lastResult: any = null;\n  let overrideResult: any;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function setResult(result: any = undefined) {\n    overrideResult = { result };\n  }\n\n  function clearResult() {\n    overrideResult = undefined;\n  }\n\n  // tslint:disable-next-line:no-any anything could be the result.\n  function memoized(): any {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments as any);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    const newResult = projectionFn.apply(null, arguments as any);\n    lastArguments = arguments;\n\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n\n    return newResult;\n  }\n\n  return { memoized, reset, setResult, clearResult };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  selectors: [SelectorWithProps<State, Props, S1>],\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>\n  ],\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  s8: SelectorWithProps<State, Props, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>,\n    SelectorWithProps<State, Props, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector(\n  ...input: any[]\n): MemoizedSelector<any, any> | MemoizedSelectorWithProps<any, any, any> {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[] | SelectorWithProps<any, any, any>[],\n  props: any,\n  memoizedProjector: MemoizedProjection\n): any {\n  if (props === undefined) {\n    const args = (<Selector<any, any>[]>selectors).map((fn) => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = (<SelectorWithProps<any, any, any>[]>selectors).map((fn) =>\n    fn(state, props)\n  );\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    props: any,\n    selectors: Selector<any, any>[],\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => MemoizedSelector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => MemoizedSelector<T, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => MemoizedSelectorWithProps<T, Props, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => MemoizedSelectorWithProps<T, Props, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function (\n    ...input: any[]\n  ): MemoizedSelector<any, any> | MemoizedSelectorWithProps<any, any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function (...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function (state: any, props: any) {\n      return options.stateFn.apply(null, [\n        state,\n        selectors,\n        props,\n        memoizedProjector,\n      ]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach((selector) => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T>;\nexport function createFeatureSelector<T, V>(\n  featureName: keyof T\n): MemoizedSelector<T, V>;\nexport function createFeatureSelector(\n  featureName: any\n): MemoizedSelector<any, any> {\n  return createSelector(\n    (state: any) => {\n      const featureState = state[featureName];\n      if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n        console.warn(\n          `@ngrx/store: The feature name \\\"${featureName}\\\" does ` +\n            'not exist in the state, therefore createFeatureSelector ' +\n            'cannot access it.  Be sure it is imported in a loaded module ' +\n            `using StoreModule.forRoot('${featureName}', ...) or ` +\n            `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n            'state is intended to be undefined, as is the case with router ' +\n            'state, this development-only warning message can be ignored.'\n        );\n      }\n      return featureState;\n    },\n    (featureState: any) => featureState\n  );\n}\n","export const RUNTIME_CHECK_URL =\n  'https://ngrx.io/guide/store/configuration/runtime-checks';\n\nexport function isUndefined(target: any): target is undefined {\n  return target === undefined;\n}\n\nexport function isNull(target: any): target is null {\n  return target === null;\n}\n\nexport function isArray(target: any): target is Array<any> {\n  return Array.isArray(target);\n}\n\nexport function isString(target: any): target is string {\n  return typeof target === 'string';\n}\n\nexport function isBoolean(target: any): target is boolean {\n  return typeof target === 'boolean';\n}\n\nexport function isNumber(target: any): target is number {\n  return typeof target === 'number';\n}\n\nexport function isObjectLike(target: any): target is object {\n  return typeof target === 'object' && target !== null;\n}\n\nexport function isObject(target: any): target is object {\n  return isObjectLike(target) && !isArray(target);\n}\n\nexport function isPlainObject(target: any): target is object {\n  if (!isObject(target)) {\n    return false;\n  }\n\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\n\nexport function isFunction(target: any): target is Function {\n  return typeof target === 'function';\n}\n\nexport function isComponent(target: any) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\n\nexport function hasOwnProperty(target: object, propertyName: string): boolean {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n","import { ActionReducer, Action } from '../models';\nimport { isFunction, hasOwnProperty, isObjectLike } from './utils';\n\nexport function immutabilityCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function(state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n\n    const nextState = reducer(state, act);\n\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\n\nfunction freeze(target: any) {\n  Object.freeze(target);\n\n  const targetIsFunction = isFunction(target);\n\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n\n    if (\n      hasOwnProperty(target, prop) &&\n      (targetIsFunction\n        ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n        : true)\n    ) {\n      const propValue = target[prop];\n\n      if (\n        (isObjectLike(propValue) || isFunction(propValue)) &&\n        !Object.isFrozen(propValue)\n      ) {\n        freeze(propValue);\n      }\n    }\n  });\n\n  return target;\n}\n","import { ActionReducer, Action } from '../models';\nimport {\n  isPlainObject,\n  isUndefined,\n  isNull,\n  isNumber,\n  isBoolean,\n  isString,\n  isArray,\n  RUNTIME_CHECK_URL,\n  isComponent,\n} from './utils';\n\nexport function serializationCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function(state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n\n    const nextState = reducer(state, action);\n\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n\n    return nextState;\n  };\n}\n\nfunction getUnserializable(\n  target?: any,\n  path: string[] = []\n): false | { path: string[]; value: any } {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target,\n    };\n  }\n\n  const keys = Object.keys(target);\n  return keys.reduce<false | { path: string[]; value: any }>((result, key) => {\n    if (result) {\n      return result;\n    }\n\n    const value = (target as any)[key];\n\n    // Ignore Ivy components\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (\n      isUndefined(value) ||\n      isNull(value) ||\n      isNumber(value) ||\n      isBoolean(value) ||\n      isString(value) ||\n      isArray(value)\n    ) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n\n    return {\n      path: [...path, key],\n      value,\n    };\n  }, false);\n}\n\nfunction throwIfUnserializable(\n  unserializable: false | { path: string[]; value: any },\n  context: 'state' | 'action'\n) {\n  if (unserializable === false) {\n    return;\n  }\n\n  const unserializablePath = unserializable.path.join('.');\n  const error: any = new Error(\n    `Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`\n  );\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n","import { isDevMode, Provider } from '@angular/core';\nimport {\n  serializationCheckMetaReducer,\n  immutabilityCheckMetaReducer,\n  inNgZoneAssertMetaReducer,\n} from './meta-reducers';\nimport { RuntimeChecks, MetaReducer, Action } from './models';\nimport {\n  _USER_RUNTIME_CHECKS,\n  _ACTIVE_RUNTIME_CHECKS,\n  META_REDUCERS,\n  USER_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { REGISTERED_ACTION_TYPES } from './globals';\nimport { RUNTIME_CHECK_URL } from './meta-reducers/utils';\n\nexport function createActiveRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): RuntimeChecks {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks,\n    };\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false,\n  };\n}\n\nexport function createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionSerializability || strictStateSerializability\n      ? serializationCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionSerializability && !ignoreNgrxAction(action),\n          state: () => strictStateSerializability,\n        })\n      : reducer;\n}\n\nexport function createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionImmutability || strictStateImmutability\n      ? immutabilityCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionImmutability && !ignoreNgrxAction(action),\n          state: () => strictStateImmutability,\n        })\n      : reducer;\n}\n\nfunction ignoreNgrxAction(action: Action) {\n  return action.type.startsWith('@ngrx');\n}\n\nexport function createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionWithinNgZone\n      ? inNgZoneAssertMetaReducer(reducer, {\n          action: (action) =>\n            strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n      : reducer;\n}\n\nexport function provideRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): Provider[] {\n  return [\n    {\n      provide: _USER_RUNTIME_CHECKS,\n      useValue: runtimeChecks,\n    },\n    {\n      provide: USER_RUNTIME_CHECKS,\n      useFactory: _runtimeChecksFactory,\n      deps: [_USER_RUNTIME_CHECKS],\n    },\n    {\n      provide: _ACTIVE_RUNTIME_CHECKS,\n      deps: [USER_RUNTIME_CHECKS],\n      useFactory: createActiveRuntimeChecks,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createImmutabilityCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createSerializationCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createInNgZoneCheckMetaReducer,\n    },\n  ];\n}\n\nexport function checkForActionTypeUniqueness(): Provider[] {\n  return [\n    {\n      provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: _actionTypeUniquenessCheck,\n    },\n  ];\n}\n\nexport function _runtimeChecksFactory(\n  runtimeChecks: RuntimeChecks\n): RuntimeChecks {\n  return runtimeChecks;\n}\n\nexport function _actionTypeUniquenessCheck(config: RuntimeChecks): void {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n    .filter(([, registrations]) => registrations > 1)\n    .map(([type]) => type);\n\n  if (duplicates.length) {\n    throw new Error(\n      `Action types are registered more than once, ${duplicates\n        .map((type) => `\"${type}\"`)\n        .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`\n    );\n  }\n}\n","import * as ngCore from '@angular/core';\nimport { Action, ActionReducer } from '../models';\nimport { RUNTIME_CHECK_URL } from './utils';\n\nexport function inNgZoneAssertMetaReducer(\n  reducer: ActionReducer<any, Action>,\n  checks: { action: (action: Action) => boolean }\n) {\n  return function(state: any, action: Action) {\n    if (checks.action(action) && !ngCore.NgZone.isInAngularZone()) {\n      throw new Error(\n        `Action '${\n          action.type\n        }' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`\n      );\n    }\n    return reducer(state, action);\n  };\n}\n","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n  RuntimeChecks,\n} from './models';\nimport { combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n  _STORE_FEATURES,\n  _FEATURE_CONFIGS,\n  USER_PROVIDED_META_REDUCERS,\n  _RESOLVED_META_REDUCERS,\n  _ROOT_STORE_GUARD,\n  _ACTIVE_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\nimport {\n  provideRuntimeChecks,\n  checkForActionTypeUniqueness,\n} from './runtime_checks';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>,\n    @Optional()\n    @Inject(_ROOT_STORE_GUARD)\n    guard: any,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(_STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState),\n      };\n    });\n\n    reducerManager.addFeatures(feats);\n  }\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n\nexport interface StoreConfig<T, V extends Action = Action> {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n}\n\nexport interface RootStoreConfig<T, V extends Action = Action>\n  extends StoreConfig<T, V> {\n  runtimeChecks?: Partial<RuntimeChecks>;\n}\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: RootStoreConfig<T, V>\n  ): ModuleWithProviders<StoreRootModule>;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: RootStoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreRootModule> {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        {\n          provide: _ROOT_STORE_GUARD,\n          useFactory: _provideForRootGuard,\n          deps: [[Store, new Optional(), new SkipSelf()]],\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: USER_PROVIDED_META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _RESOLVED_META_REDUCERS,\n          deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n          useFactory: _concatMetaReducers,\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> | InjectionToken<StoreConfig<any, any>> = {}\n  ): ModuleWithProviders<StoreFeatureModule> {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: _FEATURE_CONFIGS,\n          multi: true,\n          useValue: config,\n        },\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: {\n            key: featureName,\n            reducerFactory:\n              !(config instanceof InjectionToken) && config.reducerFactory\n                ? config.reducerFactory\n                : combineReducers,\n            metaReducers:\n              !(config instanceof InjectionToken) && config.metaReducers\n                ? config.metaReducers\n                : [],\n            initialState:\n              !(config instanceof InjectionToken) && config.initialState\n                ? config.initialState\n                : undefined,\n          },\n        },\n        {\n          provide: _STORE_FEATURES,\n          deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n          useFactory: _createFeatureStore,\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureStore(\n  injector: Injector,\n  configs: StoreConfig<any, any>[] | InjectionToken<StoreConfig<any, any>>[],\n  featureStores: StoreFeature<any, any>[]\n) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory\n          ? conf.reducerFactory\n          : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState,\n      };\n    }\n    return feat;\n  });\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\nexport function _concatMetaReducers(\n  metaReducers: MetaReducer[],\n  userProvidedMetaReducers: MetaReducer[]\n): MetaReducer[] {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n\nexport function _provideForRootGuard(store: Store<any>): any {\n  if (store) {\n    throw new TypeError(\n      `StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`\n    );\n  }\n  return 'guarded';\n}\n","import { ActionCreator, ActionReducer, ActionType, Action } from './models';\n\n// Return type of the `on` fn.\nexport interface On<S> {\n  reducer: ActionReducer<S>;\n  types: string[];\n}\n\n// Specialized Reducer that is aware of the Action type it needs to handle\nexport interface OnReducer<S, C extends ActionCreator[]> {\n  (state: S, action: ActionType<C[number]>): S;\n}\n\nexport function on<C1 extends ActionCreator, S>(\n  creator1: C1,\n  reducer: OnReducer<S, [C1]>\n): On<S>;\nexport function on<C1 extends ActionCreator, C2 extends ActionCreator, S>(\n  creator1: C1,\n  creator2: C2,\n  reducer: OnReducer<S, [C1, C2]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  reducer: OnReducer<S, [C1, C2, C3]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  reducer: OnReducer<S, [C1, C2, C3, C4]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  C9 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  creator9: C9,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8, C9]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  C9 extends ActionCreator,\n  C10 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  creator9: C9,\n  creator10: C10,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10]>\n): On<S>;\nexport function on<S>(\n  creator: ActionCreator,\n  ...rest: (ActionCreator | OnReducer<S, [ActionCreator]>)[]\n): On<S>;\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * **To maintain type-safety**: pass 10 or less `ActionCreator`'s.\n * @returns an association of action types with a state change function.\n */\nexport function on(\n  ...args: (ActionCreator | Function)[]\n): { reducer: Function; types: string[] } {\n  const reducer = args.pop() as Function;\n  const types = args.reduce(\n    (result, creator) => [...result, (creator as ActionCreator).type],\n    [] as string[]\n  );\n  return { reducer, types };\n}\n\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`).  Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be returned from an exported `reducer` function, if you are using View Engine.\n * In case you are using Ivy the extra function `reducer` is not required.\n *\n * **Declaring a reducer creator with an exported reducer function**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\nexport function createReducer<S, A extends Action = Action>(\n  initialState: S,\n  ...ons: On<S>[]\n): ActionReducer<S, A> {\n  const map = new Map<string, ActionReducer<S, A>>();\n  for (let on of ons) {\n    for (let type of on.types) {\n      if (map.has(type)) {\n        const existingReducer = map.get(type) as ActionReducer<S, A>;\n        const newReducer: ActionReducer<S, A> = (state, action) =>\n          on.reducer(existingReducer(state, action), action);\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n\n  return function(state: S = initialState, action: A): S {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n"]}