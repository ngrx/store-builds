{"version":3,"sources":["ng://@ngrx/store/src/globals.ts","ng://@ngrx/store/src/action_creator.ts","ng://@ngrx/store/src/store.ts","ng://@ngrx/store/src/utils.ts","ng://@ngrx/store/src/actions_subject.ts","ng://@ngrx/store/src/flags.ts","ng://@ngrx/store/src/tokens.ts","ng://@ngrx/store/src/reducer_manager.ts","ng://@ngrx/store/src/scanned_actions_subject.ts","ng://@ngrx/store/src/selector.ts","ng://@ngrx/store/src/state.ts","ng://@ngrx/store/src/meta-reducers/utils.ts","ng://@ngrx/store/src/meta-reducers/immutability_reducer.ts","ng://@ngrx/store/src/meta-reducers/serialization_reducer.ts","ng://@ngrx/store/src/runtime_checks.ts","ng://@ngrx/store/src/meta-reducers/inNgZoneAssert_reducer.ts","ng://@ngrx/store/src/store_module.ts","ng://@ngrx/store/src/reducer_creator.ts"],"names":["REGISTERED_ACTION_TYPES","defineType","type","creator","Object","defineProperty","value","writable","Store","state$","actionsObserver","reducerManager","_this","_super","call","this","source","__extends","prototype","select","pathOrMapFn","paths","_i","arguments","length","apply","__spread$1","lift","operator","store","dispatch","action","next","error","err","complete","addReducer","key","reducer","removeReducer","Injectable","StateObservable","ActionsSubject","ReducerManager","Observable","STORE_PROVIDERS","propsOrPath","source$","mapped$","pathSlices","__spread","filter","Boolean","pipe","pluck","TypeError","map","distinctUntilChanged","combineReducers","reducers","initialState","reducerKeys","keys","finalReducers","i","finalReducerKeys","state","undefined","hasChanged","nextState","previousStateForKey","nextStateForKey","compose","functions","arg","last","slice","reduceRight","composed","fn","createReducerFactory","reducerFactory","metaReducers","Array","isArray","__spread$2","INIT","ngOnDestroy","BehaviorSubject","ACTIONS_SUBJECT_PROVIDERS","_ngrxMockEnvironment","isNgrxMockEnvironment","_ROOT_STORE_GUARD","InjectionToken","_INITIAL_STATE","INITIAL_STATE","REDUCER_FACTORY","_REDUCER_FACTORY","INITIAL_REDUCERS","_INITIAL_REDUCERS","STORE_FEATURES","_STORE_REDUCERS","_FEATURE_REDUCERS","_FEATURE_CONFIGS","_STORE_FEATURES","_FEATURE_REDUCERS_TOKEN","FEATURE_REDUCERS","USER_PROVIDED_META_REDUCERS","META_REDUCERS","_RESOLVED_META_REDUCERS","USER_RUNTIME_CHECKS","_USER_RUNTIME_CHECKS","_ACTIVE_RUNTIME_CHECKS","_ACTION_TYPE_UNIQUENESS_CHECK","ReducerObservable","ReducerManagerDispatcher","UPDATE","dispatcher","addFeature","feature","addFeatures","features","reduce","reducerDict","_a","r","createFeatureReducerFactory","addReducers","removeFeature","removeFeatures","removeReducers","p","__assign$1","updateReducers","featureKey","featureKeys","forEach","object","keyToRemove","result","assign","Inject","args","REDUCER_MANAGER_PROVIDERS","provide","useExisting","ScannedActionsSubject","Subject","SCANNED_ACTIONS_SUBJECT_PROVIDERS","isEqualCheck","a","b","isArgumentsChanged","lastArguments","comparator","defaultMemoize","projectionFn","isArgumentsEqual","isResultEqual","overrideResult","lastResult","memoized","newResult","reset","setResult","clearResult","createSelector","input","createSelectorFactory","__spread$3","defaultStateFn","selectors","props","memoizedProjector","args_1","memoize","options","stateFn","__read$3","head","tail","projector","memoizedSelectors","selector","release","memoizedState","State","actions$","reducer$","scannedActions","seed","stateAndAction$","observeOn","queueScheduler","withLatestFrom","scan","reduceState","stateSubscription","subscribe","unsubscribe","stateActionPair","_b","__read$4","STATE_PROVIDERS","RUNTIME_CHECK_URL","isUndefined","target","isNull","isObjectLike","isPlainObject","isObject","targetPrototype","getPrototypeOf","isFunction","freeze","targetIsFunction","getOwnPropertyNames","prop","startsWith","propertyName","hasOwnProperty","propValue","isFrozen","getUnserializable","path","isComponent","isNumber","isBoolean","isString","__spread$4","throwIfUnserializable","unserializable","context","unserializablePath","join","Error","createActiveRuntimeChecks","runtimeChecks","isDevMode","__assign$2","strictStateSerializability","strictActionSerializability","strictStateImmutability","strictActionImmutability","strictActionWithinNgZone","strictActionTypeUniqueness","createSerializationCheckMetaReducer","checks","serializationCheckMetaReducer","ignoreNgrxAction","createImmutabilityCheckMetaReducer","act","immutabilityCheckMetaReducer","createInNgZoneCheckMetaReducer","ngCore.NgZone","isInAngularZone","inNgZoneAssertMetaReducer","provideRuntimeChecks","useValue","useFactory","_runtimeChecksFactory","deps","multi","checkForActionTypeUniqueness","_actionTypeUniquenessCheck","config","duplicates","entries","__read$6","StoreRootModule","scannedActions$","guard","actionCheck","NgModule","Optional","StoreFeatureModule","featureReducers","root","feats","index","shift","__assign$3","_initialStateFactory","StoreModule","forRoot","ngModule","providers","_provideForRootGuard","SkipSelf","Injector","_createStoreReducers","_concatMetaReducers","forFeature","featureName","_createFeatureStore","_createFeatureReducers","injector","get","configs","featureStores","feat","conf","reducerCollection","userProvidedMetaReducers","concat","__assign","_as","featureState","console","warn","ons","Map","on_1","has","existingReducer_1","set","e_2","__values","types","_c","done","ons_1","ons_1_1","pop","__spread$5","_p","creators"],"mappings":"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","sourcesContent":["export let REGISTERED_ACTION_TYPES: { [actionType: string]: number } = {};\n\nexport function resetRegisteredActionTypes() {\n  REGISTERED_ACTION_TYPES = {};\n}\n","import {\n  Creator,\n  ActionCreator,\n  TypedAction,\n  FunctionWithParametersType,\n  NotAllowedCheck,\n  Props,\n} from './models';\nimport { REGISTERED_ACTION_TYPES } from './globals';\n\n// Action creators taken from ts-action library and modified a bit to better\n// fit current NgRx usage. Thank you Nicholas Jamieson (@cartant).\n\nexport function createAction<T extends string>(\n  type: T\n): ActionCreator<T, () => TypedAction<T>>;\nexport function createAction<T extends string, P extends object>(\n  type: T,\n  config: Props<P> & NotAllowedCheck<P>\n): ActionCreator<T, (props: P & NotAllowedCheck<P>) => P & TypedAction<T>>;\nexport function createAction<\n  T extends string,\n  P extends any[],\n  R extends object\n>(\n  type: T,\n  creator: Creator<P, R> & NotAllowedCheck<R>\n): FunctionWithParametersType<P, R & TypedAction<T>> & TypedAction<T>;\n/**\n * @description\n * Creates a configured `Creator` function that, when called, returns an object in the shape of the `Action` interface.\n *\n * Action creators reduce the explicitness of class-based action creators.\n *\n * @param type Describes the action that will be dispatched\n * @param config Additional metadata needed for the handling of the action.  See {@link createAction#usage-notes Usage Notes}.\n *\n * @usageNotes\n *\n * **Declaring an action creator**\n *\n * Without additional metadata:\n * ```ts\n * export const increment = createAction('[Counter] Increment');\n * ```\n * With additional metadata:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   props<{ user: User }>()\n * );\n * ```\n * With a function:\n * ```ts\n * export const loginSuccess = createAction(\n *   '[Auth/API] Login Success',\n *   (response: Response) => response.user\n * );\n * ```\n *\n * **Dispatching an action**\n *\n * Without additional metadata:\n * ```ts\n * store.dispatch(increment());\n * ```\n * With additional metadata:\n * ```ts\n * store.dispatch(loginSuccess({ user: newUser }));\n * ```\n *\n * **Referencing an action in a reducer**\n *\n * Using a switch statement:\n * ```ts\n * switch (action.type) {\n *   // ...\n *   case AuthApiActions.loginSuccess.type: {\n *     return {\n *       ...state,\n *       user: action.user\n *     };\n *   }\n * }\n * ```\n * Using a reducer creator:\n * ```ts\n * on(AuthApiActions.loginSuccess, (state, { user }) => ({ ...state, user }))\n * ```\n *\n *  **Referencing an action in an effect**\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(AuthApiActions.loginSuccess),\n *     // ...\n *   )\n * );\n * ```\n */\nexport function createAction<T extends string, C extends Creator>(\n  type: T,\n  config?: { _as: 'props' } | C\n): ActionCreator<T> {\n  REGISTERED_ACTION_TYPES[type] = (REGISTERED_ACTION_TYPES[type] || 0) + 1;\n\n  if (typeof config === 'function') {\n    return defineType(type, (...args: any[]) => ({\n      ...config(...args),\n      type,\n    }));\n  }\n  const as = config ? config._as : 'empty';\n  switch (as) {\n    case 'empty':\n      return defineType(type, () => ({ type }));\n    case 'props':\n      return defineType(type, (props: object) => ({\n        ...props,\n        type,\n      }));\n    default:\n      throw new Error('Unexpected config.');\n  }\n}\n\nexport function props<P extends object>(): Props<P> {\n  return { _as: 'props', _p: undefined! };\n}\n\nexport function union<\n  C extends { [key: string]: ActionCreator<string, Creator> }\n>(creators: C): ReturnType<C[keyof C]> {\n  return undefined!;\n}\n\nfunction defineType<T extends string>(\n  type: T,\n  creator: Creator\n): ActionCreator<T> {\n  return Object.defineProperty(creator, 'type', {\n    value: type,\n    writable: false,\n  });\n}\n","import { Injectable, Provider } from '@angular/core';\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map, pluck } from 'rxjs/operators';\n\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer, FunctionIsNotAllowed } from './models';\nimport { ReducerManager } from './reducer_manager';\nimport { StateObservable } from './state';\n\n@Injectable()\nexport class Store<T = object> extends Observable<T>\n  implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Observable<K>;\n  select<K, Props = any>(\n    mapFn: (state: T, props: Props) => K,\n    props: Props\n  ): Observable<K>;\n  select<a extends keyof T>(key: a): Observable<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Observable<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Observable<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Observable<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Observable<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Observable<T[a][b][c][d][e][f]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e],\n    K = any\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f,\n    ...paths: string[]\n  ): Observable<K>;\n  select<Props = any, K = any>(\n    pathOrMapFn: ((state: T, props?: Props) => K) | string,\n    ...paths: string[]\n  ): Observable<any> {\n    return (select as any).call(null, pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(\n    action: V &\n      FunctionIsNotAllowed<\n        V,\n        'Functions are not allowed to be dispatched. Did you forget to call the action creator function?'\n      >\n  ) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends Extract<keyof T, string>>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, Props, K>(\n  mapFn: (state: T, props: Props) => K,\n  props?: Props\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, a extends keyof T>(\n  key: a\n): (source$: Observable<T>) => Observable<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Observable<T>) => Observable<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(\n  key1: a,\n  key2: b,\n  key3: c\n): (source$: Observable<T>) => Observable<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Observable<T>) => Observable<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Observable<T>) => Observable<T[a][b][c][d][e][f]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e],\n  K = any\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f,\n  ...paths: string[]\n): (source$: Observable<T>) => Observable<K>;\nexport function select<T, Props, K>(\n  pathOrMapFn: ((state: T, props?: Props) => any) | string,\n  propsOrPath?: Props | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Observable<T>): Observable<K> {\n    let mapped$: Observable<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      const pathSlices = [<string>propsOrPath, ...paths].filter(Boolean);\n      mapped$ = source$.pipe(pluck(pathOrMapFn, ...pathSlices));\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = source$.pipe(\n        map(source => pathOrMapFn(source, <Props>propsOrPath))\n      );\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return mapped$.pipe(distinctUntilChanged());\n  };\n}\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerFactory,\n  ActionReducerMap,\n  MetaReducer,\n  InitialState,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose<A = any, F = any>(...functions: any[]): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    (reducerFactory as any) = compose.apply(null, [\n      ...metaReducers,\n      reducerFactory,\n    ]);\n  }\n\n  return (reducers: ActionReducerMap<T, V>, initialState?: InitialState<T>) => {\n    const reducer = reducerFactory(reducers);\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? (initialState as T) : state;\n      return reducer(state, action);\n    };\n  };\n}\n\nexport function createFeatureReducerFactory<T, V extends Action = Action>(\n  metaReducers?: MetaReducer<T, V>[]\n): (reducer: ActionReducer<T, V>, initialState?: T) => ActionReducer<T, V> {\n  const reducerFactory =\n    Array.isArray(metaReducers) && metaReducers.length > 0\n      ? compose<ActionReducer<T, V>>(...metaReducers)\n      : (r: ActionReducer<T, V>) => r;\n\n  return (reducer: ActionReducer<T, V>, initialState?: T) => {\n    reducer = reducerFactory(reducer);\n\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'function') {\n      throw new TypeError(`\n        Dispatch expected an object, instead it received a function.\n        If you're using the createAction function, make sure to invoke the function\n        before dispatching the action. For example, someAction should be someAction().`);\n    } else if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n","let _ngrxMockEnvironment = false;\nexport function setNgrxMockEnvironment(value: boolean): void {\n  _ngrxMockEnvironment = value;\n}\nexport function isNgrxMockEnvironment(): boolean {\n  return _ngrxMockEnvironment;\n}\n","import { InjectionToken } from '@angular/core';\nimport { RuntimeChecks, MetaReducer } from './models';\n\nexport const _ROOT_STORE_GUARD = new InjectionToken<void>(\n  '@ngrx/store Internal Root Guard'\n);\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Internal Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\n\nexport const _FEATURE_CONFIGS = new InjectionToken(\n  '@ngrx/store Internal Feature Configs'\n);\n\nexport const _STORE_FEATURES = new InjectionToken(\n  '@ngrx/store Internal Store Features'\n);\n\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n\n/**\n * User-defined meta reducers from StoreModule.forRoot()\n */\nexport const USER_PROVIDED_META_REDUCERS = new InjectionToken<MetaReducer[]>(\n  '@ngrx/store User Provided Meta Reducers'\n);\n\n/**\n * Meta reducers defined either internally by @ngrx/store or by library authors\n */\nexport const META_REDUCERS = new InjectionToken<MetaReducer[]>(\n  '@ngrx/store Meta Reducers'\n);\n\n/**\n * Concats the user provided meta reducers and the meta reducers provided on the multi\n * injection token\n */\nexport const _RESOLVED_META_REDUCERS = new InjectionToken<MetaReducer>(\n  '@ngrx/store Internal Resolved Meta Reducers'\n);\n\n/**\n * Runtime checks defined by the user via an InjectionToken\n * Defaults to `_USER_RUNTIME_CHECKS`\n */\nexport const USER_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store User Runtime Checks Config'\n);\n\n/**\n * Runtime checks defined by the user via forRoot()\n */\nexport const _USER_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store Internal User Runtime Checks Config'\n);\n\n/**\n * Runtime checks currently in use\n */\nexport const _ACTIVE_RUNTIME_CHECKS = new InjectionToken<RuntimeChecks>(\n  '@ngrx/store Internal Runtime Checks'\n);\n\nexport const _ACTION_TYPE_UNIQUENESS_CHECK = new InjectionToken<void>(\n  '@ngrx/store Check if Action types are unique'\n);\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { ActionsSubject } from './actions_subject';\r\nimport {\r\n  Action,\r\n  ActionReducer,\r\n  ActionReducerFactory,\r\n  ActionReducerMap,\r\n  StoreFeature,\r\n} from './models';\r\nimport { INITIAL_REDUCERS, INITIAL_STATE, REDUCER_FACTORY } from './tokens';\r\nimport {\r\n  createFeatureReducerFactory,\r\n  createReducerFactory,\r\n  omit,\r\n} from './utils';\r\n\r\nexport abstract class ReducerObservable extends Observable<\r\n  ActionReducer<any, any>\r\n> {}\r\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\r\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\r\n\r\n@Injectable()\r\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\r\n  implements OnDestroy {\r\n  constructor(\r\n    private dispatcher: ReducerManagerDispatcher,\r\n    @Inject(INITIAL_STATE) private initialState: any,\r\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\r\n    @Inject(REDUCER_FACTORY)\r\n    private reducerFactory: ActionReducerFactory<any, any>\r\n  ) {\r\n    super(reducerFactory(reducers, initialState));\r\n  }\r\n\r\n  addFeature(feature: StoreFeature<any, any>) {\r\n    this.addFeatures([feature]);\r\n  }\r\n\r\n  addFeatures(features: StoreFeature<any, any>[]) {\r\n    const reducers = features.reduce(\r\n      (\r\n        reducerDict,\r\n        { reducers, reducerFactory, metaReducers, initialState, key }\r\n      ) => {\r\n        const reducer =\r\n          typeof reducers === 'function'\r\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\r\n            : createReducerFactory(reducerFactory, metaReducers)(\r\n                reducers,\r\n                initialState\r\n              );\r\n\r\n        reducerDict[key] = reducer;\r\n        return reducerDict;\r\n      },\r\n      {} as { [key: string]: ActionReducer<any, any> }\r\n    );\r\n\r\n    this.addReducers(reducers);\r\n  }\r\n\r\n  removeFeature(feature: StoreFeature<any, any>) {\r\n    this.removeFeatures([feature]);\r\n  }\r\n\r\n  removeFeatures(features: StoreFeature<any, any>[]) {\r\n    this.removeReducers(features.map(p => p.key));\r\n  }\r\n\r\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\r\n    this.addReducers({ [key]: reducer });\r\n  }\r\n\r\n  addReducers(reducers: { [key: string]: ActionReducer<any, any> }) {\r\n    this.reducers = { ...this.reducers, ...reducers };\r\n    this.updateReducers(Object.keys(reducers));\r\n  }\r\n\r\n  removeReducer(featureKey: string) {\r\n    this.removeReducers([featureKey]);\r\n  }\r\n\r\n  removeReducers(featureKeys: string[]) {\r\n    featureKeys.forEach(key => {\r\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\r\n    });\r\n    this.updateReducers(featureKeys);\r\n  }\r\n\r\n  private updateReducers(featureKeys: string[]) {\r\n    this.next(this.reducerFactory(this.reducers, this.initialState));\r\n    this.dispatcher.next(<Action>{\r\n      type: UPDATE,\r\n      features: featureKeys,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.complete();\r\n  }\r\n}\r\n\r\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\r\n  ReducerManager,\r\n  { provide: ReducerObservable, useExisting: ReducerManager },\r\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\r\n];\r\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Selector, SelectorWithProps } from './models';\nimport { isDevMode } from '@angular/core';\nimport { isNgrxMockEnvironment } from './flags';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = {\n  memoized: AnyFn;\n  reset: () => void;\n  setResult: (result?: any) => void;\n  clearResult: () => void;\n};\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport type ComparatorFn = (a: any, b: any) => boolean;\n\nexport type DefaultProjectorFn<T> = (...args: any[]) => T;\n\nexport interface MemoizedSelector<\n  State,\n  Result,\n  ProjectorFn = DefaultProjectorFn<Result>\n> extends Selector<State, Result> {\n  release(): void;\n  projector: ProjectorFn;\n  setResult: (result?: Result) => void;\n  clearResult: () => void;\n}\n\nexport interface MemoizedSelectorWithProps<\n  State,\n  Props,\n  Result,\n  ProjectorFn = DefaultProjectorFn<Result>\n> extends SelectorWithProps<State, Props, Result> {\n  release(): void;\n  projector: ProjectorFn;\n  setResult: (result?: Result) => void;\n  clearResult: () => void;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nfunction isArgumentsChanged(\n  args: IArguments,\n  lastArguments: IArguments,\n  comparator: ComparatorFn\n) {\n  for (let i = 0; i < args.length; i++) {\n    if (!comparator(args[i], lastArguments[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function resultMemoize(\n  projectionFn: AnyFn,\n  isResultEqual: ComparatorFn\n) {\n  return defaultMemoize(projectionFn, isEqualCheck, isResultEqual);\n}\n\nexport function defaultMemoize(\n  projectionFn: AnyFn,\n  isArgumentsEqual = isEqualCheck,\n  isResultEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  // tslint:disable-next-line:no-any anything could be the result.\n  let lastResult: any = null;\n  let overrideResult: any;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function setResult(result: any = undefined) {\n    overrideResult = { result };\n  }\n\n  function clearResult() {\n    overrideResult = undefined;\n  }\n\n  // tslint:disable-next-line:no-any anything could be the result.\n  function memoized(): any {\n    if (overrideResult !== undefined) {\n      return overrideResult.result;\n    }\n\n    if (!lastArguments) {\n      lastResult = projectionFn.apply(null, arguments as any);\n      lastArguments = arguments;\n      return lastResult;\n    }\n\n    if (!isArgumentsChanged(arguments, lastArguments, isArgumentsEqual)) {\n      return lastResult;\n    }\n\n    const newResult = projectionFn.apply(null, arguments as any);\n    lastArguments = arguments;\n\n    if (isResultEqual(lastResult, newResult)) {\n      return lastResult;\n    }\n\n    lastResult = newResult;\n\n    return newResult;\n  }\n\n  return { memoized, reset, setResult, clearResult };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, Result>(\n  selectors: [SelectorWithProps<State, Props, S1>],\n  projector: (s1: S1, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>\n  ],\n  projector: (s1: S1, s2: S2, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, props: Props) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, Props, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  s1: SelectorWithProps<State, Props, S1>,\n  s2: SelectorWithProps<State, Props, S2>,\n  s3: SelectorWithProps<State, Props, S3>,\n  s4: SelectorWithProps<State, Props, S4>,\n  s5: SelectorWithProps<State, Props, S5>,\n  s6: SelectorWithProps<State, Props, S6>,\n  s7: SelectorWithProps<State, Props, S7>,\n  s8: SelectorWithProps<State, Props, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<\n  State,\n  Props,\n  S1,\n  S2,\n  S3,\n  S4,\n  S5,\n  S6,\n  S7,\n  S8,\n  Result\n>(\n  selectors: [\n    SelectorWithProps<State, Props, S1>,\n    SelectorWithProps<State, Props, S2>,\n    SelectorWithProps<State, Props, S3>,\n    SelectorWithProps<State, Props, S4>,\n    SelectorWithProps<State, Props, S5>,\n    SelectorWithProps<State, Props, S6>,\n    SelectorWithProps<State, Props, S7>,\n    SelectorWithProps<State, Props, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8,\n    props: Props\n  ) => Result\n): MemoizedSelectorWithProps<State, Props, Result>;\n\nexport function createSelector(\n  ...input: any[]\n): MemoizedSelector<any, any> | MemoizedSelectorWithProps<any, any, any> {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[] | SelectorWithProps<any, any, any>[],\n  props: any,\n  memoizedProjector: MemoizedProjection\n): any {\n  if (props === undefined) {\n    const args = (<Selector<any, any>[]>selectors).map((fn) => fn(state));\n    return memoizedProjector.memoized.apply(null, args);\n  }\n\n  const args = (<SelectorWithProps<any, any, any>[]>selectors).map((fn) =>\n    fn(state, props)\n  );\n  return memoizedProjector.memoized.apply(null, [...args, props]);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    props: any,\n    selectors: Selector<any, any>[],\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => MemoizedSelector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => MemoizedSelector<T, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => MemoizedSelectorWithProps<T, Props, V>;\nexport function createSelectorFactory<T = any, Props = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => MemoizedSelectorWithProps<T, Props, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function (\n    ...input: any[]\n  ): MemoizedSelector<any, any> | MemoizedSelectorWithProps<any, any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function (...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function (state: any, props: any) {\n      return options.stateFn.apply(null, [\n        state,\n        selectors,\n        props,\n        memoizedProjector,\n      ]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach((selector) => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n      setResult: memoizedState.setResult,\n      clearResult: memoizedState.clearResult,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T>;\nexport function createFeatureSelector<T, V>(\n  featureName: keyof T\n): MemoizedSelector<T, V>;\nexport function createFeatureSelector(\n  featureName: any\n): MemoizedSelector<any, any> {\n  return createSelector(\n    (state: any) => {\n      const featureState = state[featureName];\n      if (!isNgrxMockEnvironment() && isDevMode() && !(featureName in state)) {\n        console.warn(\n          `@ngrx/store: The feature name \\\"${featureName}\\\" does ` +\n            'not exist in the state, therefore createFeatureSelector ' +\n            'cannot access it.  Be sure it is imported in a loaded module ' +\n            `using StoreModule.forRoot('${featureName}', ...) or ` +\n            `StoreModule.forFeature('${featureName}', ...).  If the default ` +\n            'state is intended to be undefined, as is the case with router ' +\n            'state, this development-only warning message can be ignored.'\n        );\n      }\n      return featureState;\n    },\n    (featureState: any) => featureState\n  );\n}\n","import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\nimport {\n  BehaviorSubject,\n  Observable,\n  queueScheduler,\n  Subscription,\n} from 'rxjs';\nimport { observeOn, scan, withLatestFrom } from 'rxjs/operators';\n\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\nimport { INITIAL_STATE } from './tokens';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = actions$.pipe(\n      observeOn(queueScheduler)\n    );\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = actionsOnQueue$.pipe(withLatestFrom(reducer$));\n\n    const seed: StateActionPair<T> = { state: initialState };\n    const stateAndAction$: Observable<{\n      state: any;\n      action?: Action;\n    }> = withLatestReducer$.pipe(\n      scan<[Action, ActionReducer<T, Action>], StateActionPair<T>>(\n        reduceState,\n        seed\n      )\n    );\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","export const RUNTIME_CHECK_URL =\n  'https://ngrx.io/guide/store/configuration/runtime-checks';\n\nexport function isUndefined(target: any): target is undefined {\n  return target === undefined;\n}\n\nexport function isNull(target: any): target is null {\n  return target === null;\n}\n\nexport function isArray(target: any): target is Array<any> {\n  return Array.isArray(target);\n}\n\nexport function isString(target: any): target is string {\n  return typeof target === 'string';\n}\n\nexport function isBoolean(target: any): target is boolean {\n  return typeof target === 'boolean';\n}\n\nexport function isNumber(target: any): target is number {\n  return typeof target === 'number';\n}\n\nexport function isObjectLike(target: any): target is object {\n  return typeof target === 'object' && target !== null;\n}\n\nexport function isObject(target: any): target is object {\n  return isObjectLike(target) && !isArray(target);\n}\n\nexport function isPlainObject(target: any): target is object {\n  if (!isObject(target)) {\n    return false;\n  }\n\n  const targetPrototype = Object.getPrototypeOf(target);\n  return targetPrototype === Object.prototype || targetPrototype === null;\n}\n\nexport function isFunction(target: any): target is Function {\n  return typeof target === 'function';\n}\n\nexport function isComponent(target: any) {\n  return isFunction(target) && target.hasOwnProperty('ɵcmp');\n}\n\nexport function hasOwnProperty(target: object, propertyName: string): boolean {\n  return Object.prototype.hasOwnProperty.call(target, propertyName);\n}\n","import { ActionReducer, Action } from '../models';\nimport { isFunction, hasOwnProperty, isObjectLike } from './utils';\n\nexport function immutabilityCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function(state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n\n    const nextState = reducer(state, act);\n\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\n\nfunction freeze(target: any) {\n  Object.freeze(target);\n\n  const targetIsFunction = isFunction(target);\n\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('ɵ')) {\n      return;\n    }\n\n    if (\n      hasOwnProperty(target, prop) &&\n      (targetIsFunction\n        ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n        : true)\n    ) {\n      const propValue = target[prop];\n\n      if (\n        (isObjectLike(propValue) || isFunction(propValue)) &&\n        !Object.isFrozen(propValue)\n      ) {\n        freeze(propValue);\n      }\n    }\n  });\n\n  return target;\n}\n","import { ActionReducer, Action } from '../models';\nimport {\n  isPlainObject,\n  isUndefined,\n  isNull,\n  isNumber,\n  isBoolean,\n  isString,\n  isArray,\n  RUNTIME_CHECK_URL,\n  isComponent,\n} from './utils';\n\nexport function serializationCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function(state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n\n    const nextState = reducer(state, action);\n\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n\n    return nextState;\n  };\n}\n\nfunction getUnserializable(\n  target?: any,\n  path: string[] = []\n): false | { path: string[]; value: any } {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target,\n    };\n  }\n\n  const keys = Object.keys(target);\n  return keys.reduce<false | { path: string[]; value: any }>((result, key) => {\n    if (result) {\n      return result;\n    }\n\n    const value = (target as any)[key];\n\n    // Ignore Ivy components\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (\n      isUndefined(value) ||\n      isNull(value) ||\n      isNumber(value) ||\n      isBoolean(value) ||\n      isString(value) ||\n      isArray(value)\n    ) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n\n    return {\n      path: [...path, key],\n      value,\n    };\n  }, false);\n}\n\nfunction throwIfUnserializable(\n  unserializable: false | { path: string[]; value: any },\n  context: 'state' | 'action'\n) {\n  if (unserializable === false) {\n    return;\n  }\n\n  const unserializablePath = unserializable.path.join('.');\n  const error: any = new Error(\n    `Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`\n  );\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n","import { isDevMode, Provider } from '@angular/core';\nimport {\n  serializationCheckMetaReducer,\n  immutabilityCheckMetaReducer,\n  inNgZoneAssertMetaReducer,\n} from './meta-reducers';\nimport { RuntimeChecks, MetaReducer, Action } from './models';\nimport {\n  _USER_RUNTIME_CHECKS,\n  _ACTIVE_RUNTIME_CHECKS,\n  META_REDUCERS,\n  USER_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { REGISTERED_ACTION_TYPES } from './globals';\nimport { RUNTIME_CHECK_URL } from './meta-reducers/utils';\n\nexport function createActiveRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): RuntimeChecks {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks,\n    };\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false,\n  };\n}\n\nexport function createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionSerializability || strictStateSerializability\n      ? serializationCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionSerializability && !ignoreNgrxAction(action),\n          state: () => strictStateSerializability,\n        })\n      : reducer;\n}\n\nexport function createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionImmutability || strictStateImmutability\n      ? immutabilityCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionImmutability && !ignoreNgrxAction(action),\n          state: () => strictStateImmutability,\n        })\n      : reducer;\n}\n\nfunction ignoreNgrxAction(action: Action) {\n  return action.type.startsWith('@ngrx');\n}\n\nexport function createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionWithinNgZone\n      ? inNgZoneAssertMetaReducer(reducer, {\n          action: (action) =>\n            strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n      : reducer;\n}\n\nexport function provideRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): Provider[] {\n  return [\n    {\n      provide: _USER_RUNTIME_CHECKS,\n      useValue: runtimeChecks,\n    },\n    {\n      provide: USER_RUNTIME_CHECKS,\n      useFactory: _runtimeChecksFactory,\n      deps: [_USER_RUNTIME_CHECKS],\n    },\n    {\n      provide: _ACTIVE_RUNTIME_CHECKS,\n      deps: [USER_RUNTIME_CHECKS],\n      useFactory: createActiveRuntimeChecks,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createImmutabilityCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createSerializationCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createInNgZoneCheckMetaReducer,\n    },\n  ];\n}\n\nexport function checkForActionTypeUniqueness(): Provider[] {\n  return [\n    {\n      provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: _actionTypeUniquenessCheck,\n    },\n  ];\n}\n\nexport function _runtimeChecksFactory(\n  runtimeChecks: RuntimeChecks\n): RuntimeChecks {\n  return runtimeChecks;\n}\n\nexport function _actionTypeUniquenessCheck(config: RuntimeChecks): void {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n    .filter(([, registrations]) => registrations > 1)\n    .map(([type]) => type);\n\n  if (duplicates.length) {\n    throw new Error(\n      `Action types are registered more than once, ${duplicates\n        .map((type) => `\"${type}\"`)\n        .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`\n    );\n  }\n}\n","import * as ngCore from '@angular/core';\nimport { Action, ActionReducer } from '../models';\nimport { RUNTIME_CHECK_URL } from './utils';\n\nexport function inNgZoneAssertMetaReducer(\n  reducer: ActionReducer<any, Action>,\n  checks: { action: (action: Action) => boolean }\n) {\n  return function(state: any, action: Action) {\n    if (checks.action(action) && !ngCore.NgZone.isInAngularZone()) {\n      throw new Error(\n        `Action '${\n          action.type\n        }' running outside NgZone. ${RUNTIME_CHECK_URL}#strictactionwithinngzone`\n      );\n    }\n    return reducer(state, action);\n  };\n}\n","import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n  RuntimeChecks,\n} from './models';\nimport { combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n  _STORE_FEATURES,\n  _FEATURE_CONFIGS,\n  USER_PROVIDED_META_REDUCERS,\n  _RESOLVED_META_REDUCERS,\n  _ROOT_STORE_GUARD,\n  _ACTIVE_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\nimport {\n  provideRuntimeChecks,\n  checkForActionTypeUniqueness,\n} from './runtime_checks';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>,\n    @Optional()\n    @Inject(_ROOT_STORE_GUARD)\n    guard: any,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(_STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState),\n      };\n    });\n\n    reducerManager.addFeatures(feats);\n  }\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n\nexport interface StoreConfig<T, V extends Action = Action> {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n}\n\nexport interface RootStoreConfig<T, V extends Action = Action>\n  extends StoreConfig<T, V> {\n  runtimeChecks?: Partial<RuntimeChecks>;\n}\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: RootStoreConfig<T, V>\n  ): ModuleWithProviders<StoreRootModule>;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: RootStoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreRootModule> {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        {\n          provide: _ROOT_STORE_GUARD,\n          useFactory: _provideForRootGuard,\n          deps: [[Store, new Optional(), new SkipSelf()]],\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: USER_PROVIDED_META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _RESOLVED_META_REDUCERS,\n          deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n          useFactory: _concatMetaReducers,\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> | InjectionToken<StoreConfig<any, any>> = {}\n  ): ModuleWithProviders<StoreFeatureModule> {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: _FEATURE_CONFIGS,\n          multi: true,\n          useValue: config,\n        },\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: {\n            key: featureName,\n            reducerFactory:\n              !(config instanceof InjectionToken) && config.reducerFactory\n                ? config.reducerFactory\n                : combineReducers,\n            metaReducers:\n              !(config instanceof InjectionToken) && config.metaReducers\n                ? config.metaReducers\n                : [],\n            initialState:\n              !(config instanceof InjectionToken) && config.initialState\n                ? config.initialState\n                : undefined,\n          },\n        },\n        {\n          provide: _STORE_FEATURES,\n          deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n          useFactory: _createFeatureStore,\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureStore(\n  injector: Injector,\n  configs: StoreConfig<any, any>[] | InjectionToken<StoreConfig<any, any>>[],\n  featureStores: StoreFeature<any, any>[]\n) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory\n          ? conf.reducerFactory\n          : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState,\n      };\n    }\n    return feat;\n  });\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\nexport function _concatMetaReducers(\n  metaReducers: MetaReducer[],\n  userProvidedMetaReducers: MetaReducer[]\n): MetaReducer[] {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n\nexport function _provideForRootGuard(store: Store<any>): any {\n  if (store) {\n    throw new TypeError(\n      `StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`\n    );\n  }\n  return 'guarded';\n}\n","import { ActionCreator, ActionReducer, ActionType, Action } from './models';\n\n// Return type of the `on` fn.\nexport interface On<S> {\n  reducer: ActionReducer<S>;\n  types: string[];\n}\n\n// Specialized Reducer that is aware of the Action type it needs to handle\nexport interface OnReducer<S, C extends ActionCreator[]> {\n  (state: S, action: ActionType<C[number]>): S;\n}\n\nexport function on<C1 extends ActionCreator, S>(\n  creator1: C1,\n  reducer: OnReducer<S, [C1]>\n): On<S>;\nexport function on<C1 extends ActionCreator, C2 extends ActionCreator, S>(\n  creator1: C1,\n  creator2: C2,\n  reducer: OnReducer<S, [C1, C2]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  reducer: OnReducer<S, [C1, C2, C3]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  reducer: OnReducer<S, [C1, C2, C3, C4]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  C9 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  creator9: C9,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8, C9]>\n): On<S>;\nexport function on<\n  C1 extends ActionCreator,\n  C2 extends ActionCreator,\n  C3 extends ActionCreator,\n  C4 extends ActionCreator,\n  C5 extends ActionCreator,\n  C6 extends ActionCreator,\n  C7 extends ActionCreator,\n  C8 extends ActionCreator,\n  C9 extends ActionCreator,\n  C10 extends ActionCreator,\n  S\n>(\n  creator1: C1,\n  creator2: C2,\n  creator3: C3,\n  creator4: C4,\n  creator5: C5,\n  creator6: C6,\n  creator7: C7,\n  creator8: C8,\n  creator9: C9,\n  creator10: C10,\n  reducer: OnReducer<S, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10]>\n): On<S>;\nexport function on<S>(\n  creator: ActionCreator,\n  ...rest: (ActionCreator | OnReducer<S, [ActionCreator]>)[]\n): On<S>;\n/**\n * @description\n * Associates actions with a given state change function.\n * A state change function must be provided as the last parameter.\n *\n * @param args `ActionCreator`'s followed by a state change function.\n *\n * **To maintain type-safety**: pass 10 or less `ActionCreator`'s.\n * @returns an association of action types with a state change function.\n */\nexport function on(\n  ...args: (ActionCreator | Function)[]\n): { reducer: Function; types: string[] } {\n  const reducer = args.pop() as Function;\n  const types = args.reduce(\n    (result, creator) => [...result, (creator as ActionCreator).type],\n    [] as string[]\n  );\n  return { reducer, types };\n}\n\n/**\n * @description\n * Creates a reducer function to handle state transitions.\n *\n * Reducer creators reduce the explicitness of reducer functions with switch statements.\n *\n * @param initialState Provides a state value if the current state is `undefined`, as it is initially.\n * @param ons Associations between actions and state changes.\n * @returns A reducer function.\n *\n * @usageNotes\n *\n * - Must be used with `ActionCreator`'s (returned by `createAction`).  Cannot be used with class-based action creators.\n * - The returned `ActionReducer` should additionally be returned from an exported `reducer` function, if you are using View Engine.\n * In case you are using Ivy the extra function `reducer` is not required.\n *\n * **Declaring a reducer creator with an exported reducer function**\n *\n * ```ts\n * const featureReducer = createReducer(\n *   initialState,\n *   on(\n *     featureActions.actionOne,\n *     featureActions.actionTwo,\n *     (state, { updatedValue }) => ({ ...state, prop: updatedValue })\n *   ),\n *   on(featureActions.actionThree, () => initialState);\n * );\n *\n * export function reducer(state: State | undefined, action: Action) {\n *   return featureReducer(state, action);\n * }\n * ```\n */\nexport function createReducer<S, A extends Action = Action>(\n  initialState: S,\n  ...ons: On<S>[]\n): ActionReducer<S, A> {\n  const map = new Map<string, ActionReducer<S, A>>();\n  for (let on of ons) {\n    for (let type of on.types) {\n      if (map.has(type)) {\n        const existingReducer = map.get(type) as ActionReducer<S, A>;\n        const newReducer: ActionReducer<S, A> = (state, action) =>\n          on.reducer(existingReducer(state, action), action);\n        map.set(type, newReducer);\n      } else {\n        map.set(type, on.reducer);\n      }\n    }\n  }\n\n  return function(state: S = initialState, action: A): S {\n    const reducer = map.get(action.type);\n    return reducer ? reducer(state, action) : state;\n  };\n}\n"]}