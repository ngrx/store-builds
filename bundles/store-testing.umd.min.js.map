{"version":3,"sources":["modules/store/store-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ngrx","store","testing","tslib","ng","core","rxjs","this","tslib_1","MockState","_super","call","__extends","__decorate","Injectable","__metadata","BehaviorSubject","MockStore","state$","actionsObserver","reducerManager","initialState","_this","resetSelectors","next","scannedActions$","asObservable","MockStore_1","prototype","setState","nextState","overrideSelector","selector","value","selectors","set","createSelector","setResult","forEach","_","release","clear","select","has","get","addReducer","removeReducer","Map","__param","Inject","INITIAL_STATE","ActionsSubject","ReducerManager","Object","Store","MockReducerManager","provideMockStore","config","provide","useValue","StateObservable","useClass","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license NgRx 7.4.0+22.sha-280a3b8\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/core'), require('rxjs'), require('@ngrx/store')) :\n    typeof define === 'function' && define.amd ? define('@ngrx/store/testing', ['exports', 'tslib', '@angular/core', 'rxjs', '@ngrx/store'], factory) :\n    (global = global || self, factory((global.ngrx = global.ngrx || {}, global.ngrx.store = global.ngrx.store || {}, global.ngrx.store.testing = {}), global.tslib, global.ng.core, global.rxjs, global['@ngrx/store']));\n}(this, function (exports, tslib_1, core, rxjs, store) { 'use strict';\n\n    var MockState = /** @class */ (function (_super) {\n        tslib_1.__extends(MockState, _super);\n        function MockState() {\n            return _super.call(this, {}) || this;\n        }\n        MockState = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [])\n        ], MockState);\n        return MockState;\n    }(rxjs.BehaviorSubject));\n\n    var MockStore = /** @class */ (function (_super) {\n        tslib_1.__extends(MockStore, _super);\n        function MockStore(state$, actionsObserver, reducerManager, initialState) {\n            var _this = _super.call(this, state$, actionsObserver, reducerManager) || this;\n            _this.state$ = state$;\n            _this.initialState = initialState;\n            _this.resetSelectors();\n            _this.state$.next(_this.initialState);\n            _this.scannedActions$ = actionsObserver.asObservable();\n            return _this;\n        }\n        MockStore_1 = MockStore;\n        MockStore.prototype.setState = function (nextState) {\n            this.state$.next(nextState);\n        };\n        MockStore.prototype.overrideSelector = function (selector, value) {\n            MockStore_1.selectors.set(selector, value);\n            if (typeof selector === 'string') {\n                var stringSelector = store.createSelector(function () { }, function () { return value; });\n                return stringSelector;\n            }\n            selector.setResult(value);\n            return selector;\n        };\n        MockStore.prototype.resetSelectors = function () {\n            MockStore_1.selectors.forEach(function (_, selector) {\n                if (typeof selector !== 'string') {\n                    selector.release();\n                    selector.setResult();\n                }\n            });\n            MockStore_1.selectors.clear();\n        };\n        MockStore.prototype.select = function (selector) {\n            if (MockStore_1.selectors.has(selector)) {\n                return new rxjs.BehaviorSubject(MockStore_1.selectors.get(selector)).asObservable();\n            }\n            return _super.prototype.select.call(this, selector);\n        };\n        MockStore.prototype.addReducer = function () {\n            /* noop */\n        };\n        MockStore.prototype.removeReducer = function () {\n            /* noop */\n        };\n        var MockStore_1;\n        MockStore.selectors = new Map();\n        MockStore = MockStore_1 = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__param(3, core.Inject(store.INITIAL_STATE)),\n            tslib_1.__metadata(\"design:paramtypes\", [MockState,\n                store.ActionsSubject,\n                store.ReducerManager, Object])\n        ], MockStore);\n        return MockStore;\n    }(store.Store));\n\n    var MockReducerManager = /** @class */ (function (_super) {\n        tslib_1.__extends(MockReducerManager, _super);\n        function MockReducerManager() {\n            return _super.call(this, function () { return undefined; }) || this;\n        }\n        MockReducerManager = tslib_1.__decorate([\n            core.Injectable(),\n            tslib_1.__metadata(\"design:paramtypes\", [])\n        ], MockReducerManager);\n        return MockReducerManager;\n    }(rxjs.BehaviorSubject));\n\n    function provideMockStore(config) {\n        if (config === void 0) { config = {}; }\n        return [\n            store.ActionsSubject,\n            MockState,\n            { provide: store.INITIAL_STATE, useValue: config.initialState },\n            { provide: store.StateObservable, useClass: MockState },\n            { provide: store.ReducerManager, useClass: MockReducerManager },\n            { provide: store.Store, useClass: MockStore },\n        ];\n    }\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.provideMockStore = provideMockStore;\n    exports.MockReducerManager = MockReducerManager;\n    exports.MockState = MockState;\n    exports.MockStore = MockStore;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=store-testing.umd.js.map\n"]}