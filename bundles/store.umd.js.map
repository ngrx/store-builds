{"version":3,"file":"store.umd.js","sources":["../../../modules/store/src/selector.ts","../../../modules/store/index.ts","../../../modules/store/src/store_module.ts","../../../modules/store/src/store.ts","../../../modules/store/src/state.ts","../../../modules/store/src/scanned_actions_subject.ts","../../../modules/store/src/reducer_manager.ts","../../../modules/store/src/actions_subject.ts","../../../modules/store/src/tokens.ts","../../../modules/store/src/utils.ts"],"sourcesContent":["import { Selector } from './models';\n\n\nexport interface MemoizedSelector<State, Result> extends Selector<State, Result> {\n  release(): void;\n}\n\nexport type AnyFn = (...args: any[]) => any;\n/**\n * @param {?} t\n * @return {?}\n */\nexport function memoize(t: AnyFn): { memoized: AnyFn, reset: () => void } {\n  let /** @type {?} */ lastArguments: null | IArguments = null;\n  let /** @type {?} */ lastResult: any = null;\n/**\n * @return {?}\n */\nfunction reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n/**\n * @return {?}\n */\nfunction memoized(): any {\n    if (!lastArguments) {\n      lastResult = t.apply(null, arguments);\n      lastArguments = arguments;\n\n      return lastResult;\n    }\n    for (let /** @type {?} */ i = 0; i < arguments.length; i++) {\n      if (arguments[i] !== lastArguments[i]) {\n        lastResult = t.apply(null, arguments);\n        lastArguments = arguments;\n\n        return lastResult;\n      }\n    }\n\n    return lastResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (S1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result,\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result,\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result,\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result,\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result,\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result,\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7, s8: S8) => Result,\n): MemoizedSelector<State, Result>;\n/**\n * @param {...?} args\n * @return {?}\n */\nexport function createSelector(...args: any[]): Selector<any, any> {\n  const /** @type {?} */ selectors = args.slice(0, args.length - 1);\n  const /** @type {?} */ projector = args[args.length - 1];\n  const /** @type {?} */ memoizedSelectors = selectors.filter((selector: any) => selector.release && typeof selector.release === 'function');\n\n  const { memoized, reset } = memoize(function (state: any) {\n    const /** @type {?} */ args = selectors.map(fn => fn(state));\n\n    return projector.apply(null, args);\n  });\n/**\n * @return {?}\n */\nfunction release() {\n    reset();\n\n    memoizedSelectors.forEach(selector => selector.release());\n  }\n\n  return Object.assign(memoized, { release });\n}\n/**\n * @template T\n * @param {?} featureName\n * @return {?}\n */\nexport function createFeatureSelector<T>(featureName: string): MemoizedSelector<object, T> {\n  const { memoized, reset } = memoize(function (state: any): any {\n    return state[featureName];\n  });\n\n  return Object.assign(memoized, { release: reset });\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Action,ActionReducer,ActionReducerMap,ActionReducerFactory,Selector,StoreModule,Store,combineReducers,compose,ActionsSubject,INIT,ReducerManager,ReducerObservable,ReducerManagerDispatcher,UPDATE,ScannedActionsSubject,createSelector,createFeatureSelector,State,StateObservable,reduceState,INITIAL_STATE,REDUCER_FACTORY,INITIAL_REDUCERS,STORE_FEATURES,StoreRootModule,StoreFeatureModule} from './public_api';\n\nexport {ACTIONS_SUBJECT_PROVIDERS as ɵc} from './src/actions_subject';\nexport {StoreFeature as ɵa} from './src/models';\nexport {REDUCER_MANAGER_PROVIDERS as ɵd} from './src/reducer_manager';\nexport {SCANNED_ACTIONS_SUBJECT_PROVIDERS as ɵe} from './src/scanned_actions_subject';\nexport {STATE_PROVIDERS as ɵf} from './src/state';\nexport {STORE_PROVIDERS as ɵb} from './src/store';","import { NgModule, Inject, ModuleWithProviders, OnDestroy } from '@angular/core';\nimport { Action, ActionReducerMap, ActionReducerFactory, StoreFeature } from './models';\nimport { combineReducers } from './utils';\nimport { INITIAL_STATE, INITIAL_REDUCERS, REDUCER_FACTORY, STORE_FEATURES } from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS } from './actions_subject';\nimport { REDUCER_MANAGER_PROVIDERS, ReducerManager } from './reducer_manager';\nimport { SCANNED_ACTIONS_SUBJECT_PROVIDERS } from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS } from './store';\nexport class StoreRootModule {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{ }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StoreRootModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreRootModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreRootModule.ctorParameters;\n}\n\nexport class StoreFeatureModule implements OnDestroy {\n/**\n * @param {?} features\n * @param {?} reducerManager\n */\nconstructor(\nprivate features: StoreFeature<any, any>[],\nprivate reducerManager: ReducerManager\n  ) {\n    features.forEach(feature => reducerManager.addFeature(feature));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.features.forEach(feature => this.reducerManager.removeFeature(feature));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{ }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Array, decorators: [{ type: Inject, args: [STORE_FEATURES, ] }, ]},\n{type: ReducerManager, },\n];\n}\n\nfunction StoreFeatureModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreFeatureModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreFeatureModule.ctorParameters;\n/** @type {?} */\nStoreFeatureModule.prototype.features;\n/** @type {?} */\nStoreFeatureModule.prototype.reducerManager;\n}\n\n\nexport type StoreConfig<T, V extends Action = Action> = { initialState?: T, reducerFactory?: ActionReducerFactory<T, V> };\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(reducers: ActionReducerMap<T, V>, config?: StoreConfig<T, V>): ModuleWithProviders;\n/**\n * @param {?} reducers\n * @param {?=} config\n * @return {?}\n */\nstatic forRoot(reducers: ActionReducerMap<any, any>, config: StoreConfig<any, any> = { }): ModuleWithProviders {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: INITIAL_STATE, useValue: config.initialState },\n        { provide: INITIAL_REDUCERS, useValue: reducers },\n        { provide: REDUCER_FACTORY, useValue: config.reducerFactory ? config.reducerFactory : combineReducers },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ]\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(featureName: string, reducers: ActionReducerMap<T, V>, config?: StoreConfig<T, V>): ModuleWithProviders;\n/**\n * @param {?} featureName\n * @param {?} reducers\n * @param {?=} config\n * @return {?}\n */\nstatic forFeature(featureName: string, reducers: ActionReducerMap<any, any>, config: StoreConfig<any, any> = {}): ModuleWithProviders {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: /** @type {?} */(( <StoreFeature<any, any>>{\n            key: featureName,\n            reducers: reducers,\n            reducerFactory: config.reducerFactory ? config.reducerFactory : combineReducers,\n            initialState: config.initialState\n          }))\n        }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{ }, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StoreModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStoreModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStoreModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Provider } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { map } from 'rxjs/operator/map';\nimport { pluck } from 'rxjs/operator/pluck';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\nimport { Action, ActionReducer } from './models';\nimport { ActionsSubject } from './actions_subject';\nimport { StateObservable } from './state';\nimport { ReducerManager } from './reducer_manager';\nexport class Store<T> extends Observable<Readonly<T>> implements Observer<Action> {\n/**\n * @param {?} state$\n * @param {?} actionsObserver\n * @param {?} reducerManager\n */\nconstructor(\n    state$: StateObservable,\nprivate actionsObserver: ActionsSubject,\nprivate reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Store<K>;\n  select<a extends keyof T>(key: a): Store<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(key1: a, key2: b): Store<T[a][b]>\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(key1: a, key2: b, key3: c): Store<T[a][b][c]>\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b], d extends keyof T[a][b][c]>(key1: a, key2: b, key3: c, key4: d): Store<T[a][b][c][d]>\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b], d extends keyof T[a][b][c], e extends keyof T[a][b][c][d]>(key1: a, key2: b, key3: c, key4: d, key5: e): Store<T[a][b][c][d][e]>\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b], d extends keyof T[a][b][c], e extends keyof T[a][b][c][d], f extends keyof T[a][b][c][d][e]>(key1: a, key2: b, key3: c, key4: d, key5: e, key6: f): Store<T[a][b][c][d][e][f]>\n/**\n * @param {?} pathOrMapFn\n * @param {...?} paths\n * @return {?}\n */\nselect(pathOrMapFn: ((state: T) => any) | string, ...paths: string[]): Store<any> {\n    let /** @type {?} */ mapped$: Store<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      mapped$ = pluck.call(this, pathOrMapFn, ...paths);\n    }\n    else if (typeof pathOrMapFn === 'function') {\n      mapped$ = map.call(this, pathOrMapFn);\n    }\n    else {\n      throw new TypeError(`Unexpected type '${ typeof pathOrMapFn }' in select operator,`\n        + ` expected 'string' or 'function'`);\n    }\n\n    return distinctUntilChanged.call(mapped$);\n  }\n/**\n * @template R\n * @param {?} operator\n * @return {?}\n */\nlift<R>(operator: Operator<T, R>): Store<R> {\n    const /** @type {?} */ store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n/**\n * @template V\n * @param {?} action\n * @return {?}\n */\ndispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: Action) {\n    this.actionsObserver.next(action);\n  }\n/**\n * @param {?} err\n * @return {?}\n */\nerror(err: any) {\n    this.actionsObserver.error(err);\n  }\n/**\n * @return {?}\n */\ncomplete() {\n    this.actionsObserver.complete();\n  }\n/**\n * @template State, Actions\n * @param {?} key\n * @param {?} reducer\n * @return {?}\n */\naddReducer<State, Actions extends Action = Action>(key: string, reducer: ActionReducer<State, Actions>) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n/**\n * @template Key\n * @param {?} key\n * @return {?}\n */\nremoveReducer<Key extends keyof T>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StateObservable, },\n{type: ActionsSubject, },\n{type: ReducerManager, },\n];\n}\n\nfunction Store_tsickle_Closure_declarations() {\n/** @type {?} */\nStore.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStore.ctorParameters;\n/** @type {?} */\nStore.prototype.actionsObserver;\n/** @type {?} */\nStore.prototype.reducerManager;\n}\n\n\nexport const /** @type {?} */ STORE_PROVIDERS: Provider[] = [\n  Store\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { startWith } from 'rxjs/operator/startWith';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { scan } from 'rxjs/operator/scan';\nimport { ActionsSubject } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { INITIAL_STATE } from './tokens';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\n/**\n * @abstract\n */\nexport abstract class StateObservable extends Observable<any> { }\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = '@ngrx/store/init';\nprivate stateSubscription: Subscription;\n/**\n * @param {?} actions$\n * @param {?} reducer$\n * @param {?} scannedActions\n * @param {?} initialState\n */\nconstructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n     initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = observeOn.call(actions$, queue);\n    const withLatestReducer$: Observable<[ Action, ActionReducer<any, Action> ]> = withLatestFrom.call(actionsOnQueue$, reducer$);\n    const stateAndAction$: Observable<{ state: any, action: Action }> = scan.call(withLatestReducer$, reduceState, initialState);\n\n    this.stateSubscription = stateAndAction$.subscribe({\n      next: ({ state, action }) => {\n        this.next(state);\n        scannedActions.next(action);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ActionsSubject, },\n{type: ReducerObservable, },\n{type: ScannedActionsSubject, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n];\n}\n\nfunction State_tsickle_Closure_declarations() {\n/** @type {?} */\nState.INIT;\n/** @type {?} */\nState.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nState.ctorParameters;\n/** @type {?} */\nState.prototype.stateSubscription;\n}\n\n\nexport type StateActionPair<T, V extends Action = Action> = { state: T | undefined, action?: V };\n/**\n * @template T, V\n * @param {?=} __0\n * @param {?=} __1\n * @return {?}\n */\nexport function reduceState<T, V extends Action = Action>(\n  { state }: StateActionPair<T, V> = { state: undefined },\n  [ action, reducer ]: [ V, ActionReducer<T, V> ]\n): StateActionPair<T, V> {\n  return { state: reducer(state, action), action };\n}\n\nexport const /** @type {?} */ STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Provider, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Action } from './models';\nexport class ScannedActionsSubject extends Subject<Action> implements OnDestroy {\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ScannedActionsSubject_tsickle_Closure_declarations() {\n/** @type {?} */\nScannedActionsSubject.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nScannedActionsSubject.ctorParameters;\n}\n\n\nexport const /** @type {?} */ SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Action, ActionReducer, ActionReducerMap, ActionReducerFactory, StoreFeature } from './models';\nimport { INITIAL_STATE, INITIAL_REDUCERS, REDUCER_FACTORY } from './tokens';\nimport { omit } from './utils';\nimport { ActionsSubject } from './actions_subject';\n/**\n * @abstract\n */\nexport abstract class ReducerObservable extends Observable<ActionReducer<any, any>> { }\n/**\n * @abstract\n */\nexport abstract class ReducerManagerDispatcher extends ActionsSubject { }\nexport const /** @type {?} */ UPDATE = '@ngrx/store/update-reducers';\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>> implements OnDestroy {\n/**\n * @param {?} dispatcher\n * @param {?} initialState\n * @param {?} reducers\n * @param {?} reducerFactory\n */\nconstructor(\nprivate dispatcher: ReducerManagerDispatcher,\nprivate initialState: any,\nprivate reducers: ActionReducerMap<any, any>,\nprivate reducerFactory: ActionReducerFactory<any, any>\n  ) {\n    super(reducerFactory(reducers, initialState));\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\naddFeature({ reducers, reducerFactory, initialState, key }: StoreFeature<any, any>) {\n    const /** @type {?} */ reducer = reducerFactory(reducers, initialState);\n\n    this.addReducer(key, reducer);\n  }\n/**\n * @param {?} __0\n * @return {?}\n */\nremoveFeature({ key }: StoreFeature<any, any>) {\n    this.removeReducer(key);\n  }\n/**\n * @param {?} key\n * @param {?} reducer\n * @return {?}\n */\naddReducer(key: string, reducer: ActionReducer<any, any>) {\n    this.reducers = { ...this.reducers, [key]: reducer };\n\n    this.updateReducers();\n  }\n/**\n * @param {?} key\n * @return {?}\n */\nremoveReducer(key: string) {\n    this.reducers = omit(this.reducers, key);\n\n    this.updateReducers();\n  }\n/**\n * @return {?}\n */\nprivate updateReducers() {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next({ type: UPDATE });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ReducerManagerDispatcher, },\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_STATE, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [INITIAL_REDUCERS, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [REDUCER_FACTORY, ] }, ]},\n];\n}\n\nfunction ReducerManager_tsickle_Closure_declarations() {\n/** @type {?} */\nReducerManager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nReducerManager.ctorParameters;\n/** @type {?} */\nReducerManager.prototype.dispatcher;\n/** @type {?} */\nReducerManager.prototype.initialState;\n/** @type {?} */\nReducerManager.prototype.reducers;\n/** @type {?} */\nReducerManager.prototype.reducerFactory;\n}\n\n\nexport const /** @type {?} */ REDUCER_MANAGER_PROVIDERS: Provider[] = [\n  ReducerManager,\n  { provide: ReducerObservable, useExisting: ReducerManager },\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Action } from './models';\n\n\nexport const /** @type {?} */ INIT = '@ngrx/store/init';\nexport class ActionsSubject extends BehaviorSubject<Action> implements OnDestroy {\nconstructor() {\n    super({ type: INIT });\n  }\n/**\n * @param {?} action\n * @return {?}\n */\nnext(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new Error(`Actions must be objects`);\n    }\n    else if (typeof action.type === 'undefined') {\n      throw new Error(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n/**\n * @return {?}\n */\ncomplete() { /* noop */ }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ActionsSubject_tsickle_Closure_declarations() {\n/** @type {?} */\nActionsSubject.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nActionsSubject.ctorParameters;\n}\n\n\nexport const /** @type {?} */ ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ActionsSubject\n];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { OpaqueToken } from '@angular/core';\n\n\nexport const /** @type {?} */ INITIAL_STATE = new OpaqueToken('@ngrx/store Initial State');\nexport const /** @type {?} */ REDUCER_FACTORY = new OpaqueToken('@ngrx/store Reducer Factory');\nexport const /** @type {?} */ INITIAL_REDUCERS = new OpaqueToken('@ngrx/store Initial Reducers');\nexport const /** @type {?} */ STORE_FEATURES = new OpaqueToken('@ngrx/store Store Features');\n","import { Action, ActionReducer, ActionReducerMap, ActionReducerFactory } from './models';\n\n\nexport function combineReducers<T, V extends Action = Action>(reducers: ActionReducerMap<T, V>, initialState?: Partial<T>): ActionReducer<T, V>;\n/**\n * @param {?} reducers\n * @param {?=} initialState\n * @return {?}\n */\nexport function combineReducers(reducers: any, initialState: any = {}): ActionReducer<any, Action> {\n  const /** @type {?} */ reducerKeys = Object.keys(reducers);\n  const /** @type {?} */ finalReducers: any = {};\n\n  for (let /** @type {?} */ i = 0; i < reducerKeys.length; i++) {\n    const /** @type {?} */ key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const /** @type {?} */ finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state = initialState, action) {\n    let /** @type {?} */ hasChanged = false;\n    const /** @type {?} */ nextState: any = {};\n    for (let /** @type {?} */ i = 0; i < finalReducerKeys.length; i++) {\n      const /** @type {?} */ key = finalReducerKeys[i];\n      const /** @type {?} */ reducer: any = finalReducers[key];\n      const /** @type {?} */ previousStateForKey = state[key];\n      const /** @type {?} */ nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n/**\n * @param {?} object\n * @param {?} keyToRemove\n * @return {?}\n */\nexport function omit(object: { [key: string]: any }, keyToRemove: string) {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => ( /** @type {?} */((<any>result)))[key] = object[key], {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(d: (i: C) => D, c: (i: B) => C, b: (i: A) => B): (i: A) => D;\nexport function compose<A, B, C, D, E>(e: (i: D) => E, d: (i: C) => D, c: (i: B) => C, b: (i: A) => B): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(f: (i: E) => F, e: (i: D) => E, d: (i: C) => D, c: (i: B) => C, b: (i: A) => B): (i: A) => F;\n/**\n * @param {...?} functions\n * @return {?}\n */\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const /** @type {?} */ last = functions[functions.length - 1];\n    const /** @type {?} */ rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  }\n}\n"],"names":["NgModule","Inject","Injectable","Observable","distinctUntilChanged","map","pluck","BehaviorSubject","scan","withLatestFrom","observeOn","queue","Subject","OpaqueToken"],"mappings":"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"}