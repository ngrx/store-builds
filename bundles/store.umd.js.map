{"version":3,"file":"store.umd.js","sources":["../../../modules/store/src/store_module.ts","../../../modules/store/src/selector.ts","../../../modules/store/src/store.ts","../../../modules/store/src/state.ts","../../../modules/store/src/scanned_actions_subject.ts","../../../modules/store/src/reducer_manager.ts","../../../modules/store/src/utils.ts","../../../modules/store/src/tokens.ts","../../../modules/store/src/actions_subject.ts"],"sourcesContent":["import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n} from './models';\nimport { compose, combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule\n  ) {\n    features\n      .map((feature, index) => {\n        const featureReducerCollection = featureReducers.shift();\n        const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n        return {\n          ...feature,\n          reducers,\n          initialState: _initialStateFactory(feature.initialState),\n        };\n      })\n      .forEach(feature => reducerManager.addFeature(feature));\n  }\n\n  ngOnDestroy() {\n    this.features.forEach(feature =>\n      this.reducerManager.removeFeature(feature)\n    );\n  }\n}\n\nexport type StoreConfig<T, V extends Action = Action> = {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n};\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V>\n  ): ModuleWithProviders;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: <StoreFeature<any, any>>{\n            key: featureName,\n            reducerFactory: config.reducerFactory\n              ? config.reducerFactory\n              : combineReducers,\n            metaReducers: config.metaReducers ? config.metaReducers : [],\n            initialState: config.initialState,\n          },\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>,\n  tokenReducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[],\n  tokenReducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map((reducer, index) => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n","import { Selector } from './models';\n\nexport type AnyFn = (...args: any[]) => any;\n\nexport type MemoizedProjection = { memoized: AnyFn; reset: () => void };\n\nexport type MemoizeFn = (t: AnyFn) => MemoizedProjection;\n\nexport interface MemoizedSelector<State, Result>\n  extends Selector<State, Result> {\n  release(): void;\n  projector: AnyFn;\n}\n\nexport function isEqualCheck(a: any, b: any): boolean {\n  return a === b;\n}\n\nexport function defaultMemoize(\n  t: AnyFn,\n  isEqual = isEqualCheck\n): MemoizedProjection {\n  let lastArguments: null | IArguments = null;\n  let lastResult: any = null;\n\n  function reset() {\n    lastArguments = null;\n    lastResult = null;\n  }\n\n  function memoized(): any {\n    if (!lastArguments) {\n      lastResult = t.apply(null, arguments);\n      lastArguments = arguments;\n\n      return lastResult;\n    }\n\n    for (let i = 0; i < arguments.length; i++) {\n      if (!isEqual(arguments[i], lastArguments[i])) {\n        lastResult = t.apply(null, arguments);\n        lastArguments = arguments;\n\n        return lastResult;\n      }\n    }\n\n    return lastResult;\n  }\n\n  return { memoized, reset };\n}\n\nexport function createSelector<State, S1, Result>(\n  s1: Selector<State, S1>,\n  projector: (S1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, Result>(\n  selectors: [Selector<State, S1>],\n  projector: (s1: S1) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>],\n  projector: (s1: S1, s2: S2) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, Result>(\n  selectors: [Selector<State, S1>, Selector<State, S2>, Selector<State, S3>],\n  projector: (s1: S1, s2: S2, s3: S3) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>\n  ],\n  projector: (s1: S1, s2: S2, s3: S3, s4: S4, s5: S5, s6: S6, s7: S7) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  s1: Selector<State, S1>,\n  s2: Selector<State, S2>,\n  s3: Selector<State, S3>,\n  s4: Selector<State, S4>,\n  s5: Selector<State, S5>,\n  s6: Selector<State, S6>,\n  s7: Selector<State, S7>,\n  s8: Selector<State, S8>,\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector<State, S1, S2, S3, S4, S5, S6, S7, S8, Result>(\n  selectors: [\n    Selector<State, S1>,\n    Selector<State, S2>,\n    Selector<State, S3>,\n    Selector<State, S4>,\n    Selector<State, S5>,\n    Selector<State, S6>,\n    Selector<State, S7>,\n    Selector<State, S8>\n  ],\n  projector: (\n    s1: S1,\n    s2: S2,\n    s3: S3,\n    s4: S4,\n    s5: S5,\n    s6: S6,\n    s7: S7,\n    s8: S8\n  ) => Result\n): MemoizedSelector<State, Result>;\nexport function createSelector(...input: any[]) {\n  return createSelectorFactory(defaultMemoize)(...input);\n}\n\nexport function defaultStateFn(\n  state: any,\n  selectors: Selector<any, any>[],\n  memoizedProjector: MemoizedProjection\n): any {\n  const args = selectors.map(fn => fn(state));\n\n  return memoizedProjector.memoized.apply(null, args);\n}\n\nexport type SelectorFactoryConfig<T = any, V = any> = {\n  stateFn: (\n    state: T,\n    selectors: Selector<any, any>[],\n    memoizedProjector: MemoizedProjection\n  ) => V;\n};\n\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory<T = any, V = any>(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<T, V>\n): (...input: any[]) => Selector<T, V>;\nexport function createSelectorFactory(\n  memoize: MemoizeFn,\n  options: SelectorFactoryConfig<any, any> = {\n    stateFn: defaultStateFn,\n  }\n) {\n  return function(...input: any[]): Selector<any, any> {\n    let args = input;\n    if (Array.isArray(args[0])) {\n      const [head, ...tail] = args;\n      args = [...head, ...tail];\n    }\n\n    const selectors = args.slice(0, args.length - 1);\n    const projector = args[args.length - 1];\n    const memoizedSelectors = selectors.filter(\n      (selector: any) =>\n        selector.release && typeof selector.release === 'function'\n    );\n\n    const memoizedProjector = memoize(function(...selectors: any[]) {\n      return projector.apply(null, selectors);\n    });\n\n    const memoizedState = defaultMemoize(function(state: any) {\n      return options.stateFn.apply(null, [state, selectors, memoizedProjector]);\n    });\n\n    function release() {\n      memoizedState.reset();\n      memoizedProjector.reset();\n\n      memoizedSelectors.forEach(selector => selector.release());\n    }\n\n    return Object.assign(memoizedState.memoized, {\n      release,\n      projector: memoizedProjector.memoized,\n    });\n  };\n}\n\nexport function createFeatureSelector<T>(\n  featureName: string\n): MemoizedSelector<object, T> {\n  return createSelector(\n    (state: any) => state[featureName],\n    (featureState: any) => featureState\n  );\n}\n","import { Injectable, Provider } from '@angular/core';\nimport { Observer } from 'rxjs/Observer';\nimport { Observable } from 'rxjs/Observable';\nimport { Operator } from 'rxjs/Operator';\nimport { map } from 'rxjs/operator/map';\nimport { pluck } from 'rxjs/operator/pluck';\nimport { distinctUntilChanged } from 'rxjs/operator/distinctUntilChanged';\nimport { Action, ActionReducer } from './models';\nimport { ActionsSubject } from './actions_subject';\nimport { StateObservable } from './state';\nimport { ReducerManager } from './reducer_manager';\n\n@Injectable()\nexport class Store<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    state$: StateObservable,\n    private actionsObserver: ActionsSubject,\n    private reducerManager: ReducerManager\n  ) {\n    super();\n\n    this.source = state$;\n  }\n\n  select<K>(mapFn: (state: T) => K): Store<K>;\n  select<a extends keyof T>(key: a): Store<T[a]>;\n  select<a extends keyof T, b extends keyof T[a]>(\n    key1: a,\n    key2: b\n  ): Store<T[a][b]>;\n  select<a extends keyof T, b extends keyof T[a], c extends keyof T[a][b]>(\n    key1: a,\n    key2: b,\n    key3: c\n  ): Store<T[a][b][c]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c]\n  >(key1: a, key2: b, key3: c, key4: d): Store<T[a][b][c][d]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d]\n  >(key1: a, key2: b, key3: c, key4: d, key5: e): Store<T[a][b][c][d][e]>;\n  select<\n    a extends keyof T,\n    b extends keyof T[a],\n    c extends keyof T[a][b],\n    d extends keyof T[a][b][c],\n    e extends keyof T[a][b][c][d],\n    f extends keyof T[a][b][c][d][e]\n  >(\n    key1: a,\n    key2: b,\n    key3: c,\n    key4: d,\n    key5: e,\n    key6: f\n  ): Store<T[a][b][c][d][e][f]>;\n  select(\n    pathOrMapFn: ((state: T) => any) | string,\n    ...paths: string[]\n  ): Store<any> {\n    return select(pathOrMapFn, ...paths)(this);\n  }\n\n  lift<R>(operator: Operator<T, R>): Store<R> {\n    const store = new Store<R>(this, this.actionsObserver, this.reducerManager);\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch<V extends Action = Action>(action: V) {\n    this.actionsObserver.next(action);\n  }\n\n  next(action: Action) {\n    this.actionsObserver.next(action);\n  }\n\n  error(err: any) {\n    this.actionsObserver.error(err);\n  }\n\n  complete() {\n    this.actionsObserver.complete();\n  }\n\n  addReducer<State, Actions extends Action = Action>(\n    key: string,\n    reducer: ActionReducer<State, Actions>\n  ) {\n    this.reducerManager.addReducer(key, reducer);\n  }\n\n  removeReducer<Key extends keyof T>(key: Key) {\n    this.reducerManager.removeReducer(key);\n  }\n}\n\nexport const STORE_PROVIDERS: Provider[] = [Store];\n\nexport function select<T, K>(\n  mapFn: ((state: T) => K) | string\n): (source$: Observable<T>) => Store<K>;\nexport function select<T, a extends keyof T>(\n  key: a\n): (source$: Store<a>) => Store<T[a]>;\nexport function select<T, a extends keyof T, b extends keyof T[a]>(\n  key1: a,\n  key2: b\n): (source$: Store<T>) => Store<T[a][b]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b]\n>(key1: a, key2: b, key3: c): (source$: Store<a>) => Store<T[a][b][c]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d\n): (source$: Store<a>) => Store<T[a][b][c][d]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e\n): (source$: Store<a>) => Store<T[a][b][c][d][e]>;\nexport function select<\n  T,\n  a extends keyof T,\n  b extends keyof T[a],\n  c extends keyof T[a][b],\n  d extends keyof T[a][b][c],\n  e extends keyof T[a][b][c][d],\n  f extends keyof T[a][b][c][d][e]\n>(\n  key1: a,\n  key2: b,\n  key3: c,\n  key4: d,\n  key5: e,\n  key6: f\n): (source$: Store<a>) => Store<T[a][b][c][d][e][f]>;\nexport function select<T, K>(\n  pathOrMapFn: ((state: T) => any) | string,\n  ...paths: string[]\n) {\n  return function selectOperator(source$: Store<T>): Store<K> {\n    let mapped$: Store<any>;\n\n    if (typeof pathOrMapFn === 'string') {\n      mapped$ = pluck.call(source$, pathOrMapFn, ...paths);\n    } else if (typeof pathOrMapFn === 'function') {\n      mapped$ = map.call(source$, pathOrMapFn);\n    } else {\n      throw new TypeError(\n        `Unexpected type '${typeof pathOrMapFn}' in select operator,` +\n          ` expected 'string' or 'function'`\n      );\n    }\n\n    return distinctUntilChanged.call(mapped$);\n  };\n}\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { queue } from 'rxjs/scheduler/queue';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { withLatestFrom } from 'rxjs/operator/withLatestFrom';\nimport { scan } from 'rxjs/operator/scan';\nimport { ActionsSubject, INIT } from './actions_subject';\nimport { Action, ActionReducer } from './models';\nimport { INITIAL_STATE } from './tokens';\nimport { ReducerObservable } from './reducer_manager';\nimport { ScannedActionsSubject } from './scanned_actions_subject';\n\nexport abstract class StateObservable extends Observable<any> {}\n\n@Injectable()\nexport class State<T> extends BehaviorSubject<any> implements OnDestroy {\n  static readonly INIT = INIT;\n\n  private stateSubscription: Subscription;\n\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions: ScannedActionsSubject,\n    @Inject(INITIAL_STATE) initialState: any\n  ) {\n    super(initialState);\n\n    const actionsOnQueue$: Observable<Action> = observeOn.call(actions$, queue);\n    const withLatestReducer$: Observable<\n      [Action, ActionReducer<any, Action>]\n    > = withLatestFrom.call(actionsOnQueue$, reducer$);\n    const stateAndAction$: Observable<{\n      state: any;\n      action: Action;\n    }> = scan.call(withLatestReducer$, reduceState, { state: initialState });\n\n    this.stateSubscription = stateAndAction$.subscribe(({ state, action }) => {\n      this.next(state);\n      scannedActions.next(action);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateSubscription.unsubscribe();\n    this.complete();\n  }\n}\n\nexport type StateActionPair<T, V extends Action = Action> = {\n  state: T | undefined;\n  action?: V;\n};\nexport function reduceState<T, V extends Action = Action>(\n  stateActionPair: StateActionPair<T, V> = { state: undefined },\n  [action, reducer]: [V, ActionReducer<T, V>]\n): StateActionPair<T, V> {\n  const { state } = stateActionPair;\n  return { state: reducer(state, action), action };\n}\n\nexport const STATE_PROVIDERS: Provider[] = [\n  State,\n  { provide: StateObservable, useExisting: State },\n];\n","import { Injectable, Provider, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Action } from './models';\n\n@Injectable()\nexport class ScannedActionsSubject extends Subject<Action>\n  implements OnDestroy {\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const SCANNED_ACTIONS_SUBJECT_PROVIDERS: Provider[] = [\n  ScannedActionsSubject,\n];\n","import { Injectable, Inject, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  MetaReducer,\n  StoreFeature,\n} from './models';\nimport { INITIAL_STATE, INITIAL_REDUCERS, REDUCER_FACTORY } from './tokens';\nimport {\n  omit,\n  createReducerFactory,\n  createFeatureReducerFactory,\n} from './utils';\nimport { ActionsSubject } from './actions_subject';\n\nexport abstract class ReducerObservable extends Observable<\n  ActionReducer<any, any>\n> {}\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\n\n@Injectable()\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\n  implements OnDestroy {\n  constructor(\n    private dispatcher: ReducerManagerDispatcher,\n    @Inject(INITIAL_STATE) private initialState: any,\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\n    @Inject(REDUCER_FACTORY)\n    private reducerFactory: ActionReducerFactory<any, any>\n  ) {\n    super(reducerFactory(reducers, initialState));\n  }\n\n  addFeature({\n    reducers,\n    reducerFactory,\n    metaReducers,\n    initialState,\n    key,\n  }: StoreFeature<any, any>) {\n    const reducer =\n      typeof reducers === 'function'\n        ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\n        : createReducerFactory(reducerFactory, metaReducers)(\n            reducers,\n            initialState\n          );\n\n    this.addReducer(key, reducer);\n  }\n\n  removeFeature({ key }: StoreFeature<any, any>) {\n    this.removeReducer(key);\n  }\n\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\n    this.reducers = { ...this.reducers, [key]: reducer };\n\n    this.updateReducers(key);\n  }\n\n  removeReducer(key: string) {\n    this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\n\n    this.updateReducers(key);\n  }\n\n  private updateReducers(key: string) {\n    this.next(this.reducerFactory(this.reducers, this.initialState));\n    this.dispatcher.next(<Action & {feature: string}>{ type: UPDATE, feature: key });\n  }\n\n  ngOnDestroy() {\n    this.complete();\n  }\n}\n\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\n  ReducerManager,\n  { provide: ReducerObservable, useExisting: ReducerManager },\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\n];\n","import {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  MetaReducer,\n} from './models';\n\nexport function combineReducers<T, V extends Action = Action>(\n  reducers: ActionReducerMap<T, V>,\n  initialState?: Partial<T>\n): ActionReducer<T, V>;\nexport function combineReducers(\n  reducers: any,\n  initialState: any = {}\n): ActionReducer<any, Action> {\n  const reducerKeys = Object.keys(reducers);\n  const finalReducers: any = {};\n\n  for (let i = 0; i < reducerKeys.length; i++) {\n    const key = reducerKeys[i];\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  const finalReducerKeys = Object.keys(finalReducers);\n\n  return function combination(state, action) {\n    state = state === undefined ? initialState : state;\n    let hasChanged = false;\n    const nextState: any = {};\n    for (let i = 0; i < finalReducerKeys.length; i++) {\n      const key = finalReducerKeys[i];\n      const reducer: any = finalReducers[key];\n      const previousStateForKey = state[key];\n      const nextStateForKey = reducer(previousStateForKey, action);\n\n      nextState[key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nexport function omit<T extends { [key: string]: any }>(\n  object: T,\n  keyToRemove: keyof T\n): Partial<T> {\n  return Object.keys(object)\n    .filter(key => key !== keyToRemove)\n    .reduce((result, key) => Object.assign(result, { [key]: object[key] }), {});\n}\n\nexport function compose<A>(): (i: A) => A;\nexport function compose<A, B>(b: (i: A) => B): (i: A) => B;\nexport function compose<A, B, C>(c: (i: B) => C, b: (i: A) => B): (i: A) => C;\nexport function compose<A, B, C, D>(\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => D;\nexport function compose<A, B, C, D, E>(\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => E;\nexport function compose<A, B, C, D, E, F>(\n  f: (i: E) => F,\n  e: (i: D) => E,\n  d: (i: C) => D,\n  c: (i: B) => C,\n  b: (i: A) => B\n): (i: A) => F;\nexport function compose(...functions: any[]) {\n  return function(arg: any) {\n    if (functions.length === 0) {\n      return arg;\n    }\n\n    const last = functions[functions.length - 1];\n    const rest = functions.slice(0, -1);\n\n    return rest.reduceRight((composed, fn) => fn(composed), last(arg));\n  };\n}\n\nexport function createReducerFactory<T, V extends Action = Action>(\n  reducerFactory: ActionReducerFactory<T, V>,\n  metaReducers?: MetaReducer<T, V>[]\n): ActionReducerFactory<T, V> {\n  if (Array.isArray(metaReducers) && metaReducers.length > 0) {\n    return compose.apply(null, [...metaReducers, reducerFactory]);\n  }\n\n  return reducerFactory;\n}\n\nexport function createFeatureReducerFactory<T, V extends Action = Action>(\n  metaReducers?: MetaReducer<T, V>[]\n): (reducer: ActionReducer<T, V>, initialState?: T) => ActionReducer<T, V> {\n  const reducerFactory =\n    Array.isArray(metaReducers) && metaReducers.length > 0\n      ? compose<ActionReducer<T, V>>(...metaReducers)\n      : (r: ActionReducer<T, V>) => r;\n\n  return (reducer: ActionReducer<T, V>, initialState?: T) => {\n    reducer = reducerFactory(reducer);\n\n    return (state: T | undefined, action: V) => {\n      state = state === undefined ? initialState : state;\n      return reducer(state, action);\n    };\n  };\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const _INITIAL_STATE = new InjectionToken(\n  '@ngrx/store Internal Initial State'\n);\nexport const INITIAL_STATE = new InjectionToken('@ngrx/store Initial State');\nexport const REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory'\n);\nexport const _REDUCER_FACTORY = new InjectionToken(\n  '@ngrx/store Reducer Factory Provider'\n);\nexport const INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Initial Reducers'\n);\nexport const _INITIAL_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Initial Reducers'\n);\nexport const META_REDUCERS = new InjectionToken('@ngrx/store Meta Reducers');\nexport const STORE_FEATURES = new InjectionToken('@ngrx/store Store Features');\nexport const _STORE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Store Reducers'\n);\nexport const _FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers'\n);\nexport const _FEATURE_REDUCERS_TOKEN = new InjectionToken(\n  '@ngrx/store Internal Feature Reducers Token'\n);\nexport const FEATURE_REDUCERS = new InjectionToken(\n  '@ngrx/store Feature Reducers'\n);\n","import { Injectable, OnDestroy, Provider } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport { Action } from './models';\n\nexport const INIT = '@ngrx/store/init' as '@ngrx/store/init';\n\n@Injectable()\nexport class ActionsSubject extends BehaviorSubject<Action>\n  implements OnDestroy {\n  constructor() {\n    super({ type: INIT });\n  }\n\n  next(action: Action): void {\n    if (typeof action === 'undefined') {\n      throw new TypeError(`Actions must be objects`);\n    } else if (typeof action.type === 'undefined') {\n      throw new TypeError(`Actions must have a type property`);\n    }\n\n    super.next(action);\n  }\n\n  complete() {\n    /* noop */\n  }\n\n  ngOnDestroy() {\n    super.complete();\n  }\n}\n\nexport const ACTIONS_SUBJECT_PROVIDERS: Provider[] = [ActionsSubject];\n"],"names":["InjectionToken","NgModule","Inject","Injector","distinctUntilChanged","map","pluck","Injectable","Observable","BehaviorSubject","scan","withLatestFrom","observeOn","queue","Subject"],"mappings":"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"}