/**
 * @fileoverview added by tsickle
 * Generated from: ngrx-store.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { createAction, props, union, Store, select, combineReducers, compose, createReducerFactory, ActionsSubject, INIT, setNgrxMockEnvironment, isNgrxMockEnvironment, ReducerManager, ReducerObservable, ReducerManagerDispatcher, UPDATE, ScannedActionsSubject, createSelector, createSelectorFactory, createFeatureSelector, defaultMemoize, defaultStateFn, resultMemoize, State, StateObservable, reduceState, INITIAL_STATE, REDUCER_FACTORY, INITIAL_REDUCERS, STORE_FEATURES, META_REDUCERS, FEATURE_REDUCERS, USER_PROVIDED_META_REDUCERS, USER_RUNTIME_CHECKS, StoreModule, StoreRootModule, StoreFeatureModule, on, createReducer } from './index';
export { ACTIONS_SUBJECT_PROVIDERS as ɵc } from './src/actions_subject';
export { REDUCER_MANAGER_PROVIDERS as ɵd } from './src/reducer_manager';
export { _actionTypeUniquenessCheck as ɵbc, _runtimeChecksFactory as ɵbb, checkForActionTypeUniqueness as ɵba, createActiveRuntimeChecks as ɵv, createImmutabilityCheckMetaReducer as ɵx, createInNgZoneCheckMetaReducer as ɵy, createSerializationCheckMetaReducer as ɵw, provideRuntimeChecks as ɵz } from './src/runtime_checks';
export { SCANNED_ACTIONS_SUBJECT_PROVIDERS as ɵe } from './src/scanned_actions_subject';
export { isEqualCheck as ɵf } from './src/selector';
export { STATE_PROVIDERS as ɵg } from './src/state';
export { STORE_PROVIDERS as ɵb } from './src/store';
export { _concatMetaReducers as ɵt, _createStoreReducers as ɵr, _initialStateFactory as ɵs, _provideForRootGuard as ɵu } from './src/store_module';
export { _ACTION_TYPE_UNIQUENESS_CHECK as ɵq, _ACTIVE_RUNTIME_CHECKS as ɵp, _INITIAL_REDUCERS as ɵk, _INITIAL_STATE as ɵi, _REDUCER_FACTORY as ɵj, _RESOLVED_META_REDUCERS as ɵn, _ROOT_STORE_GUARD as ɵh, _STORE_FEATURES as ɵm, _STORE_REDUCERS as ɵl, _USER_RUNTIME_CHECKS as ɵo } from './src/tokens';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdyeC1zdG9yZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9tb2R1bGVzL3N0b3JlLyIsInNvdXJjZXMiOlsibmdyeC1zdG9yZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUlBLHVuQkFBYyxTQUFTLENBQUM7QUFFeEIsT0FBTyxFQUFDLHlCQUF5QixJQUFJLEVBQUUsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXRFLE9BQU8sRUFBQyx5QkFBeUIsSUFBSSxFQUFFLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RSxPQUFPLEVBQUMsMEJBQTBCLElBQUksR0FBRyxFQUFDLHFCQUFxQixJQUFJLEdBQUcsRUFBQyw0QkFBNEIsSUFBSSxHQUFHLEVBQUMseUJBQXlCLElBQUksRUFBRSxFQUFDLGtDQUFrQyxJQUFJLEVBQUUsRUFBQyw4QkFBOEIsSUFBSSxFQUFFLEVBQUMsbUNBQW1DLElBQUksRUFBRSxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQzNULE9BQU8sRUFBQyxpQ0FBaUMsSUFBSSxFQUFFLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUN0RixPQUFPLEVBQUMsWUFBWSxJQUFJLEVBQUUsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2xELE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQ2xELE9BQU8sRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBQ2xELE9BQU8sRUFBQyxtQkFBbUIsSUFBSSxFQUFFLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLG9CQUFvQixJQUFJLEVBQUUsRUFBQyxvQkFBb0IsSUFBSSxFQUFFLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUM5SSxPQUFPLEVBQUMsNkJBQTZCLElBQUksRUFBRSxFQUFDLHNCQUFzQixJQUFJLEVBQUUsRUFBQyxpQkFBaUIsSUFBSSxFQUFFLEVBQUMsY0FBYyxJQUFJLEVBQUUsRUFBQyxnQkFBZ0IsSUFBSSxFQUFFLEVBQUMsdUJBQXVCLElBQUksRUFBRSxFQUFDLGlCQUFpQixJQUFJLEVBQUUsRUFBQyxlQUFlLElBQUksRUFBRSxFQUFDLGVBQWUsSUFBSSxFQUFFLEVBQUMsb0JBQW9CLElBQUksRUFBRSxFQUFDLE1BQU0sY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHZW5lcmF0ZWQgYnVuZGxlIGluZGV4LiBEbyBub3QgZWRpdC5cbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2luZGV4JztcblxuZXhwb3J0IHtBQ1RJT05TX1NVQkpFQ1RfUFJPVklERVJTIGFzIMm1Y30gZnJvbSAnLi9zcmMvYWN0aW9uc19zdWJqZWN0JztcbmV4cG9ydCB7U3RvcmVGZWF0dXJlIGFzIMm1YX0gZnJvbSAnLi9zcmMvbW9kZWxzJztcbmV4cG9ydCB7UkVEVUNFUl9NQU5BR0VSX1BST1ZJREVSUyBhcyDJtWR9IGZyb20gJy4vc3JjL3JlZHVjZXJfbWFuYWdlcic7XG5leHBvcnQge19hY3Rpb25UeXBlVW5pcXVlbmVzc0NoZWNrIGFzIMm1YmMsX3J1bnRpbWVDaGVja3NGYWN0b3J5IGFzIMm1YmIsY2hlY2tGb3JBY3Rpb25UeXBlVW5pcXVlbmVzcyBhcyDJtWJhLGNyZWF0ZUFjdGl2ZVJ1bnRpbWVDaGVja3MgYXMgybV2LGNyZWF0ZUltbXV0YWJpbGl0eUNoZWNrTWV0YVJlZHVjZXIgYXMgybV4LGNyZWF0ZUluTmdab25lQ2hlY2tNZXRhUmVkdWNlciBhcyDJtXksY3JlYXRlU2VyaWFsaXphdGlvbkNoZWNrTWV0YVJlZHVjZXIgYXMgybV3LHByb3ZpZGVSdW50aW1lQ2hlY2tzIGFzIMm1en0gZnJvbSAnLi9zcmMvcnVudGltZV9jaGVja3MnO1xuZXhwb3J0IHtTQ0FOTkVEX0FDVElPTlNfU1VCSkVDVF9QUk9WSURFUlMgYXMgybVlfSBmcm9tICcuL3NyYy9zY2FubmVkX2FjdGlvbnNfc3ViamVjdCc7XG5leHBvcnQge2lzRXF1YWxDaGVjayBhcyDJtWZ9IGZyb20gJy4vc3JjL3NlbGVjdG9yJztcbmV4cG9ydCB7U1RBVEVfUFJPVklERVJTIGFzIMm1Z30gZnJvbSAnLi9zcmMvc3RhdGUnO1xuZXhwb3J0IHtTVE9SRV9QUk9WSURFUlMgYXMgybVifSBmcm9tICcuL3NyYy9zdG9yZSc7XG5leHBvcnQge19jb25jYXRNZXRhUmVkdWNlcnMgYXMgybV0LF9jcmVhdGVTdG9yZVJlZHVjZXJzIGFzIMm1cixfaW5pdGlhbFN0YXRlRmFjdG9yeSBhcyDJtXMsX3Byb3ZpZGVGb3JSb290R3VhcmQgYXMgybV1fSBmcm9tICcuL3NyYy9zdG9yZV9tb2R1bGUnO1xuZXhwb3J0IHtfQUNUSU9OX1RZUEVfVU5JUVVFTkVTU19DSEVDSyBhcyDJtXEsX0FDVElWRV9SVU5USU1FX0NIRUNLUyBhcyDJtXAsX0lOSVRJQUxfUkVEVUNFUlMgYXMgybVrLF9JTklUSUFMX1NUQVRFIGFzIMm1aSxfUkVEVUNFUl9GQUNUT1JZIGFzIMm1aixfUkVTT0xWRURfTUVUQV9SRURVQ0VSUyBhcyDJtW4sX1JPT1RfU1RPUkVfR1VBUkQgYXMgybVoLF9TVE9SRV9GRUFUVVJFUyBhcyDJtW0sX1NUT1JFX1JFRFVDRVJTIGFzIMm1bCxfVVNFUl9SVU5USU1FX0NIRUNLUyBhcyDJtW99IGZyb20gJy4vc3JjL3Rva2Vucyc7Il19