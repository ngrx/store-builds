{"version":3,"file":"reducer_manager.js","sourceRoot":"ng://@ngrx/store/","sources":["src/reducer_manager.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable, OnDestroy, Provider } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\nimport { ActionsSubject } from './actions_subject';\r\nimport {\r\n  Action,\r\n  ActionReducer,\r\n  ActionReducerFactory,\r\n  ActionReducerMap,\r\n  StoreFeature,\r\n} from './models';\r\nimport { INITIAL_REDUCERS, INITIAL_STATE, REDUCER_FACTORY } from './tokens';\r\nimport {\r\n  createFeatureReducerFactory,\r\n  createReducerFactory,\r\n  omit,\r\n} from './utils';\r\n\r\nexport abstract class ReducerObservable extends Observable<\r\n  ActionReducer<any, any>\r\n> {}\r\nexport abstract class ReducerManagerDispatcher extends ActionsSubject {}\r\nexport const UPDATE = '@ngrx/store/update-reducers' as '@ngrx/store/update-reducers';\r\n\r\n@Injectable()\r\nexport class ReducerManager extends BehaviorSubject<ActionReducer<any, any>>\r\n  implements OnDestroy {\r\n  constructor(\r\n    private dispatcher: ReducerManagerDispatcher,\r\n    @Inject(INITIAL_STATE) private initialState: any,\r\n    @Inject(INITIAL_REDUCERS) private reducers: ActionReducerMap<any, any>,\r\n    @Inject(REDUCER_FACTORY)\r\n    private reducerFactory: ActionReducerFactory<any, any>\r\n  ) {\r\n    super(reducerFactory(reducers, initialState));\r\n  }\r\n\r\n  addFeature(feature: StoreFeature<any, any>) {\r\n    this.addFeatures([feature]);\r\n  }\r\n\r\n  addFeatures(features: StoreFeature<any, any>[]) {\r\n    const reducers = features.reduce(\r\n      (\r\n        reducerDict,\r\n        { reducers, reducerFactory, metaReducers, initialState, key }\r\n      ) => {\r\n        const reducer =\r\n          typeof reducers === 'function'\r\n            ? createFeatureReducerFactory(metaReducers)(reducers, initialState)\r\n            : createReducerFactory(reducerFactory, metaReducers)(\r\n                reducers,\r\n                initialState\r\n              );\r\n\r\n        reducerDict[key] = reducer;\r\n        return reducerDict;\r\n      },\r\n      {} as { [key: string]: ActionReducer<any, any> }\r\n    );\r\n\r\n    this.addReducers(reducers);\r\n  }\r\n\r\n  removeFeature(feature: StoreFeature<any, any>) {\r\n    this.removeFeatures([feature]);\r\n  }\r\n\r\n  removeFeatures(features: StoreFeature<any, any>[]) {\r\n    this.removeReducers(features.map(p => p.key));\r\n  }\r\n\r\n  addReducer(key: string, reducer: ActionReducer<any, any>) {\r\n    this.addReducers({ [key]: reducer });\r\n  }\r\n\r\n  addReducers(reducers: { [key: string]: ActionReducer<any, any> }) {\r\n    this.reducers = { ...this.reducers, ...reducers };\r\n    this.updateReducers(Object.keys(reducers));\r\n  }\r\n\r\n  removeReducer(featureKey: string) {\r\n    this.removeReducers([featureKey]);\r\n  }\r\n\r\n  removeReducers(featureKeys: string[]) {\r\n    featureKeys.forEach(key => {\r\n      this.reducers = omit(this.reducers, key) /*TODO(#823)*/ as any;\r\n    });\r\n    this.updateReducers(featureKeys);\r\n  }\r\n\r\n  private updateReducers(featureKeys: string[]) {\r\n    this.next(this.reducerFactory(this.reducers, this.initialState));\r\n    this.dispatcher.next(<Action>{\r\n      type: UPDATE,\r\n      features: featureKeys,\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.complete();\r\n  }\r\n}\r\n\r\nexport const REDUCER_MANAGER_PROVIDERS: Provider[] = [\r\n  ReducerManager,\r\n  { provide: ReducerObservable, useExisting: ReducerManager },\r\n  { provide: ReducerManagerDispatcher, useExisting: ActionsSubject },\r\n];\r\n"]}