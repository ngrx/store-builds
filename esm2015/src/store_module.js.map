{"version":3,"file":"store_module.js","sourceRoot":"ng://@ngrx/store/","sources":["src/store_module.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  NgModule,\n  Inject,\n  ModuleWithProviders,\n  OnDestroy,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  ActionReducerFactory,\n  StoreFeature,\n  InitialState,\n  MetaReducer,\n  RuntimeChecks,\n} from './models';\nimport { combineReducers, createReducerFactory } from './utils';\nimport {\n  INITIAL_STATE,\n  INITIAL_REDUCERS,\n  _INITIAL_REDUCERS,\n  REDUCER_FACTORY,\n  _REDUCER_FACTORY,\n  STORE_FEATURES,\n  _INITIAL_STATE,\n  META_REDUCERS,\n  _STORE_REDUCERS,\n  FEATURE_REDUCERS,\n  _FEATURE_REDUCERS,\n  _FEATURE_REDUCERS_TOKEN,\n  _STORE_FEATURES,\n  _FEATURE_CONFIGS,\n  USER_PROVIDED_META_REDUCERS,\n  _RESOLVED_META_REDUCERS,\n  _ROOT_STORE_GUARD,\n  _ACTIVE_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { ACTIONS_SUBJECT_PROVIDERS, ActionsSubject } from './actions_subject';\nimport {\n  REDUCER_MANAGER_PROVIDERS,\n  ReducerManager,\n  ReducerObservable,\n} from './reducer_manager';\nimport {\n  SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n  ScannedActionsSubject,\n} from './scanned_actions_subject';\nimport { STATE_PROVIDERS } from './state';\nimport { STORE_PROVIDERS, Store } from './store';\nimport {\n  provideRuntimeChecks,\n  checkForActionTypeUniqueness,\n} from './runtime_checks';\n\n@NgModule({})\nexport class StoreRootModule {\n  constructor(\n    actions$: ActionsSubject,\n    reducer$: ReducerObservable,\n    scannedActions$: ScannedActionsSubject,\n    store: Store<any>,\n    @Optional()\n    @Inject(_ROOT_STORE_GUARD)\n    guard: any,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {}\n}\n\n@NgModule({})\nexport class StoreFeatureModule implements OnDestroy {\n  constructor(\n    @Inject(_STORE_FEATURES) private features: StoreFeature<any, any>[],\n    @Inject(FEATURE_REDUCERS) private featureReducers: ActionReducerMap<any>[],\n    private reducerManager: ReducerManager,\n    root: StoreRootModule,\n    @Optional()\n    @Inject(_ACTION_TYPE_UNIQUENESS_CHECK)\n    actionCheck: any\n  ) {\n    const feats = features.map((feature, index) => {\n      const featureReducerCollection = featureReducers.shift();\n      const reducers = featureReducerCollection /*TODO(#823)*/![index];\n\n      return {\n        ...feature,\n        reducers,\n        initialState: _initialStateFactory(feature.initialState),\n      };\n    });\n\n    reducerManager.addFeatures(feats);\n  }\n\n  ngOnDestroy() {\n    this.reducerManager.removeFeatures(this.features);\n  }\n}\n\nexport interface StoreConfig<T, V extends Action = Action> {\n  initialState?: InitialState<T>;\n  reducerFactory?: ActionReducerFactory<T, V>;\n  metaReducers?: MetaReducer<T, V>[];\n}\n\nexport interface RootStoreConfig<T, V extends Action = Action>\n  extends StoreConfig<T, V> {\n  runtimeChecks?: Partial<RuntimeChecks>;\n}\n\n@NgModule({})\nexport class StoreModule {\n  static forRoot<T, V extends Action = Action>(\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: RootStoreConfig<T, V>\n  ): ModuleWithProviders<StoreRootModule>;\n  static forRoot(\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>,\n    config: RootStoreConfig<any, any> = {}\n  ): ModuleWithProviders<StoreRootModule> {\n    return {\n      ngModule: StoreRootModule,\n      providers: [\n        {\n          provide: _ROOT_STORE_GUARD,\n          useFactory: _provideForRootGuard,\n          deps: [[Store, new Optional(), new SkipSelf()]],\n        },\n        { provide: _INITIAL_STATE, useValue: config.initialState },\n        {\n          provide: INITIAL_STATE,\n          useFactory: _initialStateFactory,\n          deps: [_INITIAL_STATE],\n        },\n        { provide: _INITIAL_REDUCERS, useValue: reducers },\n        {\n          provide: _STORE_REDUCERS,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _INITIAL_REDUCERS,\n        },\n        {\n          provide: INITIAL_REDUCERS,\n          deps: [Injector, _INITIAL_REDUCERS, [new Inject(_STORE_REDUCERS)]],\n          useFactory: _createStoreReducers,\n        },\n        {\n          provide: USER_PROVIDED_META_REDUCERS,\n          useValue: config.metaReducers ? config.metaReducers : [],\n        },\n        {\n          provide: _RESOLVED_META_REDUCERS,\n          deps: [META_REDUCERS, USER_PROVIDED_META_REDUCERS],\n          useFactory: _concatMetaReducers,\n        },\n        {\n          provide: _REDUCER_FACTORY,\n          useValue: config.reducerFactory\n            ? config.reducerFactory\n            : combineReducers,\n        },\n        {\n          provide: REDUCER_FACTORY,\n          deps: [_REDUCER_FACTORY, _RESOLVED_META_REDUCERS],\n          useFactory: createReducerFactory,\n        },\n        ACTIONS_SUBJECT_PROVIDERS,\n        REDUCER_MANAGER_PROVIDERS,\n        SCANNED_ACTIONS_SUBJECT_PROVIDERS,\n        STATE_PROVIDERS,\n        STORE_PROVIDERS,\n        provideRuntimeChecks(config.runtimeChecks),\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducers: ActionReducerMap<T, V> | InjectionToken<ActionReducerMap<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature<T, V extends Action = Action>(\n    featureName: string,\n    reducer: ActionReducer<T, V> | InjectionToken<ActionReducer<T, V>>,\n    config?: StoreConfig<T, V> | InjectionToken<StoreConfig<T, V>>\n  ): ModuleWithProviders<StoreFeatureModule>;\n  static forFeature(\n    featureName: string,\n    reducers:\n      | ActionReducerMap<any, any>\n      | InjectionToken<ActionReducerMap<any, any>>\n      | ActionReducer<any, any>\n      | InjectionToken<ActionReducer<any, any>>,\n    config: StoreConfig<any, any> | InjectionToken<StoreConfig<any, any>> = {}\n  ): ModuleWithProviders<StoreFeatureModule> {\n    return {\n      ngModule: StoreFeatureModule,\n      providers: [\n        {\n          provide: _FEATURE_CONFIGS,\n          multi: true,\n          useValue: config,\n        },\n        {\n          provide: STORE_FEATURES,\n          multi: true,\n          useValue: {\n            key: featureName,\n            reducerFactory:\n              !(config instanceof InjectionToken) && config.reducerFactory\n                ? config.reducerFactory\n                : combineReducers,\n            metaReducers:\n              !(config instanceof InjectionToken) && config.metaReducers\n                ? config.metaReducers\n                : [],\n            initialState:\n              !(config instanceof InjectionToken) && config.initialState\n                ? config.initialState\n                : undefined,\n          },\n        },\n        {\n          provide: _STORE_FEATURES,\n          deps: [Injector, _FEATURE_CONFIGS, STORE_FEATURES],\n          useFactory: _createFeatureStore,\n        },\n        { provide: _FEATURE_REDUCERS, multi: true, useValue: reducers },\n        {\n          provide: _FEATURE_REDUCERS_TOKEN,\n          multi: true,\n          useExisting:\n            reducers instanceof InjectionToken ? reducers : _FEATURE_REDUCERS,\n        },\n        {\n          provide: FEATURE_REDUCERS,\n          multi: true,\n          deps: [\n            Injector,\n            _FEATURE_REDUCERS,\n            [new Inject(_FEATURE_REDUCERS_TOKEN)],\n          ],\n          useFactory: _createFeatureReducers,\n        },\n        checkForActionTypeUniqueness(),\n      ],\n    };\n  }\n}\n\nexport function _createStoreReducers(\n  injector: Injector,\n  reducers: ActionReducerMap<any, any>\n) {\n  return reducers instanceof InjectionToken ? injector.get(reducers) : reducers;\n}\n\nexport function _createFeatureStore(\n  injector: Injector,\n  configs: StoreConfig<any, any>[] | InjectionToken<StoreConfig<any, any>>[],\n  featureStores: StoreFeature<any, any>[]\n) {\n  return featureStores.map((feat, index) => {\n    if (configs[index] instanceof InjectionToken) {\n      const conf = injector.get(configs[index]);\n      return {\n        key: feat.key,\n        reducerFactory: conf.reducerFactory\n          ? conf.reducerFactory\n          : combineReducers,\n        metaReducers: conf.metaReducers ? conf.metaReducers : [],\n        initialState: conf.initialState,\n      };\n    }\n    return feat;\n  });\n}\n\nexport function _createFeatureReducers(\n  injector: Injector,\n  reducerCollection: ActionReducerMap<any, any>[]\n) {\n  const reducers = reducerCollection.map(reducer => {\n    return reducer instanceof InjectionToken ? injector.get(reducer) : reducer;\n  });\n\n  return reducers;\n}\n\nexport function _initialStateFactory(initialState: any): any {\n  if (typeof initialState === 'function') {\n    return initialState();\n  }\n\n  return initialState;\n}\n\nexport function _concatMetaReducers(\n  metaReducers: MetaReducer[],\n  userProvidedMetaReducers: MetaReducer[]\n): MetaReducer[] {\n  return metaReducers.concat(userProvidedMetaReducers);\n}\n\nexport function _provideForRootGuard(store: Store<any>): any {\n  if (store) {\n    throw new TypeError(\n      `StoreModule.forRoot() called twice. Feature modules should use StoreModule.forFeature() instead.`\n    );\n  }\n  return 'guarded';\n}\n"]}