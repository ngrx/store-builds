export const arraysAreNotAllowedMsg = 'arrays are not allowed in action creators';
export const typePropertyIsNotAllowedMsg = 'type property is not allowed in action creators';
export const emptyObjectsAreNotAllowedMsg = 'empty objects are not allowed in action creators';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9zdG9yZS9zcmMvbW9kZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVEQSxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FDakMsMkNBQTJDLENBQUM7QUFHOUMsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQ3RDLGlEQUFpRCxDQUFDO0FBR3BELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUN2QyxrREFBa0QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgQWN0aW9uIHtcbiAgdHlwZTogc3RyaW5nO1xufVxuXG4vLyBkZWNsYXJlIHRvIG1ha2UgaXQgcHJvcGVydHktcmVuYW1pbmcgc2FmZVxuZXhwb3J0IGRlY2xhcmUgaW50ZXJmYWNlIFR5cGVkQWN0aW9uPFQgZXh0ZW5kcyBzdHJpbmc+IGV4dGVuZHMgQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZTogVDtcbn1cblxuZXhwb3J0IHR5cGUgQWN0aW9uVHlwZTxBPiA9IEEgZXh0ZW5kcyBBY3Rpb25DcmVhdG9yPGluZmVyIFQsIGluZmVyIEM+XG4gID8gUmV0dXJuVHlwZTxDPiAmIHsgdHlwZTogVCB9XG4gIDogbmV2ZXI7XG5cbmV4cG9ydCB0eXBlIFR5cGVJZDxUPiA9ICgpID0+IFQ7XG5cbmV4cG9ydCB0eXBlIEluaXRpYWxTdGF0ZTxUPiA9IFBhcnRpYWw8VD4gfCBUeXBlSWQ8UGFydGlhbDxUPj4gfCB2b2lkO1xuXG4vKipcbiAqIEEgZnVuY3Rpb24gdGhhdCB0YWtlcyBhbiBgQWN0aW9uYCBhbmQgYSBgU3RhdGVgLCBhbmQgcmV0dXJucyBhIGBTdGF0ZWAuXG4gKiBTZWUgYGNyZWF0ZVJlZHVjZXJgLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvblJlZHVjZXI8VCwgViBleHRlbmRzIEFjdGlvbiA9IEFjdGlvbj4ge1xuICAoc3RhdGU6IFQgfCB1bmRlZmluZWQsIGFjdGlvbjogVik6IFQ7XG59XG5cbmV4cG9ydCB0eXBlIEFjdGlvblJlZHVjZXJNYXA8VCwgViBleHRlbmRzIEFjdGlvbiA9IEFjdGlvbj4gPSB7XG4gIFtwIGluIGtleW9mIFRdOiBBY3Rpb25SZWR1Y2VyPFRbcF0sIFY+O1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBBY3Rpb25SZWR1Y2VyRmFjdG9yeTxULCBWIGV4dGVuZHMgQWN0aW9uID0gQWN0aW9uPiB7XG4gIChcbiAgICByZWR1Y2VyTWFwOiBBY3Rpb25SZWR1Y2VyTWFwPFQsIFY+LFxuICAgIGluaXRpYWxTdGF0ZT86IEluaXRpYWxTdGF0ZTxUPlxuICApOiBBY3Rpb25SZWR1Y2VyPFQsIFY+O1xufVxuXG5leHBvcnQgdHlwZSBNZXRhUmVkdWNlcjxUID0gYW55LCBWIGV4dGVuZHMgQWN0aW9uID0gQWN0aW9uPiA9IChcbiAgcmVkdWNlcjogQWN0aW9uUmVkdWNlcjxULCBWPlxuKSA9PiBBY3Rpb25SZWR1Y2VyPFQsIFY+O1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0b3JlRmVhdHVyZTxULCBWIGV4dGVuZHMgQWN0aW9uID0gQWN0aW9uPiB7XG4gIGtleTogc3RyaW5nO1xuICByZWR1Y2VyczogQWN0aW9uUmVkdWNlck1hcDxULCBWPiB8IEFjdGlvblJlZHVjZXI8VCwgVj47XG4gIHJlZHVjZXJGYWN0b3J5OiBBY3Rpb25SZWR1Y2VyRmFjdG9yeTxULCBWPjtcbiAgaW5pdGlhbFN0YXRlPzogSW5pdGlhbFN0YXRlPFQ+O1xuICBtZXRhUmVkdWNlcnM/OiBNZXRhUmVkdWNlcjxULCBWPltdO1xufVxuXG5leHBvcnQgdHlwZSBTZWxlY3RvcjxULCBWPiA9IChzdGF0ZTogVCkgPT4gVjtcblxuZXhwb3J0IHR5cGUgU2VsZWN0b3JXaXRoUHJvcHM8U3RhdGUsIFByb3BzLCBSZXN1bHQ+ID0gKFxuICBzdGF0ZTogU3RhdGUsXG4gIHByb3BzOiBQcm9wc1xuKSA9PiBSZXN1bHQ7XG5cbmV4cG9ydCBjb25zdCBhcnJheXNBcmVOb3RBbGxvd2VkTXNnID1cbiAgJ2FycmF5cyBhcmUgbm90IGFsbG93ZWQgaW4gYWN0aW9uIGNyZWF0b3JzJztcbnR5cGUgQXJyYXlzQXJlTm90QWxsb3dlZCA9IHR5cGVvZiBhcnJheXNBcmVOb3RBbGxvd2VkTXNnO1xuXG5leHBvcnQgY29uc3QgdHlwZVByb3BlcnR5SXNOb3RBbGxvd2VkTXNnID1cbiAgJ3R5cGUgcHJvcGVydHkgaXMgbm90IGFsbG93ZWQgaW4gYWN0aW9uIGNyZWF0b3JzJztcbnR5cGUgVHlwZVByb3BlcnR5SXNOb3RBbGxvd2VkID0gdHlwZW9mIHR5cGVQcm9wZXJ0eUlzTm90QWxsb3dlZE1zZztcblxuZXhwb3J0IGNvbnN0IGVtcHR5T2JqZWN0c0FyZU5vdEFsbG93ZWRNc2cgPVxuICAnZW1wdHkgb2JqZWN0cyBhcmUgbm90IGFsbG93ZWQgaW4gYWN0aW9uIGNyZWF0b3JzJztcbnR5cGUgRW1wdHlPYmplY3RzQXJlTm90QWxsb3dlZCA9IHR5cGVvZiBlbXB0eU9iamVjdHNBcmVOb3RBbGxvd2VkTXNnO1xuXG5leHBvcnQgdHlwZSBGdW5jdGlvbklzTm90QWxsb3dlZDxcbiAgVCxcbiAgRXJyb3JNZXNzYWdlIGV4dGVuZHMgc3RyaW5nXG4+ID0gVCBleHRlbmRzIEZ1bmN0aW9uID8gRXJyb3JNZXNzYWdlIDogVDtcbi8qKlxuICogQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IGluIHRoZSBzaGFwZSBvZiB0aGUgYEFjdGlvbmAgaW50ZXJmYWNlLiAgQ29uZmlndXJlZCB1c2luZyBgY3JlYXRlQWN0aW9uYC5cbiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRvcjxcbiAgUCBleHRlbmRzIGFueVtdID0gYW55W10sXG4gIFIgZXh0ZW5kcyBvYmplY3QgPSBvYmplY3Rcbj4gPSBGdW5jdGlvbldpdGhQYXJhbWV0ZXJzVHlwZTxQLCBSPjtcblxuZXhwb3J0IHR5cGUgTm90QWxsb3dlZENoZWNrPFQgZXh0ZW5kcyBvYmplY3Q+ID0gVCBleHRlbmRzIGFueVtdXG4gID8gQXJyYXlzQXJlTm90QWxsb3dlZFxuICA6IFQgZXh0ZW5kcyB7IHR5cGU6IGFueSB9XG4gID8gVHlwZVByb3BlcnR5SXNOb3RBbGxvd2VkXG4gIDoga2V5b2YgVCBleHRlbmRzIG5ldmVyXG4gID8gRW1wdHlPYmplY3RzQXJlTm90QWxsb3dlZFxuICA6IHVua25vd247XG5cbi8qKlxuICogU2VlIGBDcmVhdG9yYC5cbiAqL1xuZXhwb3J0IHR5cGUgQWN0aW9uQ3JlYXRvcjxcbiAgVCBleHRlbmRzIHN0cmluZyA9IHN0cmluZyxcbiAgQyBleHRlbmRzIENyZWF0b3IgPSBDcmVhdG9yXG4+ID0gQyAmIFR5cGVkQWN0aW9uPFQ+O1xuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbkNyZWF0b3JQcm9wczxUPiB7XG4gIF9hczogJ3Byb3BzJztcbiAgX3A6IFQ7XG59XG5cbmV4cG9ydCB0eXBlIEZ1bmN0aW9uV2l0aFBhcmFtZXRlcnNUeXBlPFAgZXh0ZW5kcyB1bmtub3duW10sIFIgPSB2b2lkPiA9IChcbiAgLi4uYXJnczogUFxuKSA9PiBSO1xuXG5leHBvcnQgdHlwZSBQYXJhbWV0ZXJzVHlwZTxUPiA9IFQgZXh0ZW5kcyAoLi4uYXJnczogaW5mZXIgVSkgPT4gdW5rbm93blxuICA/IFVcbiAgOiBuZXZlcjtcblxuZXhwb3J0IGludGVyZmFjZSBSdW50aW1lQ2hlY2tzIHtcbiAgLyoqXG4gICAqIFZlcmlmaWVzIGlmIHRoZSBzdGF0ZSBpcyBzZXJpYWxpemFibGVcbiAgICovXG4gIHN0cmljdFN0YXRlU2VyaWFsaXphYmlsaXR5OiBib29sZWFuO1xuICAvKipcbiAgICogVmVyaWZpZXMgaWYgdGhlIGFjdGlvbnMgYXJlIHNlcmlhbGl6YWJsZS4gUGxlYXNlIG5vdGUsIHlvdSBtYXkgbm90IG5lZWQgdG8gc2V0IGl0IHRvIGB0cnVlYCB1bmxlc3MgeW91IGFyZSBzdG9yaW5nL3JlcGxheWluZyBhY3Rpb25zIHVzaW5nIGV4dGVybmFsIHJlc291cmNlcywgZm9yIGV4YW1wbGUgYGxvY2FsU3RvcmFnZWAuXG4gICAqL1xuICBzdHJpY3RBY3Rpb25TZXJpYWxpemFiaWxpdHk6IGJvb2xlYW47XG4gIC8qKlxuICAgKiBWZXJpZmllcyB0aGF0IHRoZSBzdGF0ZSBpc24ndCBtdXRhdGVkXG4gICAqL1xuICBzdHJpY3RTdGF0ZUltbXV0YWJpbGl0eTogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFZlcmlmaWVzIHRoYXQgYWN0aW9ucyBhcmVuJ3QgbXV0YXRlZFxuICAgKi9cbiAgc3RyaWN0QWN0aW9uSW1tdXRhYmlsaXR5OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBWZXJpZmllcyB0aGF0IGFjdGlvbnMgYXJlIGRpc3BhdGNoZWQgd2l0aGluIE5nWm9uZVxuICAgKi9cbiAgc3RyaWN0QWN0aW9uV2l0aGluTmdab25lOiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBWZXJpZmllcyB0aGF0IGFjdGlvbiB0eXBlcyBhcmUgbm90IHJlZ2lzdGVyZWQgbW9yZSB0aGFuIG9uY2VcbiAgICovXG4gIHN0cmljdEFjdGlvblR5cGVVbmlxdWVuZXNzPzogYm9vbGVhbjtcbn1cbiJdfQ==