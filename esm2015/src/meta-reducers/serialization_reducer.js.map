{"version":3,"file":"serialization_reducer.js","sourceRoot":"ng://@ngrx/store/","sources":["src/meta-reducers/serialization_reducer.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EACL,aAAa,EACb,WAAW,EACX,MAAM,EACN,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,OAAO,EACP,iBAAiB,EACjB,WAAW,GACZ,MAAM,SAAS,CAAC;;;;;;AAEjB,MAAM,UAAU,6BAA6B,CAC3C,OAAgC,EAChC,MAAqE;IAErE;;;;;IAAO,UAAS,KAAK,EAAE,MAAM;QAC3B,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;;kBACnB,oBAAoB,GAAG,iBAAiB,CAAC,MAAM,CAAC;YACtD,qBAAqB,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC;SACvD;;cAEK,SAAS,GAAG,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;QAExC,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;;kBACZ,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,CAAC;YACxD,qBAAqB,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;SACrD;QAED,OAAO,SAAS,CAAC;IACnB,CAAC,EAAC;AACJ,CAAC;;;;;;AAED,SAAS,iBAAiB,CACxB,MAAY,EACZ,OAAiB,EAAE;IAEnB,0EAA0E;IAC1E,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QAChE,OAAO;YACL,IAAI,EAAE,CAAC,MAAM,CAAC;YACd,KAAK,EAAE,MAAM;SACd,CAAC;KACH;;UAEK,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IAChC,OAAO,IAAI,CAAC,MAAM;;;;;IAAyC,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QACzE,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC;SACf;;cAEK,KAAK,GAAG,CAAC,mBAAA,MAAM,EAAO,CAAC,CAAC,GAAG,CAAC;QAElC,wBAAwB;QACxB,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;YACtB,OAAO,MAAM,CAAC;SACf;QAED,IACE,WAAW,CAAC,KAAK,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC;YACb,QAAQ,CAAC,KAAK,CAAC;YACf,SAAS,CAAC,KAAK,CAAC;YAChB,QAAQ,CAAC,KAAK,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,EACd;YACA,OAAO,KAAK,CAAC;SACd;QAED,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SACjD;QAED,OAAO;YACL,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,CAAC;YACpB,KAAK;SACN,CAAC;IACJ,CAAC,GAAE,KAAK,CAAC,CAAC;AACZ,CAAC;;;;;;AAED,SAAS,qBAAqB,CAC5B,cAAsD,EACtD,OAA2B;IAE3B,IAAI,cAAc,KAAK,KAAK,EAAE;QAC5B,OAAO;KACR;;UAEK,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;;UAClD,KAAK,GAAQ,IAAI,KAAK,CAC1B,2BAA2B,OAAO,QAAQ,kBAAkB,MAAM,iBAAiB,UAAU,OAAO,iBAAiB,CACtH;IACD,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;IACnC,KAAK,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC9C,MAAM,KAAK,CAAC;AACd,CAAC","sourcesContent":["import { ActionReducer, Action } from '../models';\nimport {\n  isPlainObject,\n  isUndefined,\n  isNull,\n  isNumber,\n  isBoolean,\n  isString,\n  isArray,\n  RUNTIME_CHECK_URL,\n  isComponent,\n} from './utils';\n\nexport function serializationCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function(state, action) {\n    if (checks.action(action)) {\n      const unserializableAction = getUnserializable(action);\n      throwIfUnserializable(unserializableAction, 'action');\n    }\n\n    const nextState = reducer(state, action);\n\n    if (checks.state()) {\n      const unserializableState = getUnserializable(nextState);\n      throwIfUnserializable(unserializableState, 'state');\n    }\n\n    return nextState;\n  };\n}\n\nfunction getUnserializable(\n  target?: any,\n  path: string[] = []\n): false | { path: string[]; value: any } {\n  // Guard against undefined and null, e.g. a reducer that returns undefined\n  if ((isUndefined(target) || isNull(target)) && path.length === 0) {\n    return {\n      path: ['root'],\n      value: target,\n    };\n  }\n\n  const keys = Object.keys(target);\n  return keys.reduce<false | { path: string[]; value: any }>((result, key) => {\n    if (result) {\n      return result;\n    }\n\n    const value = (target as any)[key];\n\n    // Ignore Ivy components\n    if (isComponent(value)) {\n      return result;\n    }\n\n    if (\n      isUndefined(value) ||\n      isNull(value) ||\n      isNumber(value) ||\n      isBoolean(value) ||\n      isString(value) ||\n      isArray(value)\n    ) {\n      return false;\n    }\n\n    if (isPlainObject(value)) {\n      return getUnserializable(value, [...path, key]);\n    }\n\n    return {\n      path: [...path, key],\n      value,\n    };\n  }, false);\n}\n\nfunction throwIfUnserializable(\n  unserializable: false | { path: string[]; value: any },\n  context: 'state' | 'action'\n) {\n  if (unserializable === false) {\n    return;\n  }\n\n  const unserializablePath = unserializable.path.join('.');\n  const error: any = new Error(\n    `Detected unserializable ${context} at \"${unserializablePath}\". ${RUNTIME_CHECK_URL}#strict${context}serializability`\n  );\n  error.value = unserializable.value;\n  error.unserializablePath = unserializablePath;\n  throw error;\n}\n"]}