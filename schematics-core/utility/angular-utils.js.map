{"version":3,"file":"angular-utils.js","sourceRoot":"","sources":["../../../../../modules/store/schematics-core/utility/angular-utils.ts"],"names":[],"mappings":";;;AAAA,6CAM8B;AAE9B,6CAAwD;AAExD,8GAA8G;AAC9G,SAAgB,YAAY,CAAC,IAAU,EAAE,YAAoB;IAC3D,4CAA4C;IAC5C,0DAA0D;IAE1D,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACvC,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,IAAI,CAAC;KACb;IAED,IAAM,QAAQ,GAAG,mBAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,oBAAa,CAAC,KAAK,CAAC,CAAC;IAEtE,IAAI,QAAQ,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC9B,OAAO,IAAI,CAAC;KACb;IAED,IAAM,iBAAiB,GAAG,qCAAuB,CAC/C,QAAQ,EACR,wBAAwB,CACzB,CAAC;IACF,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,IAAI,KAAK,QAAQ,EAAE;QAC5D,IAAM,SAAS,GAAG,qCAAuB,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;QAE1E,IAAI,SAAS,EAAE;YACb,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;SAC1B;KACF;IAED,IAAM,aAAa,GAAG,qCAAuB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACnE,IAAI,aAAa,IAAI,aAAa,CAAC,IAAI,KAAK,QAAQ,EAAE;QACpD,IAAM,oBAAoB,GAAG,cAAO,CAClC,cAAO,CAAC,gBAAS,CAAC,YAAY,CAAC,CAAC,EAChC,gBAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAC/B,CAAC;QAEF,OAAO,YAAY,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;KACjD;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAtCD,oCAsCC","sourcesContent":["import {\n  JsonParseMode,\n  dirname,\n  normalize,\n  parseJsonAst,\n  resolve,\n} from '@angular-devkit/core';\nimport { Tree } from '@angular-devkit/schematics';\nimport { findPropertyInAstObject } from './json-utilts';\n\n// https://github.com/angular/angular-cli/blob/master/packages/schematics/angular/migrations/update-9/utils.ts\nexport function isIvyEnabled(tree: Tree, tsConfigPath: string): boolean {\n  // In version 9, Ivy is turned on by default\n  // Ivy is opted out only when 'enableIvy' is set to false.\n\n  const buffer = tree.read(tsConfigPath);\n  if (!buffer) {\n    return true;\n  }\n\n  const tsCfgAst = parseJsonAst(buffer.toString(), JsonParseMode.Loose);\n\n  if (tsCfgAst.kind !== 'object') {\n    return true;\n  }\n\n  const ngCompilerOptions = findPropertyInAstObject(\n    tsCfgAst,\n    'angularCompilerOptions'\n  );\n  if (ngCompilerOptions && ngCompilerOptions.kind === 'object') {\n    const enableIvy = findPropertyInAstObject(ngCompilerOptions, 'enableIvy');\n\n    if (enableIvy) {\n      return !!enableIvy.value;\n    }\n  }\n\n  const configExtends = findPropertyInAstObject(tsCfgAst, 'extends');\n  if (configExtends && configExtends.kind === 'string') {\n    const extendedTsConfigPath = resolve(\n      dirname(normalize(tsConfigPath)),\n      normalize(configExtends.value)\n    );\n\n    return isIvyEnabled(tree, extendedTsConfigPath);\n  }\n\n  return true;\n}\n"]}