{"version":3,"file":"immutability_reducer.js","sourceRoot":"ng://@ngrx/store/","sources":["src/meta-reducers/immutability_reducer.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;;;;;;AAEnE,MAAM,UAAU,4BAA4B,CAC1C,OAAgC,EAChC,MAAqE;IAErE;;;;;IAAO,UAAS,KAAK,EAAE,MAAM;;YACrB,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM;;YAErD,SAAS,GAAG,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;QAErC,OAAO,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IACxD,CAAC,EAAC;AACJ,CAAC;;;;;AAED,SAAS,MAAM,CAAC,MAAW;IACzB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;QAEhB,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC;IAE3C,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,OAAO;;;;IAAC,UAAA,IAAI;QAC7C,kGAAkG;QAClG,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO;SACR;QAED,IACE,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC;YAC5B,CAAC,gBAAgB;gBACf,CAAC,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,WAAW;gBAChE,CAAC,CAAC,IAAI,CAAC,EACT;;gBACM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;YAE9B,IACE,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC;gBAClD,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAC3B;gBACA,MAAM,CAAC,SAAS,CAAC,CAAC;aACnB;SACF;IACH,CAAC,EAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import { ActionReducer, Action } from '../models';\nimport { isFunction, hasOwnProperty, isObjectLike } from './utils';\n\nexport function immutabilityCheckMetaReducer(\n  reducer: ActionReducer<any, any>,\n  checks: { action: (action: Action) => boolean; state: () => boolean }\n): ActionReducer<any, any> {\n  return function(state, action) {\n    const act = checks.action(action) ? freeze(action) : action;\n\n    const nextState = reducer(state, act);\n\n    return checks.state() ? freeze(nextState) : nextState;\n  };\n}\n\nfunction freeze(target: any) {\n  Object.freeze(target);\n\n  const targetIsFunction = isFunction(target);\n\n  Object.getOwnPropertyNames(target).forEach(prop => {\n    // Ignore Ivy properties, ref: https://github.com/ngrx/platform/issues/2109#issuecomment-582689060\n    if (prop.startsWith('Éµ')) {\n      return;\n    }\n\n    if (\n      hasOwnProperty(target, prop) &&\n      (targetIsFunction\n        ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments'\n        : true)\n    ) {\n      const propValue = target[prop];\n\n      if (\n        (isObjectLike(propValue) || isFunction(propValue)) &&\n        !Object.isFrozen(propValue)\n      ) {\n        freeze(propValue);\n      }\n    }\n  });\n\n  return target;\n}\n"]}