{"version":3,"file":"runtime_checks.js","sourceRoot":"ng://@ngrx/store/","sources":["src/runtime_checks.ts"],"names":[],"mappings":"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","sourcesContent":["import { isDevMode, Provider } from '@angular/core';\nimport {\n  serializationCheckMetaReducer,\n  immutabilityCheckMetaReducer,\n  inNgZoneAssertMetaReducer,\n} from './meta-reducers';\nimport { RuntimeChecks, MetaReducer, Action } from './models';\nimport {\n  _USER_RUNTIME_CHECKS,\n  _ACTIVE_RUNTIME_CHECKS,\n  META_REDUCERS,\n  USER_RUNTIME_CHECKS,\n  _ACTION_TYPE_UNIQUENESS_CHECK,\n} from './tokens';\nimport { REGISTERED_ACTION_TYPES } from './globals';\nimport { RUNTIME_CHECK_URL } from './meta-reducers/utils';\n\nexport function createActiveRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): RuntimeChecks {\n  if (isDevMode()) {\n    return {\n      strictStateSerializability: false,\n      strictActionSerializability: false,\n      strictStateImmutability: true,\n      strictActionImmutability: true,\n      strictActionWithinNgZone: false,\n      strictActionTypeUniqueness: false,\n      ...runtimeChecks,\n    };\n  }\n\n  return {\n    strictStateSerializability: false,\n    strictActionSerializability: false,\n    strictStateImmutability: false,\n    strictActionImmutability: false,\n    strictActionWithinNgZone: false,\n    strictActionTypeUniqueness: false,\n  };\n}\n\nexport function createSerializationCheckMetaReducer({\n  strictActionSerializability,\n  strictStateSerializability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionSerializability || strictStateSerializability\n      ? serializationCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionSerializability && !ignoreNgrxAction(action),\n          state: () => strictStateSerializability,\n        })\n      : reducer;\n}\n\nexport function createImmutabilityCheckMetaReducer({\n  strictActionImmutability,\n  strictStateImmutability,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionImmutability || strictStateImmutability\n      ? immutabilityCheckMetaReducer(reducer, {\n          action: (action) =>\n            strictActionImmutability && !ignoreNgrxAction(action),\n          state: () => strictStateImmutability,\n        })\n      : reducer;\n}\n\nfunction ignoreNgrxAction(action: Action) {\n  return action.type.startsWith('@ngrx');\n}\n\nexport function createInNgZoneCheckMetaReducer({\n  strictActionWithinNgZone,\n}: RuntimeChecks): MetaReducer {\n  return (reducer) =>\n    strictActionWithinNgZone\n      ? inNgZoneAssertMetaReducer(reducer, {\n          action: (action) =>\n            strictActionWithinNgZone && !ignoreNgrxAction(action),\n        })\n      : reducer;\n}\n\nexport function provideRuntimeChecks(\n  runtimeChecks?: Partial<RuntimeChecks>\n): Provider[] {\n  return [\n    {\n      provide: _USER_RUNTIME_CHECKS,\n      useValue: runtimeChecks,\n    },\n    {\n      provide: USER_RUNTIME_CHECKS,\n      useFactory: _runtimeChecksFactory,\n      deps: [_USER_RUNTIME_CHECKS],\n    },\n    {\n      provide: _ACTIVE_RUNTIME_CHECKS,\n      deps: [USER_RUNTIME_CHECKS],\n      useFactory: createActiveRuntimeChecks,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createImmutabilityCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createSerializationCheckMetaReducer,\n    },\n    {\n      provide: META_REDUCERS,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: createInNgZoneCheckMetaReducer,\n    },\n  ];\n}\n\nexport function checkForActionTypeUniqueness(): Provider[] {\n  return [\n    {\n      provide: _ACTION_TYPE_UNIQUENESS_CHECK,\n      multi: true,\n      deps: [_ACTIVE_RUNTIME_CHECKS],\n      useFactory: _actionTypeUniquenessCheck,\n    },\n  ];\n}\n\nexport function _runtimeChecksFactory(\n  runtimeChecks: RuntimeChecks\n): RuntimeChecks {\n  return runtimeChecks;\n}\n\nexport function _actionTypeUniquenessCheck(config: RuntimeChecks): void {\n  if (!config.strictActionTypeUniqueness) {\n    return;\n  }\n\n  const duplicates = Object.entries(REGISTERED_ACTION_TYPES)\n    .filter(([, registrations]) => registrations > 1)\n    .map(([type]) => type);\n\n  if (duplicates.length) {\n    throw new Error(\n      `Action types are registered more than once, ${duplicates\n        .map((type) => `\"${type}\"`)\n        .join(', ')}. ${RUNTIME_CHECK_URL}#strictactiontypeuniqueness`\n    );\n  }\n}\n"]}