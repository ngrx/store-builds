export var arraysAreNotAllowedMsg = 'arrays are not allowed in action creators';
export var typePropertyIsNotAllowedMsg = 'type property is not allowed in action creators';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9zdG9yZS9zcmMvbW9kZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVEQSxNQUFNLENBQUMsSUFBTSxzQkFBc0IsR0FDakMsMkNBQTJDLENBQUM7QUFHOUMsTUFBTSxDQUFDLElBQU0sMkJBQTJCLEdBQ3RDLGlEQUFpRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBBY3Rpb24ge1xuICB0eXBlOiBzdHJpbmc7XG59XG5cbi8vIGRlY2xhcmUgdG8gbWFrZSBpdCBwcm9wZXJ0eS1yZW5hbWluZyBzYWZlXG5leHBvcnQgZGVjbGFyZSBpbnRlcmZhY2UgVHlwZWRBY3Rpb248VCBleHRlbmRzIHN0cmluZz4gZXh0ZW5kcyBBY3Rpb24ge1xuICByZWFkb25seSB0eXBlOiBUO1xufVxuXG5leHBvcnQgdHlwZSBBY3Rpb25UeXBlPEE+ID0gQSBleHRlbmRzIEFjdGlvbkNyZWF0b3I8aW5mZXIgVCwgaW5mZXIgQz5cbiAgPyBSZXR1cm5UeXBlPEM+ICYgeyB0eXBlOiBUIH1cbiAgOiBuZXZlcjtcblxuZXhwb3J0IHR5cGUgVHlwZUlkPFQ+ID0gKCkgPT4gVDtcblxuZXhwb3J0IHR5cGUgSW5pdGlhbFN0YXRlPFQ+ID0gUGFydGlhbDxUPiB8IFR5cGVJZDxQYXJ0aWFsPFQ+PiB8IHZvaWQ7XG5cbi8qKlxuICogQSBmdW5jdGlvbiB0aGF0IHRha2VzIGFuIGBBY3Rpb25gIGFuZCBhIGBTdGF0ZWAsIGFuZCByZXR1cm5zIGEgYFN0YXRlYC5cbiAqIFNlZSBgY3JlYXRlUmVkdWNlcmAuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQWN0aW9uUmVkdWNlcjxULCBWIGV4dGVuZHMgQWN0aW9uID0gQWN0aW9uPiB7XG4gIChzdGF0ZTogVCB8IHVuZGVmaW5lZCwgYWN0aW9uOiBWKTogVDtcbn1cblxuZXhwb3J0IHR5cGUgQWN0aW9uUmVkdWNlck1hcDxULCBWIGV4dGVuZHMgQWN0aW9uID0gQWN0aW9uPiA9IHtcbiAgW3AgaW4ga2V5b2YgVF06IEFjdGlvblJlZHVjZXI8VFtwXSwgVj47XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvblJlZHVjZXJGYWN0b3J5PFQsIFYgZXh0ZW5kcyBBY3Rpb24gPSBBY3Rpb24+IHtcbiAgKFxuICAgIHJlZHVjZXJNYXA6IEFjdGlvblJlZHVjZXJNYXA8VCwgVj4sXG4gICAgaW5pdGlhbFN0YXRlPzogSW5pdGlhbFN0YXRlPFQ+XG4gICk6IEFjdGlvblJlZHVjZXI8VCwgVj47XG59XG5cbmV4cG9ydCB0eXBlIE1ldGFSZWR1Y2VyPFQgPSBhbnksIFYgZXh0ZW5kcyBBY3Rpb24gPSBBY3Rpb24+ID0gKFxuICByZWR1Y2VyOiBBY3Rpb25SZWR1Y2VyPFQsIFY+XG4pID0+IEFjdGlvblJlZHVjZXI8VCwgVj47XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmVGZWF0dXJlPFQsIFYgZXh0ZW5kcyBBY3Rpb24gPSBBY3Rpb24+IHtcbiAga2V5OiBzdHJpbmc7XG4gIHJlZHVjZXJzOiBBY3Rpb25SZWR1Y2VyTWFwPFQsIFY+IHwgQWN0aW9uUmVkdWNlcjxULCBWPjtcbiAgcmVkdWNlckZhY3Rvcnk6IEFjdGlvblJlZHVjZXJGYWN0b3J5PFQsIFY+O1xuICBpbml0aWFsU3RhdGU/OiBJbml0aWFsU3RhdGU8VD47XG4gIG1ldGFSZWR1Y2Vycz86IE1ldGFSZWR1Y2VyPFQsIFY+W107XG59XG5cbmV4cG9ydCB0eXBlIFNlbGVjdG9yPFQsIFY+ID0gKHN0YXRlOiBUKSA9PiBWO1xuXG5leHBvcnQgdHlwZSBTZWxlY3RvcldpdGhQcm9wczxTdGF0ZSwgUHJvcHMsIFJlc3VsdD4gPSAoXG4gIHN0YXRlOiBTdGF0ZSxcbiAgcHJvcHM6IFByb3BzXG4pID0+IFJlc3VsdDtcblxuZXhwb3J0IGNvbnN0IGFycmF5c0FyZU5vdEFsbG93ZWRNc2cgPVxuICAnYXJyYXlzIGFyZSBub3QgYWxsb3dlZCBpbiBhY3Rpb24gY3JlYXRvcnMnO1xudHlwZSBBcnJheXNBcmVOb3RBbGxvd2VkID0gdHlwZW9mIGFycmF5c0FyZU5vdEFsbG93ZWRNc2c7XG5cbmV4cG9ydCBjb25zdCB0eXBlUHJvcGVydHlJc05vdEFsbG93ZWRNc2cgPVxuICAndHlwZSBwcm9wZXJ0eSBpcyBub3QgYWxsb3dlZCBpbiBhY3Rpb24gY3JlYXRvcnMnO1xudHlwZSBUeXBlUHJvcGVydHlJc05vdEFsbG93ZWQgPSB0eXBlb2YgdHlwZVByb3BlcnR5SXNOb3RBbGxvd2VkTXNnO1xuXG5leHBvcnQgdHlwZSBGdW5jdGlvbklzTm90QWxsb3dlZDxcbiAgVCxcbiAgRXJyb3JNZXNzYWdlIGV4dGVuZHMgc3RyaW5nXG4+ID0gVCBleHRlbmRzIEZ1bmN0aW9uID8gRXJyb3JNZXNzYWdlIDogVDtcbi8qKlxuICogQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYW4gb2JqZWN0IGluIHRoZSBzaGFwZSBvZiB0aGUgYEFjdGlvbmAgaW50ZXJmYWNlLiAgQ29uZmlndXJlZCB1c2luZyBgY3JlYXRlQWN0aW9uYC5cbiAqL1xuZXhwb3J0IHR5cGUgQ3JlYXRvcjxcbiAgUCBleHRlbmRzIGFueVtdID0gYW55W10sXG4gIFIgZXh0ZW5kcyBvYmplY3QgPSBvYmplY3Rcbj4gPSBGdW5jdGlvbldpdGhQYXJhbWV0ZXJzVHlwZTxQLCBSPjtcblxuZXhwb3J0IHR5cGUgTm90QWxsb3dlZENoZWNrPFQgZXh0ZW5kcyBvYmplY3Q+ID0gVCBleHRlbmRzIGFueVtdXG4gID8gQXJyYXlzQXJlTm90QWxsb3dlZFxuICA6IFQgZXh0ZW5kcyB7IHR5cGU6IGFueSB9XG4gID8gVHlwZVByb3BlcnR5SXNOb3RBbGxvd2VkXG4gIDogdW5rbm93bjtcblxuLyoqXG4gKiBTZWUgYENyZWF0b3JgLlxuICovXG5leHBvcnQgdHlwZSBBY3Rpb25DcmVhdG9yPFxuICBUIGV4dGVuZHMgc3RyaW5nID0gc3RyaW5nLFxuICBDIGV4dGVuZHMgQ3JlYXRvciA9IENyZWF0b3Jcbj4gPSBDICYgVHlwZWRBY3Rpb248VD47XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvcHM8VD4ge1xuICBfYXM6ICdwcm9wcyc7XG4gIF9wOiBUO1xufVxuXG5leHBvcnQgdHlwZSBGdW5jdGlvbldpdGhQYXJhbWV0ZXJzVHlwZTxQIGV4dGVuZHMgdW5rbm93bltdLCBSID0gdm9pZD4gPSAoXG4gIC4uLmFyZ3M6IFBcbikgPT4gUjtcblxuZXhwb3J0IHR5cGUgUGFyYW1ldGVyc1R5cGU8VD4gPSBUIGV4dGVuZHMgKC4uLmFyZ3M6IGluZmVyIFUpID0+IHVua25vd25cbiAgPyBVXG4gIDogbmV2ZXI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUnVudGltZUNoZWNrcyB7XG4gIC8qKlxuICAgKiBWZXJpZmllcyBpZiB0aGUgc3RhdGUgaXMgc2VyaWFsaXphYmxlXG4gICAqL1xuICBzdHJpY3RTdGF0ZVNlcmlhbGl6YWJpbGl0eTogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFZlcmlmaWVzIGlmIHRoZSBhY3Rpb25zIGFyZSBzZXJpYWxpemFibGUuIFBsZWFzZSBub3RlLCB5b3UgbWF5IG5vdCBuZWVkIHRvIHNldCBpdCB0byBgdHJ1ZWAgdW5sZXNzIHlvdSBhcmUgc3RvcmluZy9yZXBsYXlpbmcgYWN0aW9ucyB1c2luZyBleHRlcm5hbCByZXNvdXJjZXMsIGZvciBleGFtcGxlIGBsb2NhbFN0b3JhZ2VgLlxuICAgKi9cbiAgc3RyaWN0QWN0aW9uU2VyaWFsaXphYmlsaXR5OiBib29sZWFuO1xuICAvKipcbiAgICogVmVyaWZpZXMgdGhhdCB0aGUgc3RhdGUgaXNuJ3QgbXV0YXRlZFxuICAgKi9cbiAgc3RyaWN0U3RhdGVJbW11dGFiaWxpdHk6IGJvb2xlYW47XG4gIC8qKlxuICAgKiBWZXJpZmllcyB0aGF0IGFjdGlvbnMgYXJlbid0IG11dGF0ZWRcbiAgICovXG4gIHN0cmljdEFjdGlvbkltbXV0YWJpbGl0eTogYm9vbGVhbjtcblxuICAvKipcbiAgICogVmVyaWZpZXMgdGhhdCBhY3Rpb25zIGFyZSBkaXNwYXRjaGVkIHdpdGhpbiBOZ1pvbmVcbiAgICovXG4gIHN0cmljdEFjdGlvbldpdGhpbk5nWm9uZTogYm9vbGVhbjtcblxuICAvKipcbiAgICogVmVyaWZpZXMgdGhhdCBhY3Rpb24gdHlwZXMgYXJlIG5vdCByZWdpc3RlcmVkIG1vcmUgdGhhbiBvbmNlXG4gICAqL1xuICBzdHJpY3RBY3Rpb25UeXBlVW5pcXVlbmVzcz86IGJvb2xlYW47XG59XG4iXX0=